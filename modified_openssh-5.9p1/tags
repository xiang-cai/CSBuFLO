!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AES_BLOCK_LEN	./umac.c	168;"	d	file:
AGE_FACTOR	./progressmeter.c	152;"	d	file:
ALG_APPEND	./sshconnect2.c	128;"	d	file:
ALG_APPEND	./sshconnect2.c	144;"	d	file:
ALLOC_BOUNDARY	./umac.c	314;"	d	file:
ARGV_MAX	./session.c	1616;"	d	file:
AUE_openssh	./audit-bsm.c	56;"	d	file:
AUTH_CONNECTION	./ssh-agent.c	/^	AUTH_CONNECTION$/;"	e	enum:__anon18	file:
AUTH_SOCKET	./ssh-agent.c	/^	AUTH_SOCKET,$/;"	e	enum:__anon18	file:
AUTH_UNUSED	./ssh-agent.c	/^	AUTH_UNUSED,$/;"	e	enum:__anon18	file:
AUToReturnFunc	./audit-bsm.c	70;"	d	file:
AUToReturnFunc	./audit-bsm.c	77;"	d	file:
AUToSubjectFunc	./audit-bsm.c	69;"	d	file:
AUToSubjectFunc	./audit-bsm.c	76;"	d	file:
AuditInfoStruct	./audit-bsm.c	65;"	d	file:
AuditInfoStruct	./audit-bsm.c	72;"	d	file:
AuditInfoTermID	./audit-bsm.c	66;"	d	file:
AuditInfoTermID	./audit-bsm.c	73;"	d	file:
AuthMethod1	./auth1.c	/^struct AuthMethod1 {$/;"	s	file:
Authctxt	./sshconnect2.c	/^struct Authctxt {$/;"	s	file:
Authctxt	./sshconnect2.c	/^typedef struct Authctxt Authctxt;$/;"	t	typeref:struct:Authctxt	file:
Authmethod	./sshconnect2.c	/^struct Authmethod {$/;"	s	file:
Authmethod	./sshconnect2.c	/^typedef struct Authmethod Authmethod;$/;"	t	typeref:struct:Authmethod	file:
BIT_CLEAR	./moduli.c	113;"	d	file:
BIT_SET	./moduli.c	114;"	d	file:
BIT_TEST	./moduli.c	115;"	d	file:
BUF	./scp.c	/^} BUF;$/;"	t	typeref:struct:__anon12	file:
BUFFER_ALLOCSZ	./buffer.c	29;"	d	file:
BUFFER_MAX_CHUNK	./buffer.c	27;"	d	file:
BUFFER_MAX_ECPOINT_LEN	./bufec.c	43;"	d	file:
BUFFER_MAX_LEN	./buffer.c	28;"	d	file:
CERTOPT_AGENT_FWD	./ssh-keygen.c	124;"	d	file:
CERTOPT_DEFAULT	./ssh-keygen.c	128;"	d	file:
CERTOPT_PORT_FWD	./ssh-keygen.c	125;"	d	file:
CERTOPT_PTY	./ssh-keygen.c	126;"	d	file:
CERTOPT_USER_RC	./ssh-keygen.c	127;"	d	file:
CERTOPT_X_FWD	./ssh-keygen.c	123;"	d	file:
CHANNEL_MUX_MAX_PACKET	./channels.c	1946;"	d	file:
CIPHER_SEP	./cipher.c	152;"	d	file:
CMD	./sftp.c	/^struct CMD {$/;"	s	file:
CMDNEEDS	./scp.c	357;"	d	file:
CMP	./deattack.c	71;"	d	file:
COPY_BUFLEN	./scp.c	119;"	d	file:
CRYPTOKI_COMPAT	./ssh-pkcs11.c	34;"	d	file:
CS_CON	./ssh-keyscan.c	87;"	d	file:
CS_KEYS	./ssh-keyscan.c	89;"	d	file:
CS_SIZE	./ssh-keyscan.c	88;"	d	file:
CS_UNUSED	./ssh-keyscan.c	86;"	d	file:
Cipher	./cipher.c	/^struct Cipher {$/;"	s	file:
Connection	./ssh-keyscan.c	/^typedef struct Connection {$/;"	s	file:
DAY	./auth-passwd.c	65;"	d	file:
DAY	./auth-shadow.c	40;"	d	file:
DAY	./auth-shadow.c	42;"	d	file:
DAYS	./misc.c	611;"	d	file:
DBG	./packet.c	83;"	d	file:
DBG	./packet.c	85;"	d	file:
DEFAULT_BITS	./ssh-keygen.c	55;"	d	file:
DEFAULT_BITS_DSA	./ssh-keygen.c	56;"	d	file:
DEFAULT_BITS_ECDSA	./ssh-keygen.c	57;"	d	file:
DEFAULT_COPY_BUFLEN	./sftp.c	71;"	d	file:
DEFAULT_NUM_REQUESTS	./sftp.c	72;"	d	file:
DEFAULT_WINSIZE	./progressmeter.c	43;"	d	file:
DISPATCH_MAX	./dispatch.c	40;"	d	file:
EVP_ACSS_KEY	./cipher-acss.c	/^} EVP_ACSS_KEY;$/;"	t	typeref:struct:__anon3	file:
EVP_CTRL_SET_ACSS_MODE	./cipher-acss.c	34;"	d	file:
EVP_CTRL_SET_ACSS_SUBKEY	./cipher-acss.c	35;"	d	file:
EVP_X_STATE	./cipher.c	399;"	d	file:
EVP_X_STATE	./cipher.c	402;"	d	file:
EVP_X_STATE_LEN	./cipher.c	400;"	d	file:
EVP_X_STATE_LEN	./cipher.c	403;"	d	file:
EXPAND_MAX_KEYS	./misc.c	900;"	d	file:
EXPAND_MAX_KEYS	./misc.c	950;"	d	file:
EditLine	./sftp.c	/^typedef void EditLine;$/;"	t	file:
FD_CLOSEONEXEC	./monitor.c	1946;"	d	file:
FILEMODEMASK	./scp.c	790;"	d	file:
FLDBASE	./key.c	488;"	d	file:
FLDSIZE_X	./key.c	490;"	d	file:
FLDSIZE_Y	./key.c	489;"	d	file:
FMT_PEM	./ssh-keygen.c	/^	FMT_PEM$/;"	e	enum:__anon22	file:
FMT_PKCS8	./ssh-keygen.c	/^	FMT_PKCS8,$/;"	e	enum:__anon22	file:
FMT_RFC4716	./ssh-keygen.c	/^	FMT_RFC4716,$/;"	e	enum:__anon22	file:
FULL_UNROLL	./rijndael.c	35;"	d	file:
ForwardPermission	./channels.c	/^} ForwardPermission;$/;"	t	typeref:struct:__anon2	file:
GETU32	./rijndael.c	719;"	d	file:
HANDLE_DIR	./sftp-server.c	/^	HANDLE_DIR,$/;"	e	enum:__anon17	file:
HANDLE_FILE	./sftp-server.c	/^	HANDLE_FILE$/;"	e	enum:__anon17	file:
HANDLE_UNUSED	./sftp-server.c	/^	HANDLE_UNUSED,$/;"	e	enum:__anon17	file:
HASH	./deattack.c	69;"	d	file:
HASH_BUF_BYTES	./umac.c	315;"	d	file:
HASH_ENTRYSIZE	./deattack.c	59;"	d	file:
HASH_FACTOR	./deattack.c	60;"	d	file:
HASH_IV	./deattack.c	63;"	d	file:
HASH_MINBLOCKS	./deattack.c	65;"	d	file:
HASH_MINSIZE	./deattack.c	58;"	d	file:
HASH_UNUSED	./deattack.c	62;"	d	file:
HASH_UNUSEDCHAR	./deattack.c	61;"	d	file:
HOURS	./misc.c	610;"	d	file:
Handle	./sftp-server.c	/^struct Handle {$/;"	s	file:
Handle	./sftp-server.c	/^typedef struct Handle Handle;$/;"	t	typeref:struct:Handle	file:
INTBLOB_LEN	./ssh-dss.c	42;"	d	file:
IPv4or6	./channels.c	/^static int IPv4or6 = AF_UNSPEC;$/;"	v	file:
IPv4or6	./ssh-keyscan.c	/^int IPv4or6 = AF_UNSPEC;$/;"	v
IS_INTERNAL_SFTP	./session.c	103;"	d	file:
I_CHDIR	./sftp.c	127;"	d	file:
I_CHGRP	./sftp.c	128;"	d	file:
I_CHMOD	./sftp.c	129;"	d	file:
I_CHOWN	./sftp.c	130;"	d	file:
I_DF	./sftp.c	131;"	d	file:
I_GET	./sftp.c	132;"	d	file:
I_HELP	./sftp.c	133;"	d	file:
I_LCHDIR	./sftp.c	134;"	d	file:
I_LINK	./sftp.c	135;"	d	file:
I_LLS	./sftp.c	136;"	d	file:
I_LMKDIR	./sftp.c	137;"	d	file:
I_LPWD	./sftp.c	138;"	d	file:
I_LS	./sftp.c	139;"	d	file:
I_LUMASK	./sftp.c	140;"	d	file:
I_MKDIR	./sftp.c	141;"	d	file:
I_PROGRESS	./sftp.c	151;"	d	file:
I_PUT	./sftp.c	142;"	d	file:
I_PWD	./sftp.c	143;"	d	file:
I_QUIT	./sftp.c	144;"	d	file:
I_RENAME	./sftp.c	145;"	d	file:
I_RM	./sftp.c	146;"	d	file:
I_RMDIR	./sftp.c	147;"	d	file:
I_SHELL	./sftp.c	148;"	d	file:
I_SYMLINK	./sftp.c	149;"	d	file:
I_VERSION	./sftp.c	150;"	d	file:
Identity	./ssh-agent.c	/^} Identity;$/;"	t	typeref:struct:identity	file:
Identity	./sshconnect2.c	/^typedef struct identity Identity;$/;"	t	typeref:struct:identity	file:
Idlist	./sshconnect2.c	/^typedef struct idlist Idlist;$/;"	t	typeref:struct:idlist	file:
Idtab	./ssh-agent.c	/^} Idtab;$/;"	t	typeref:struct:__anon20	file:
JPAKE_BN_CLEAR_FREE	./jpake.c	133;"	d	file:
JPAKE_BN_CLEAR_FREE	./jpake.c	98;"	d	file:
JPAKE_BUF_CLEAR_FREE	./jpake.c	105;"	d	file:
JPAKE_BUF_CLEAR_FREE	./jpake.c	134;"	d	file:
JPAKE_DUMP_BN	./jpake.c	160;"	d	file:
JPAKE_DUMP_BUF	./jpake.c	164;"	d	file:
JPAKE_GROUP_G	./jpake.c	56;"	d	file:
JPAKE_GROUP_P	./jpake.c	57;"	d	file:
KT_DSA	./ssh-keyscan.c	56;"	d	file:
KT_ECDSA	./ssh-keyscan.c	58;"	d	file:
KT_RSA	./ssh-keyscan.c	57;"	d	file:
KT_RSA1	./ssh-keyscan.c	55;"	d	file:
KbdintAuthctxt	./auth2-chall.c	/^struct KbdintAuthctxt$/;"	s	file:
KbdintAuthctxt	./auth2-chall.c	/^typedef struct KbdintAuthctxt KbdintAuthctxt;$/;"	t	typeref:struct:KbdintAuthctxt	file:
L1_KEY_LEN	./umac.c	311;"	d	file:
L1_KEY_SHIFT	./umac.c	312;"	d	file:
L1_PAD_BOUNDARY	./umac.c	313;"	d	file:
LARGE_MAXIMUM	./moduli.c	95;"	d	file:
LARGE_MINIMUM	./moduli.c	89;"	d	file:
LOAD_UINT32_LITTLE	./umac.c	154;"	d	file:
LOAD_UINT32_LITTLE	./umac.c	157;"	d	file:
LOAD_UINT32_REVERSED	./umac.c	/^static UINT32 LOAD_UINT32_REVERSED(void *ptr)$/;"	f	file:
LOAD_UINT32_REVERSED	./umac.c	127;"	d	file:
LOCAL	./sftp.c	162;"	d	file:
LOG_STDERR_VIS	./log.c	65;"	d	file:
LOG_SYSLOG_VIS	./log.c	64;"	d	file:
LOW_BIT_MASK	./umac.c	243;"	d	file:
LS_LONG_VIEW	./sftp.c	113;"	d	file:
LS_NAME_SORT	./sftp.c	116;"	d	file:
LS_NUMERIC_VIEW	./sftp.c	115;"	d	file:
LS_REVERSE_SORT	./sftp.c	119;"	d	file:
LS_SHORT_VIEW	./sftp.c	114;"	d	file:
LS_SHOW_ALL	./sftp.c	120;"	d	file:
LS_SIZE_SORT	./sftp.c	118;"	d	file:
LS_SI_UNITS	./sftp.c	121;"	d	file:
LS_TIME_SORT	./sftp.c	117;"	d	file:
LargeSieve	./moduli.c	/^static u_int32_t *LargeSieve, largewords, largetries, largenumbers;$/;"	v	file:
MAC_SEP	./mac.c	172;"	d	file:
MAXARGLEN	./sftp.c	970;"	d	file:
MAXARGS	./sftp.c	969;"	d	file:
MAXCON	./ssh-keyscan.c	70;"	d	file:
MAXMAXFD	./ssh-keyscan.c	64;"	d	file:
MAX_DIR_DEPTH	./sftp-client.c	66;"	d	file:
MAX_DISPLAYS	./channels.c	142;"	d	file:
MAX_IDENTICAL	./deattack.c	51;"	d	file:
MAX_KEY_FILE_SIZE	./authfile.c	72;"	d	file:
MAX_LISTEN_SOCKS	./sshd.c	183;"	d	file:
MAX_MSG_LENGTH	./ssh-pkcs11-helper.c	52;"	d	file:
MAX_PACKETS	./packet.c	1988;"	d	file:
MAX_PROP	./match.c	238;"	d	file:
MAX_WINSIZE	./progressmeter.c	44;"	d	file:
MINUTES	./misc.c	609;"	d	file:
MIN_READ_SIZE	./sftp-client.c	63;"	d	file:
MIN_SIZEOF	./loginrec.c	217;"	d	file:
MM_MEMSIZE	./monitor.c	1974;"	d	file:
MON_ALOG	./monitor.c	215;"	d	file:
MON_AUTH	./monitor.c	217;"	d	file:
MON_AUTHDECIDE	./monitor.c	213;"	d	file:
MON_ISAUTH	./monitor.c	212;"	d	file:
MON_ONCE	./monitor.c	214;"	d	file:
MON_PERMIT	./monitor.c	219;"	d	file:
MSGBUFSIZ	./log.c	332;"	d	file:
MUL64	./umac.c	120;"	d	file:
MUX_C_ALIVE_CHECK	./mux.c	143;"	d	file:
MUX_C_CLOSE_FWD	./mux.c	146;"	d	file:
MUX_C_NEW_SESSION	./mux.c	142;"	d	file:
MUX_C_NEW_STDIO_FWD	./mux.c	147;"	d	file:
MUX_C_OPEN_FWD	./mux.c	145;"	d	file:
MUX_C_STOP_LISTENING	./mux.c	148;"	d	file:
MUX_C_TERMINATE	./mux.c	144;"	d	file:
MUX_FWD_DYNAMIC	./mux.c	161;"	d	file:
MUX_FWD_LOCAL	./mux.c	159;"	d	file:
MUX_FWD_REMOTE	./mux.c	160;"	d	file:
MUX_MAX_ENV_VARS	./mux.c	343;"	d	file:
MUX_MSG_HELLO	./mux.c	141;"	d	file:
MUX_S_ALIVE	./mux.c	153;"	d	file:
MUX_S_EXIT_MESSAGE	./mux.c	152;"	d	file:
MUX_S_FAILURE	./mux.c	151;"	d	file:
MUX_S_OK	./mux.c	149;"	d	file:
MUX_S_PERMISSION_DENIED	./mux.c	150;"	d	file:
MUX_S_REMOTE_PORT	./mux.c	155;"	d	file:
MUX_S_SESSION_OPENED	./mux.c	154;"	d	file:
MUX_S_TTY_ALLOC_FAIL	./mux.c	156;"	d	file:
M_CP_INTOPT	./servconf.c	1465;"	d	file:
M_CP_INTOPT	./servconf.c	1531;"	d	file:
M_CP_STRARRAYOPT	./monitor.c	778;"	d	file:
M_CP_STRARRAYOPT	./monitor.c	785;"	d	file:
M_CP_STRARRAYOPT	./monitor_wrap.c	279;"	d	file:
M_CP_STRARRAYOPT	./monitor_wrap.c	286;"	d	file:
M_CP_STRARRAYOPT	./servconf.c	1476;"	d	file:
M_CP_STRARRAYOPT	./servconf.c	1533;"	d	file:
M_CP_STROPT	./monitor.c	774;"	d	file:
M_CP_STROPT	./monitor.c	784;"	d	file:
M_CP_STROPT	./monitor_wrap.c	275;"	d	file:
M_CP_STROPT	./monitor_wrap.c	285;"	d	file:
M_CP_STROPT	./servconf.c	1469;"	d	file:
M_CP_STROPT	./servconf.c	1532;"	d	file:
NCMP	./sftp.c	685;"	d	file:
NKEYS	./kex.c	527;"	d	file:
NOARGS	./sftp.c	160;"	d	file:
NUM_KEYTYPES	./ssh-keysign.c	153;"	d	file:
NUM_SOCKS	./channels.c	164;"	d	file:
OPTIONS_CRITICAL	./auth-options.c	420;"	d	file:
OPTIONS_CRITICAL	./ssh-keygen.c	1444;"	d	file:
OPTIONS_EXTENSIONS	./auth-options.c	421;"	d	file:
OPTIONS_EXTENSIONS	./ssh-keygen.c	1445;"	d	file:
O_NOCTTY	./sshd.c	132;"	d	file:
O_NOCTTY	./sshpty.c	46;"	d	file:
OpCodes	./readconf.c	/^} OpCodes;$/;"	t	typeref:enum:__anon10	file:
PACKET_MAX_SIZE	./packet.c	88;"	d	file:
PADDING	./progressmeter.c	45;"	d	file:
PAM_MSG_MEMBER	./auth-pam.c	77;"	d	file:
PAM_MSG_MEMBER	./auth-pam.c	79;"	d	file:
PAPPEND	./sftp-server.c	149;"	d	file:
PAUSE_BEFORE_LOGOUT	./logintest.c	52;"	d	file:
PUTU32	./rijndael.c	720;"	d	file:
QLINESIZE	./moduli.c	64;"	d	file:
QSIZE_MINIMUM	./moduli.c	71;"	d	file:
QUOTE	./misc.c	493;"	d	file:
RANDOM_SEED_SIZE	./entropy.c	62;"	d	file:
RDONLY	./sshconnect.c	689;"	d	file:
RDRW	./sshconnect.c	688;"	d	file:
REEXEC_CONFIG_PASS_FD	./sshd.c	138;"	d	file:
REEXEC_DEVCRYPTO_RESERVED_FD	./sshd.c	136;"	d	file:
REEXEC_MIN_FREE_FD	./sshd.c	139;"	d	file:
REEXEC_STARTUP_PIPE_FD	./sshd.c	137;"	d	file:
REMOTE	./sftp.c	161;"	d	file:
RIJNDAEL_BLOCKSIZE	./cipher-aes.c	42;"	d	file:
ROQUIET	./sshconnect.c	690;"	d	file:
SAVED_IDS_WORK_WITH_SETEUID	./uidswap.c	42;"	d	file:
SCHNORR_DEBUG_BN	./schnorr.c	51;"	d	file:
SCHNORR_DEBUG_BN	./schnorr.c	54;"	d	file:
SCHNORR_DEBUG_BUF	./schnorr.c	52;"	d	file:
SCHNORR_DEBUG_BUF	./schnorr.c	55;"	d	file:
SCREWUP	./scp.c	917;"	d	file:
SECONDS	./misc.c	608;"	d	file:
SEP	./compat.c	179;"	d	file:
SEP	./match.c	239;"	d	file:
SFTP_EXT_FSTATVFS	./sftp-client.c	77;"	d	file:
SFTP_EXT_HARDLINK	./sftp-client.c	78;"	d	file:
SFTP_EXT_POSIX_RENAME	./sftp-client.c	75;"	d	file:
SFTP_EXT_STATVFS	./sftp-client.c	76;"	d	file:
SFTP_OPENDIR	./sftp-glob.c	/^struct SFTP_OPENDIR {$/;"	s	file:
SHIFT_BIT	./moduli.c	78;"	d	file:
SHIFT_BYTE	./moduli.c	79;"	d	file:
SHIFT_MEGABYTE	./moduli.c	81;"	d	file:
SHIFT_MEGAWORD	./moduli.c	82;"	d	file:
SHIFT_WORD	./moduli.c	80;"	d	file:
SIGBLOB_LEN	./ssh-dss.c	43;"	d	file:
SMALL_MAXIMUM	./moduli.c	101;"	d	file:
SORT_FLAGS	./sftp.c	124;"	d	file:
SSHCFG_ALL	./servconf.c	332;"	d	file:
SSHCFG_GLOBAL	./servconf.c	330;"	d	file:
SSHCFG_MATCH	./servconf.c	331;"	d	file:
SSH_BLOCKSIZE	./deattack.c	55;"	d	file:
SSH_COM_PRIVATE_BEGIN	./ssh-keygen.c	258;"	d	file:
SSH_COM_PRIVATE_KEY_MAGIC	./ssh-keygen.c	259;"	d	file:
SSH_COM_PUBLIC_BEGIN	./ssh-keygen.c	256;"	d	file:
SSH_COM_PUBLIC_END	./ssh-keygen.c	257;"	d	file:
SSH_EVP	./mac.c	47;"	d	file:
SSH_MAXBLOCKS	./deattack.c	54;"	d	file:
SSH_SIG	./session.c	2337;"	d	file:
SSH_SIG	./session.c	2351;"	d	file:
SSH_SOCKS5_AUTHDONE	./channels.c	1186;"	d	file:
SSH_SOCKS5_CONNECT	./channels.c	1191;"	d	file:
SSH_SOCKS5_DOMAIN	./channels.c	1189;"	d	file:
SSH_SOCKS5_IPV4	./channels.c	1188;"	d	file:
SSH_SOCKS5_IPV6	./channels.c	1190;"	d	file:
SSH_SOCKS5_NOAUTH	./channels.c	1187;"	d	file:
SSH_SOCKS5_SUCCESS	./channels.c	1192;"	d	file:
SSH_UMAC	./mac.c	48;"	d	file:
SSH_X11_PROTO	./clientloop.c	320;"	d	file:
STALL_TIME	./progressmeter.c	47;"	d	file:
STORE_UINT32_BIG	./umac.c	155;"	d	file:
STORE_UINT32_BIG	./umac.c	158;"	d	file:
STORE_UINT32_REVERSED	./umac.c	/^static void STORE_UINT32_REVERSED(void *ptr, UINT32 x)$/;"	f	file:
STORE_UINT32_REVERSED	./umac.c	128;"	d	file:
STREAMS	./umac.c	310;"	d	file:
SUBSYSTEM_EXT	./session.c	151;"	d	file:
SUBSYSTEM_INT_SFTP	./session.c	152;"	d	file:
SUBSYSTEM_INT_SFTP_ERROR	./session.c	153;"	d	file:
SUBSYSTEM_NONE	./session.c	150;"	d	file:
ServerOpCodes	./servconf.c	/^} ServerOpCodes;$/;"	t	typeref:enum:__anon13	file:
SetAuditFunc	./audit-bsm.c	67;"	d	file:
SetAuditFunc	./audit-bsm.c	74;"	d	file:
SetAuditFuncText	./audit-bsm.c	68;"	d	file:
SetAuditFuncText	./audit-bsm.c	75;"	d	file:
SmallSieve	./moduli.c	/^static u_int32_t *SmallSieve, smallbits, smallbase;$/;"	v	file:
SocketEntry	./ssh-agent.c	/^} SocketEntry;$/;"	t	typeref:struct:__anon19	file:
Stat	./sftp-server.c	/^struct Stat {$/;"	s	file:
Stat	./sftp-server.c	/^typedef struct Stat Stat;$/;"	t	typeref:struct:Stat	file:
TARGET_OS_MAC	./monitor.c	73;"	d	file:
TARGET_OS_MAC	./monitor.c	75;"	d	file:
TARGET_OS_MAC	./monitor_wrap.c	60;"	d	file:
TARGET_OS_MAC	./monitor_wrap.c	62;"	d	file:
TEST_MAXIMUM	./moduli.c	107;"	d	file:
TEST_MINIMUM	./moduli.c	108;"	d	file:
TEST_POWER	./moduli.c	110;"	d	file:
TINY_NUMBER	./moduli.c	104;"	d	file:
TRIAL_MINIMUM	./moduli.c	122;"	d	file:
TTYCHAR	./ttymodes.c	321;"	d	file:
TTYCHAR	./ttymodes.c	331;"	d	file:
TTYCHAR	./ttymodes.c	406;"	d	file:
TTYCHAR	./ttymodes.c	422;"	d	file:
TTYMODE	./ttymodes.c	325;"	d	file:
TTYMODE	./ttymodes.c	332;"	d	file:
TTYMODE	./ttymodes.c	411;"	d	file:
TTYMODE	./ttymodes.c	423;"	d	file:
TTY_OP_END	./ttymodes.c	61;"	d	file:
TTY_OP_ISPEED_PROTO1	./ttymodes.c	65;"	d	file:
TTY_OP_ISPEED_PROTO2	./ttymodes.c	67;"	d	file:
TTY_OP_OSPEED_PROTO1	./ttymodes.c	66;"	d	file:
TTY_OP_OSPEED_PROTO2	./ttymodes.c	68;"	d	file:
TWO_WEEKS	./auth-passwd.c	66;"	d	file:
Td0	./rijndael.c	/^static const u32 Td0[256] = {$/;"	v	file:
Td1	./rijndael.c	/^static const u32 Td1[256] = {$/;"	v	file:
Td2	./rijndael.c	/^static const u32 Td2[256] = {$/;"	v	file:
Td3	./rijndael.c	/^static const u32 Td3[256] = {$/;"	v	file:
Td4	./rijndael.c	/^static const u32 Td4[256] = {$/;"	v	file:
Te0	./rijndael.c	/^static const u32 Te0[256] = {$/;"	v	file:
Te1	./rijndael.c	/^static const u32 Te1[256] = {$/;"	v	file:
Te2	./rijndael.c	/^static const u32 Te2[256] = {$/;"	v	file:
Te3	./rijndael.c	/^static const u32 Te3[256] = {$/;"	v	file:
Te4	./rijndael.c	/^static const u32 Te4[256] = {$/;"	v	file:
TinySieve	./moduli.c	/^static u_int32_t *TinySieve, tinybits;$/;"	v	file:
UINT16	./umac.c	/^typedef u_int16_t	UINT16; \/* 2 byte   *\/$/;"	t	file:
UINT32	./umac.c	/^typedef u_int32_t	UINT32; \/* 4 byte   *\/$/;"	t	file:
UINT64	./umac.c	/^typedef u_int64_t	UINT64; \/* 8 bytes  *\/$/;"	t	file:
UINT8	./umac.c	/^typedef u_int8_t	UINT8;  \/* 1 byte   *\/$/;"	t	file:
UMAC_KEY_LEN	./umac.c	90;"	d	file:
UMAC_OUTPUT_LEN	./umac.c	55;"	d	file:
UPDATE_INTERVAL	./progressmeter.c	46;"	d	file:
USE_PIPES	./session.c	445;"	d	file:
UTMPX_USE_LIBRARY	./loginrec.c	992;"	d	file:
UTMP_USE_LIBRARY	./loginrec.c	817;"	d	file:
UWORD	./umac.c	/^typedef unsigned int	UWORD;  \/* Register *\/$/;"	t	file:
VALID_CIDR_CHARS	./addrmatch.c	472;"	d	file:
VIEW_FLAGS	./sftp.c	123;"	d	file:
WEEKS	./misc.c	612;"	d	file:
WHITESPACE	./misc.c	492;"	d	file:
WHITESPACE	./readconf.c	350;"	d	file:
WHITESPACE	./servconf.c	672;"	d	file:
WHITESPACE	./sftp.c	110;"	d	file:
__APPLE_PRIVPTY__	./sshpty.c	52;"	d	file:
__LITTLE_ENDIAN__	./umac.c	97;"	d	file:
__LITTLE_ENDIAN__	./umac.c	99;"	d	file:
_in_raw_mode	./sshtty.c	/^static int _in_raw_mode = 0;$/;"	v	file:
_saved_tio	./sshtty.c	/^static struct termios _saved_tio;$/;"	v	typeref:struct:termios	file:
a2port	./misc.c	/^a2port(const char *s)$/;"	f
a2tun	./misc.c	/^a2tun(const char *s, int *remote)$/;"	f
abandon_challenge_response	./auth-chall.c	/^abandon_challenge_response(Authctxt *authctxt)$/;"	f
ac	./sshconnect2.c	/^	AuthenticationConnection *ac;	\/* set if agent supports key *\/$/;"	m	struct:identity	file:
acss	./acss.c	/^acss(ACSS_KEY *key, unsigned long len, const unsigned char *in,$/;"	f
acss_ciph	./cipher-acss.c	/^acss_ciph(EVP_CIPHER_CTX *ctx, unsigned char *out, const unsigned char *in,$/;"	f	file:
acss_ctrl	./cipher-acss.c	/^acss_ctrl(EVP_CIPHER_CTX *ctx, int type, int arg, void *ptr)$/;"	f	file:
acss_init_key	./cipher-acss.c	/^acss_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,$/;"	f	file:
acss_seed	./acss.c	/^acss_seed(ACSS_KEY *key)$/;"	f	file:
acss_setkey	./acss.c	/^acss_setkey(ACSS_KEY *key, const unsigned char *data, int enc, int mode)$/;"	f
acss_setsubkey	./acss.c	/^acss_setsubkey(ACSS_KEY *key, const unsigned char *subkey)$/;"	f
action	./clientloop.c	/^	enum confirm_action action;$/;"	m	struct:channel_reply_ctx	typeref:enum:channel_reply_ctx::confirm_action	file:
action	./sandbox-systrace.c	/^	int action;$/;"	m	struct:sandbox_policy	file:
active_state	./packet.c	/^static struct session_state *active_state, *backup_state;$/;"	v	typeref:struct:session_state	file:
add_cert_option	./ssh-keygen.c	/^add_cert_option(char *opt)$/;"	f	file:
add_file	./ssh-add.c	/^add_file(AuthenticationConnection *ac, const char *filename)$/;"	f	file:
add_flag_option	./ssh-keygen.c	/^add_flag_option(Buffer *c, const char *name)$/;"	f	file:
add_host_to_hostfile	./hostfile.c	/^add_host_to_hostfile(const char *filename, const char *host, const Key *key,$/;"	f
add_key	./ssh-pkcs11-helper.c	/^add_key(Key *k, char *name)$/;"	f	file:
add_listen_addr	./servconf.c	/^add_listen_addr(ServerOptions *options, char *addr, int port)$/;"	f	file:
add_local_forward	./readconf.c	/^add_local_forward(Options *options, const Forward *newfwd)$/;"	f
add_one_listen_addr	./servconf.c	/^add_one_listen_addr(ServerOptions *options, char *addr, int port)$/;"	f	file:
add_recv_bytes	./roaming_common.c	/^add_recv_bytes(u_int64_t num)$/;"	f
add_recv_bytes	./roaming_dummy.c	/^add_recv_bytes(u_int64_t num)$/;"	f
add_remote_forward	./readconf.c	/^add_remote_forward(Options *options, const Forward *newfwd)$/;"	f
add_string_option	./ssh-keygen.c	/^add_string_option(Buffer *c, const char *name, const char *value)$/;"	f	file:
addargs	./misc.c	/^addargs(arglist *args, char *fmt, ...)$/;"	f
addr32	./addrmatch.c	/^		u_int32_t		addr32[4];$/;"	m	union:xaddr::__anon1	file:
addr32	./addrmatch.c	48;"	d	file:
addr8	./addrmatch.c	/^		u_int8_t		addr8[16];$/;"	m	union:xaddr::__anon1	file:
addr8	./addrmatch.c	47;"	d	file:
addr_and	./addrmatch.c	/^addr_and(struct xaddr *dst, const struct xaddr *a, const struct xaddr *b)$/;"	f	file:
addr_cmp	./addrmatch.c	/^addr_cmp(const struct xaddr *a, const struct xaddr *b)$/;"	f	file:
addr_host_is_all0s	./addrmatch.c	/^addr_host_is_all0s(const struct xaddr *a, u_int masklen)$/;"	f	file:
addr_hostmask	./addrmatch.c	/^addr_hostmask(int af, u_int l, struct xaddr *n)$/;"	f	file:
addr_invert	./addrmatch.c	/^addr_invert(struct xaddr *n)$/;"	f	file:
addr_is_all0s	./addrmatch.c	/^addr_is_all0s(const struct xaddr *a)$/;"	f	file:
addr_match_cidr_list	./addrmatch.c	/^addr_match_cidr_list(const char *addr, const char *_list)$/;"	f
addr_match_list	./addrmatch.c	/^addr_match_list(const char *addr, const char *_list)$/;"	f
addr_netmask	./addrmatch.c	/^addr_netmask(int af, u_int l, struct xaddr *n)$/;"	f	file:
addr_netmatch	./addrmatch.c	/^addr_netmatch(const struct xaddr *host, const struct xaddr *net, u_int masklen)$/;"	f	file:
addr_pton	./addrmatch.c	/^addr_pton(const char *p, struct xaddr *n)$/;"	f	file:
addr_pton_cidr	./addrmatch.c	/^addr_pton_cidr(const char *p, struct xaddr *n, u_int *l)$/;"	f	file:
addr_sa_to_xaddr	./addrmatch.c	/^addr_sa_to_xaddr(struct sockaddr *sa, socklen_t slen, struct xaddr *xa)$/;"	f	file:
addr_unicast_masklen	./addrmatch.c	/^addr_unicast_masklen(int af)$/;"	f	file:
aes_counter	./cipher-ctr.c	/^	u_char		aes_counter[AES_BLOCK_SIZE];$/;"	m	struct:ssh_aes_ctr_ctx	file:
aes_ctx	./cipher-ctr.c	/^	AES_KEY		aes_ctx;$/;"	m	struct:ssh_aes_ctr_ctx	file:
aes_encryption	./umac.c	176;"	d	file:
aes_int_key	./umac.c	/^typedef AES_KEY aes_int_key[1];$/;"	t	file:
aes_key_setup	./umac.c	178;"	d	file:
af	./addrmatch.c	/^	sa_family_t	af;$/;"	m	struct:xaddr	file:
after_authentication	./packet.c	/^	int after_authentication;$/;"	m	struct:session_state	file:
after_select	./ssh-agent.c	/^after_select(fd_set *readset, fd_set *writeset)$/;"	f	file:
agent	./sshconnect2.c	/^	AuthenticationConnection *agent;$/;"	m	struct:Authctxt	file:
agent_failed	./authfd.c	73;"	d	file:
agent_present	./authfd.c	/^static int agent_present = 0;$/;"	v	file:
all_opens_permitted	./channels.c	/^static int all_opens_permitted = 0;$/;"	v	file:
alloc_session_state	./packet.c	/^alloc_session_state(void)$/;"	f	file:
allocbuf	./scp.c	/^allocbuf(BUF *bp, int fd, int blksize)$/;"	f
allow_severity	./sshd.c	/^int allow_severity;$/;"	v
allowed_user	./auth.c	/^allowed_user(struct passwd * pw)$/;"	f
args	./scp.c	/^arglist args;$/;"	v
argv0	./log.c	/^static char *argv0;$/;"	v	file:
ask_filename	./ssh-keygen.c	/^ask_filename(struct passwd *pw, const char *prompt)$/;"	f	file:
ask_permission	./readpass.c	/^ask_permission(const char *fmt, ...)$/;"	f
atime	./scp.c	915;"	d	file:
atomicio	./atomicio.c	/^atomicio(ssize_t (*f) (int, void *, size_t), int fd, void *_s, size_t n)$/;"	f
atomicio6	./atomicio.c	/^atomicio6(ssize_t (*f) (int, void *, size_t), int fd, void *_s, size_t n,$/;"	f
atomiciov	./atomicio.c	/^atomiciov(ssize_t (*f) (int, const struct iovec *, int), int fd,$/;"	f
atomiciov6	./atomicio.c	/^atomiciov6(ssize_t (*f) (int, const struct iovec *, int), int fd,$/;"	f
attrib	./sftp-server.c	/^	Attrib attrib;$/;"	m	struct:Stat	file:
attrib_clear	./sftp-common.c	/^attrib_clear(Attrib *a)$/;"	f
attrib_to_stat	./sftp-common.c	/^attrib_to_stat(const Attrib *a, struct stat *st)$/;"	f
attrib_to_tv	./sftp-server.c	/^attrib_to_tv(const Attrib *a)$/;"	f	file:
audit_classify_auth	./audit.c	/^audit_classify_auth(const char *method)$/;"	f
audit_connection_from	./audit-bsm.c	/^audit_connection_from(const char *host, int port)$/;"	f
audit_connection_from	./audit-linux.c	/^audit_connection_from(const char *host, int port)$/;"	f
audit_connection_from	./audit.c	/^audit_connection_from(const char *host, int port)$/;"	f
audit_event	./audit-bsm.c	/^audit_event(ssh_audit_event_t event)$/;"	f
audit_event	./audit-linux.c	/^audit_event(ssh_audit_event_t event)$/;"	f
audit_event	./audit.c	/^audit_event(ssh_audit_event_t event)$/;"	f
audit_event_lookup	./audit.c	/^audit_event_lookup(ssh_audit_event_t ev)$/;"	f
audit_run_command	./audit-bsm.c	/^audit_run_command(const char *command)$/;"	f
audit_run_command	./audit-linux.c	/^audit_run_command(const char *command)$/;"	f
audit_run_command	./audit.c	/^audit_run_command(const char *command)$/;"	f
audit_session_close	./audit-bsm.c	/^audit_session_close(struct logininfo *li)$/;"	f
audit_session_close	./audit-linux.c	/^audit_session_close(struct logininfo *li)$/;"	f
audit_session_close	./audit.c	/^audit_session_close(struct logininfo *li)$/;"	f
audit_session_open	./audit-bsm.c	/^audit_session_open(struct logininfo *li)$/;"	f
audit_session_open	./audit-linux.c	/^audit_session_open(struct logininfo *li)$/;"	f
audit_session_open	./audit.c	/^audit_session_open(struct logininfo *li)$/;"	f
audit_username	./audit.c	/^audit_username(void)$/;"	f
aug_get_machine	./audit-bsm.c	/^aug_get_machine(char *host, u_int32_t *addr, u_int32_t *type)$/;"	f	file:
auth1_methods	./auth1.c	/^const struct AuthMethod1 auth1_methods[] = {$/;"	v	typeref:struct:AuthMethod1
auth1_process_password	./auth1.c	/^auth1_process_password(Authctxt *authctxt, char *info, size_t infolen)$/;"	f	file:
auth1_process_rhosts_rsa	./auth1.c	/^auth1_process_rhosts_rsa(Authctxt *authctxt, char *info, size_t infolen)$/;"	f	file:
auth1_process_rsa	./auth1.c	/^auth1_process_rsa(Authctxt *authctxt, char *info, size_t infolen)$/;"	f	file:
auth1_process_tis_challenge	./auth1.c	/^auth1_process_tis_challenge(Authctxt *authctxt, char *info, size_t infolen)$/;"	f	file:
auth1_process_tis_response	./auth1.c	/^auth1_process_tis_response(Authctxt *authctxt, char *info, size_t infolen)$/;"	f	file:
auth2_challenge	./auth2-chall.c	/^auth2_challenge(Authctxt *authctxt, char *devs)$/;"	f
auth2_challenge_start	./auth2-chall.c	/^auth2_challenge_start(Authctxt *authctxt)$/;"	f	file:
auth2_challenge_stop	./auth2-chall.c	/^auth2_challenge_stop(Authctxt *authctxt)$/;"	f
auth2_jpake_get_pwdata	./auth2-jpake.c	/^auth2_jpake_get_pwdata(Authctxt *authctxt, BIGNUM **s,$/;"	f
auth2_jpake_start	./auth2-jpake.c	/^auth2_jpake_start(Authctxt *authctxt)$/;"	f	file:
auth2_jpake_stop	./auth2-jpake.c	/^auth2_jpake_stop(Authctxt *authctxt)$/;"	f
auth2_read_banner	./auth2.c	/^auth2_read_banner(void)$/;"	f
auth_cert_options	./auth-options.c	/^auth_cert_options(Key *k, struct passwd *pw)$/;"	f
auth_clear_options	./auth-options.c	/^auth_clear_options(void)$/;"	f
auth_debug	./auth.c	/^Buffer auth_debug;$/;"	v
auth_debug_add	./auth.c	/^auth_debug_add(const char *fmt,...)$/;"	f
auth_debug_init	./auth.c	/^int auth_debug_init;$/;"	v
auth_debug_reset	./auth.c	/^auth_debug_reset(void)$/;"	f
auth_debug_send	./auth.c	/^auth_debug_send(void)$/;"	f
auth_input_request_forwarding	./session.c	/^auth_input_request_forwarding(struct passwd * pw)$/;"	f	file:
auth_key_is_revoked	./auth.c	/^auth_key_is_revoked(Key *key)$/;"	f
auth_krb5_password	./auth-krb5.c	/^auth_krb5_password(Authctxt *authctxt, const char *password)$/;"	f
auth_log	./auth.c	/^auth_log(Authctxt *authctxt, int authenticated, char *method, char *info)$/;"	f
auth_method	./monitor.c	/^static char *auth_method = "unknown";$/;"	v	file:
auth_openfile	./auth.c	/^auth_openfile(const char *file, struct passwd *pw, int strict_modes,$/;"	f	file:
auth_openkeyfile	./auth.c	/^auth_openkeyfile(const char *file, struct passwd *pw, int strict_modes)$/;"	f
auth_openprincipals	./auth.c	/^auth_openprincipals(const char *file, struct passwd *pw, int strict_modes)$/;"	f
auth_parse_options	./auth-options.c	/^auth_parse_options(struct passwd *pw, char *opts, char *file, u_long linenum)$/;"	f
auth_password	./auth-passwd.c	/^auth_password(Authctxt *authctxt, const char *password)$/;"	f
auth_request_forwarding	./channels.c	/^auth_request_forwarding(void)$/;"	f
auth_rhosts	./auth-rhosts.c	/^auth_rhosts(struct passwd *pw, const char *client_user)$/;"	f
auth_rhosts2	./auth-rhosts.c	/^auth_rhosts2(struct passwd *pw, const char *client_user, const char *hostname,$/;"	f
auth_rhosts2_raw	./auth-rhosts.c	/^auth_rhosts2_raw(struct passwd *pw, const char *client_user, const char *hostname,$/;"	f	file:
auth_rhosts_rsa	./auth-rh-rsa.c	/^auth_rhosts_rsa(Authctxt *authctxt, char *cuser, Key *client_host_key)$/;"	f
auth_rhosts_rsa_key_allowed	./auth-rh-rsa.c	/^auth_rhosts_rsa_key_allowed(struct passwd *pw, char *cuser, char *chost,$/;"	f
auth_root_allowed	./auth.c	/^auth_root_allowed(char *method)$/;"	f
auth_rsa	./auth-rsa.c	/^auth_rsa(Authctxt *authctxt, BIGNUM *client_n)$/;"	f
auth_rsa_challenge_dialog	./auth-rsa.c	/^auth_rsa_challenge_dialog(Key *key)$/;"	f
auth_rsa_generate_challenge	./auth-rsa.c	/^auth_rsa_generate_challenge(Key *key)$/;"	f
auth_rsa_key_allowed	./auth-rsa.c	/^auth_rsa_key_allowed(struct passwd *pw, BIGNUM *client_n, Key **rkey)$/;"	f
auth_rsa_verify_response	./auth-rsa.c	/^auth_rsa_verify_response(Key *key, BIGNUM *challenge, u_char response[16])$/;"	f
auth_shadow_acctexpired	./auth-shadow.c	/^auth_shadow_acctexpired(struct spwd *spw)$/;"	f
auth_shadow_pwexpired	./auth-shadow.c	/^auth_shadow_pwexpired(Authctxt *ctxt)$/;"	f
auth_sock_cleanup_proc	./session.c	/^auth_sock_cleanup_proc(struct passwd *pw)$/;"	f	file:
auth_sock_dir	./session.c	/^static char *auth_sock_dir = NULL;$/;"	v	file:
auth_sock_name	./session.c	/^static char *auth_sock_name = NULL;$/;"	v	file:
authctxt	./monitor.c	/^static Authctxt *authctxt;$/;"	v	file:
authfile_id_string	./authfile.c	/^static const char authfile_id_string[] =$/;"	v	file:
authlist	./sshconnect2.c	/^	char *authlist;$/;"	m	struct:Authctxt	file:
authmethod_get	./sshconnect2.c	/^authmethod_get(char *authlist)$/;"	f	file:
authmethod_is_enabled	./sshconnect2.c	/^authmethod_is_enabled(Authmethod *method)$/;"	f	file:
authmethod_lookup	./auth2.c	/^authmethod_lookup(const char *name)$/;"	f	file:
authmethod_lookup	./sshconnect2.c	/^authmethod_lookup(const char *name)$/;"	f	file:
authmethods	./auth2.c	/^Authmethod *authmethods[] = {$/;"	v
authmethods	./sshconnect2.c	/^Authmethod authmethods[] = {$/;"	v
authmethods_get	./auth2.c	/^authmethods_get(void)$/;"	f	file:
authmethods_get	./sshconnect2.c	/^authmethods_get(void)$/;"	f	file:
authorized_principals	./auth-options.c	/^char *authorized_principals = NULL;$/;"	v
authorized_principals_file	./auth.c	/^authorized_principals_file(struct passwd *pw)$/;"	f
backup_state	./packet.c	/^static struct session_state *active_state, *backup_state;$/;"	v	typeref:struct:	file:
badpw	./auth-pam.c	/^static char badpw[] = "\\b\\n\\r\\177INCORRECT";$/;"	v	file:
bandwidth_limit	./misc.c	/^bandwidth_limit(struct bwlimit *bw, size_t read_len)$/;"	f
bandwidth_limit_init	./misc.c	/^bandwidth_limit_init(struct bwlimit *bw, u_int64_t kbps, size_t buflen)$/;"	f
batch_flag	./sshconnect2.c	/^	int	*batch_flag;	\/* flag in option struct that disables method *\/$/;"	m	struct:Authmethod	file:
batchmode	./sftp.c	/^int batchmode = 0;$/;"	v
baud_to_speed	./ttymodes.c	/^baud_to_speed(int baud)$/;"	f	file:
be_verbose	./logintest.c	/^int be_verbose = 0;$/;"	v
bf_ssh1_cipher	./cipher-bf1.c	/^bf_ssh1_cipher(EVP_CIPHER_CTX *ctx, u_char *out, const u_char *in,$/;"	f	file:
bf_ssh1_init	./cipher-bf1.c	/^static void bf_ssh1_init (EVP_CIPHER_CTX * ctx, const unsigned char *key,$/;"	f	file:
bits	./ssh-keygen.c	/^u_int32_t bits = 0;$/;"	v
block_size	./cipher.c	/^	u_int	block_size;$/;"	m	struct:Cipher	file:
blocks	./packet.c	/^	u_int64_t blocks;$/;"	m	struct:packet_state	file:
bn_rand_range_gt_one	./schnorr.c	/^bn_rand_range_gt_one(const BIGNUM *high)$/;"	f
boundary	./clientloop.c	/^static long boundary = INITIAL_BOUNDARY;$/;"	v	file:
boundary	./serverloop.c	/^static long boundary = INITIAL_BOUNDARY;$/;"	v	file:
bsdauth_device	./auth-bsdauth.c	/^KbdintDevice bsdauth_device = {$/;"	v
bsdauth_free_ctx	./auth-bsdauth.c	/^bsdauth_free_ctx(void *ctx)$/;"	f	file:
bsdauth_init_ctx	./auth-bsdauth.c	/^bsdauth_init_ctx(Authctxt *authctxt)$/;"	f	file:
bsdauth_query	./auth-bsdauth.c	/^bsdauth_query(void *ctx, char **name, char **infotxt,$/;"	f
bsdauth_respond	./auth-bsdauth.c	/^bsdauth_respond(void *ctx, u_int numresponses, char **responses)$/;"	f
bsm_audit_bad_login	./audit-bsm.c	/^bsm_audit_bad_login(const char *what)$/;"	f	file:
bsm_audit_record	./audit-bsm.c	/^bsm_audit_record(int typ, char *string, au_event_t event_no)$/;"	f	file:
bsm_audit_session_setup	./audit-bsm.c	/^bsm_audit_session_setup(void)$/;"	f	file:
buf	./scp.c	/^	char *buf;$/;"	m	struct:__anon12	file:
buf_append	./roaming_common.c	/^buf_append(const char *buf, size_t count)$/;"	f	file:
buffer_append	./buffer.c	/^buffer_append(Buffer *buffer, const void *data, u_int len)$/;"	f
buffer_append_space	./buffer.c	/^buffer_append_space(Buffer *buffer, u_int len)$/;"	f
buffer_check_alloc	./buffer.c	/^buffer_check_alloc(Buffer *buffer, u_int len)$/;"	f
buffer_clear	./buffer.c	/^buffer_clear(Buffer *buffer)$/;"	f
buffer_compact	./buffer.c	/^buffer_compact(Buffer *buffer)$/;"	f	file:
buffer_compress	./compress.c	/^buffer_compress(Buffer * input_buffer, Buffer * output_buffer)$/;"	f
buffer_compress_init_recv	./compress.c	/^buffer_compress_init_recv(void)$/;"	f
buffer_compress_init_send	./compress.c	/^buffer_compress_init_send(int level)$/;"	f
buffer_compress_uninit	./compress.c	/^buffer_compress_uninit(void)$/;"	f
buffer_consume	./buffer.c	/^buffer_consume(Buffer *buffer, u_int bytes)$/;"	f
buffer_consume_end	./buffer.c	/^buffer_consume_end(Buffer *buffer, u_int bytes)$/;"	f
buffer_consume_end_ret	./buffer.c	/^buffer_consume_end_ret(Buffer *buffer, u_int bytes)$/;"	f
buffer_consume_ret	./buffer.c	/^buffer_consume_ret(Buffer *buffer, u_int bytes)$/;"	f
buffer_dump	./buffer.c	/^buffer_dump(const Buffer *buffer)$/;"	f
buffer_free	./buffer.c	/^buffer_free(Buffer *buffer)$/;"	f
buffer_get	./buffer.c	/^buffer_get(Buffer *buffer, void *buf, u_int len)$/;"	f
buffer_get_bignum	./bufbn.c	/^buffer_get_bignum(Buffer *buffer, BIGNUM *value)$/;"	f
buffer_get_bignum2	./bufbn.c	/^buffer_get_bignum2(Buffer *buffer, BIGNUM *value)$/;"	f
buffer_get_bignum2_ret	./bufbn.c	/^buffer_get_bignum2_ret(Buffer *buffer, BIGNUM *value)$/;"	f
buffer_get_bignum_bits	./ssh-keygen.c	/^buffer_get_bignum_bits(Buffer *b, BIGNUM *value)$/;"	f	file:
buffer_get_bignum_ret	./bufbn.c	/^buffer_get_bignum_ret(Buffer *buffer, BIGNUM *value)$/;"	f
buffer_get_char	./bufaux.c	/^buffer_get_char(Buffer *buffer)$/;"	f
buffer_get_char_ret	./bufaux.c	/^buffer_get_char_ret(char *ret, Buffer *buffer)$/;"	f
buffer_get_cstring	./bufaux.c	/^buffer_get_cstring(Buffer *buffer, u_int *length_ptr)$/;"	f
buffer_get_cstring_ret	./bufaux.c	/^buffer_get_cstring_ret(Buffer *buffer, u_int *length_ptr)$/;"	f
buffer_get_ecpoint	./bufec.c	/^buffer_get_ecpoint(Buffer *buffer, const EC_GROUP *curve,$/;"	f
buffer_get_ecpoint_ret	./bufec.c	/^buffer_get_ecpoint_ret(Buffer *buffer, const EC_GROUP *curve,$/;"	f
buffer_get_int	./bufaux.c	/^buffer_get_int(Buffer *buffer)$/;"	f
buffer_get_int64	./bufaux.c	/^buffer_get_int64(Buffer *buffer)$/;"	f
buffer_get_int64_ret	./bufaux.c	/^buffer_get_int64_ret(u_int64_t *ret, Buffer *buffer)$/;"	f
buffer_get_int_ret	./bufaux.c	/^buffer_get_int_ret(u_int *ret, Buffer *buffer)$/;"	f
buffer_get_ret	./buffer.c	/^buffer_get_ret(Buffer *buffer, void *buf, u_int len)$/;"	f
buffer_get_short	./bufaux.c	/^buffer_get_short(Buffer *buffer)$/;"	f
buffer_get_short_ret	./bufaux.c	/^buffer_get_short_ret(u_short *ret, Buffer *buffer)$/;"	f
buffer_get_string	./bufaux.c	/^buffer_get_string(Buffer *buffer, u_int *length_ptr)$/;"	f
buffer_get_string_ptr	./bufaux.c	/^buffer_get_string_ptr(Buffer *buffer, u_int *length_ptr)$/;"	f
buffer_get_string_ptr_ret	./bufaux.c	/^buffer_get_string_ptr_ret(Buffer *buffer, u_int *length_ptr)$/;"	f
buffer_get_string_ret	./bufaux.c	/^buffer_get_string_ret(Buffer *buffer, u_int *length_ptr)$/;"	f
buffer_high	./clientloop.c	/^static u_int buffer_high;	\/* Soft max buffer size. *\/$/;"	v	file:
buffer_high	./serverloop.c	/^static u_int buffer_high;	\/* "Soft" max buffer size. *\/$/;"	v	file:
buffer_init	./buffer.c	/^buffer_init(Buffer *buffer)$/;"	f
buffer_len	./buffer.c	/^buffer_len(const Buffer *buffer)$/;"	f
buffer_ptr	./buffer.c	/^buffer_ptr(const Buffer *buffer)$/;"	f
buffer_put_bignum	./bufbn.c	/^buffer_put_bignum(Buffer *buffer, const BIGNUM *value)$/;"	f
buffer_put_bignum2	./bufbn.c	/^buffer_put_bignum2(Buffer *buffer, const BIGNUM *value)$/;"	f
buffer_put_bignum2_ret	./bufbn.c	/^buffer_put_bignum2_ret(Buffer *buffer, const BIGNUM *value)$/;"	f
buffer_put_bignum_ret	./bufbn.c	/^buffer_put_bignum_ret(Buffer *buffer, const BIGNUM *value)$/;"	f
buffer_put_char	./bufaux.c	/^buffer_put_char(Buffer *buffer, int value)$/;"	f
buffer_put_cstring	./bufaux.c	/^buffer_put_cstring(Buffer *buffer, const char *s)$/;"	f
buffer_put_ecpoint	./bufec.c	/^buffer_put_ecpoint(Buffer *buffer, const EC_GROUP *curve,$/;"	f
buffer_put_ecpoint_ret	./bufec.c	/^buffer_put_ecpoint_ret(Buffer *buffer, const EC_GROUP *curve,$/;"	f
buffer_put_int	./bufaux.c	/^buffer_put_int(Buffer *buffer, u_int value)$/;"	f
buffer_put_int64	./bufaux.c	/^buffer_put_int64(Buffer *buffer, u_int64_t value)$/;"	f
buffer_put_short	./bufaux.c	/^buffer_put_short(Buffer *buffer, u_short value)$/;"	f
buffer_put_string	./bufaux.c	/^buffer_put_string(Buffer *buffer, const void *buf, u_int len)$/;"	f
buffer_uncompress	./compress.c	/^buffer_uncompress(Buffer * input_buffer, Buffer * output_buffer)$/;"	f
bwlimit	./scp.c	/^struct bwlimit bwlimit;$/;"	v	typeref:struct:bwlimit
bwlimit_in	./sftp-client.c	/^	struct bwlimit bwlimit_in, bwlimit_out;$/;"	m	struct:sftp_conn	typeref:struct:sftp_conn::bwlimit	file:
bwlimit_out	./sftp-client.c	/^	struct bwlimit bwlimit_in, bwlimit_out;$/;"	m	struct:sftp_conn	typeref:struct:sftp_conn::	file:
bytes	./packet.c	/^	u_int64_t bytes;$/;"	m	struct:packet_state	file:
bytes_hashed	./umac.c	/^    int bytes_hashed;        \/* Bytes (out of L1_KEY_LEN) incorperated.   *\/$/;"	m	struct:__anon24	file:
bytes_per_second	./progressmeter.c	/^static int bytes_per_second;	\/* current speed in bytes per second *\/$/;"	v	file:
bytes_read	./sftp-server.c	/^	u_int64_t bytes_read, bytes_write;$/;"	m	struct:Handle	file:
bytes_write	./sftp-server.c	/^	u_int64_t bytes_read, bytes_write;$/;"	m	struct:Handle	file:
c	./sftp.c	/^	const char *c;$/;"	m	struct:CMD	file:
c_data	./ssh-keyscan.c	/^	char *c_data;		\/* Data read from this fd *\/$/;"	m	struct:Connection	file:
c_fd	./ssh-keyscan.c	/^	int c_fd;		\/* Quick lookup: c->c_fd == c - fdcon *\/$/;"	m	struct:Connection	file:
c_kex	./ssh-keyscan.c	/^	Kex *c_kex;		\/* The key-exchange struct for ssh2 *\/$/;"	m	struct:Connection	file:
c_keytype	./ssh-keyscan.c	/^	int c_keytype;		\/* Only one of KT_RSA1, KT_DSA, or KT_RSA *\/$/;"	m	struct:Connection	file:
c_len	./ssh-keyscan.c	/^	int c_len;		\/* Total bytes which must be read. *\/$/;"	m	struct:Connection	file:
c_name	./ssh-keyscan.c	/^	char *c_name;		\/* Hostname of connection for errors *\/$/;"	m	struct:Connection	file:
c_namebase	./ssh-keyscan.c	/^	char *c_namebase;	\/* Address to free for c_name and c_namelist *\/$/;"	m	struct:Connection	file:
c_namelist	./ssh-keyscan.c	/^	char *c_namelist;	\/* Pointer to other possible addresses *\/$/;"	m	struct:Connection	file:
c_off	./ssh-keyscan.c	/^	int c_off;		\/* Length of data read so far. *\/$/;"	m	struct:Connection	file:
c_output_name	./ssh-keyscan.c	/^	char *c_output_name;	\/* Hostname of connection for output *\/$/;"	m	struct:Connection	file:
c_plen	./ssh-keyscan.c	/^	int c_plen;		\/* Packet length field for ssh packet *\/$/;"	m	struct:Connection	file:
c_status	./ssh-keyscan.c	/^	u_char c_status;	\/* State of connection on this file desc. *\/$/;"	m	struct:Connection	file:
c_tv	./ssh-keyscan.c	/^	struct timeval c_tv;	\/* Time at which connection gets aborted *\/$/;"	m	struct:Connection	typeref:struct:Connection::timeval	file:
ca_key_path	./ssh-keygen.c	/^char *ca_key_path = NULL;$/;"	v
cache	./umac.c	/^    UINT8 cache[AES_BLOCK_LEN];  \/* Previous AES output is saved      *\/$/;"	m	struct:__anon23	file:
cached_port	./canohost.c	/^static int cached_port = -1;$/;"	v	file:
calculate_new_key	./roaming_common.c	/^calculate_new_key(u_int64_t *key, u_int64_t cookie, u_int64_t challenge)$/;"	f
can_output	./progressmeter.c	/^can_output(void)$/;"	f	file:
canonical_host_ip	./canohost.c	/^static char *canonical_host_ip = NULL;$/;"	v	file:
cb	./clientloop.c	/^	global_confirm_cb *cb;$/;"	m	struct:global_confirm	file:
cbc_mode	./cipher.c	/^	u_int	cbc_mode;$/;"	m	struct:Cipher	file:
cert_compare	./key.c	/^cert_compare(struct KeyCert *a, struct KeyCert *b)$/;"	f	file:
cert_free	./key.c	/^cert_free(struct KeyCert *cert)$/;"	f	file:
cert_key_id	./ssh-keygen.c	/^char *cert_key_id = NULL;$/;"	v
cert_key_type	./ssh-keygen.c	/^u_int cert_key_type = SSH2_CERT_TYPE_USER;$/;"	v
cert_new	./key.c	/^cert_new(void)$/;"	f	file:
cert_parse	./key.c	/^cert_parse(Buffer *b, Key *key, const u_char *blob, u_int blen)$/;"	f	file:
cert_principals	./ssh-keygen.c	/^char *cert_principals = NULL;$/;"	v
cert_serial	./ssh-keygen.c	/^long long cert_serial = 0;$/;"	v
cert_valid_from	./ssh-keygen.c	/^u_int64_t cert_valid_from = 0;$/;"	v
cert_valid_to	./ssh-keygen.c	/^u_int64_t cert_valid_to = ~0ULL;$/;"	v
certflags_command	./ssh-keygen.c	/^char *certflags_command = NULL;$/;"	v
certflags_flags	./ssh-keygen.c	/^u_int32_t certflags_flags = CERTOPT_DEFAULT;$/;"	v
certflags_src_addr	./ssh-keygen.c	/^char *certflags_src_addr = NULL;$/;"	v
cfg	./sshd.c	/^Buffer cfg;$/;"	v
chan_fn	./channels.c	/^typedef void chan_fn(Channel *c, fd_set *readset, fd_set *writeset);$/;"	t	file:
chan_ibuf_empty	./nchan.c	/^chan_ibuf_empty(Channel *c)$/;"	f
chan_is_dead	./nchan.c	/^chan_is_dead(Channel *c, int do_send)$/;"	f
chan_mark_dead	./nchan.c	/^chan_mark_dead(Channel *c)$/;"	f
chan_obuf_empty	./nchan.c	/^chan_obuf_empty(Channel *c)$/;"	f
chan_rcvd_close2	./nchan.c	/^chan_rcvd_close2(Channel *c)$/;"	f	file:
chan_rcvd_eof2	./nchan.c	/^chan_rcvd_eof2(Channel *c)$/;"	f	file:
chan_rcvd_eow	./nchan.c	/^chan_rcvd_eow(Channel *c)$/;"	f
chan_rcvd_ieof	./nchan.c	/^chan_rcvd_ieof(Channel *c)$/;"	f
chan_rcvd_ieof1	./nchan.c	/^chan_rcvd_ieof1(Channel *c)$/;"	f	file:
chan_rcvd_oclose	./nchan.c	/^chan_rcvd_oclose(Channel *c)$/;"	f
chan_rcvd_oclose1	./nchan.c	/^chan_rcvd_oclose1(Channel *c)$/;"	f	file:
chan_read_failed	./nchan.c	/^chan_read_failed(Channel *c)$/;"	f
chan_send_close2	./nchan.c	/^chan_send_close2(Channel *c)$/;"	f	file:
chan_send_eof2	./nchan.c	/^chan_send_eof2(Channel *c)$/;"	f	file:
chan_send_eow2	./nchan.c	/^chan_send_eow2(Channel *c)$/;"	f	file:
chan_send_ieof1	./nchan.c	/^chan_send_ieof1(Channel *c)$/;"	f	file:
chan_send_oclose1	./nchan.c	/^chan_send_oclose1(Channel *c)$/;"	f	file:
chan_set_istate	./nchan.c	/^chan_set_istate(Channel *c, u_int next)$/;"	f	file:
chan_set_ostate	./nchan.c	/^chan_set_ostate(Channel *c, u_int next)$/;"	f	file:
chan_shutdown_read	./nchan.c	/^chan_shutdown_read(Channel *c)$/;"	f	file:
chan_shutdown_write	./nchan.c	/^chan_shutdown_write(Channel *c)$/;"	f	file:
chan_write_failed	./nchan.c	/^chan_write_failed(Channel *c)$/;"	f
chan_write_failed1	./nchan.c	/^chan_write_failed1(Channel *c)$/;"	f	file:
chan_write_failed2	./nchan.c	/^chan_write_failed2(Channel *c)$/;"	f	file:
change_comment	./ssh-keygen.c	/^int change_comment = 0;$/;"	v
change_passphrase	./ssh-keygen.c	/^int change_passphrase = 0;$/;"	v
channel_add_adm_permitted_opens	./channels.c	/^channel_add_adm_permitted_opens(char *host, int port)$/;"	f
channel_add_permitted_opens	./channels.c	/^channel_add_permitted_opens(char *host, int port)$/;"	f
channel_after_select	./channels.c	/^channel_after_select(fd_set *readset, fd_set *writeset)$/;"	f
channel_by_id	./channels.c	/^channel_by_id(int id)$/;"	f
channel_cancel_cleanup	./channels.c	/^channel_cancel_cleanup(int id)$/;"	f
channel_cancel_rport_listener	./channels.c	/^channel_cancel_rport_listener(const char *host, u_short port)$/;"	f
channel_check_window	./channels.c	/^channel_check_window(Channel *c)$/;"	f	file:
channel_clear_adm_permitted_opens	./channels.c	/^channel_clear_adm_permitted_opens(void)$/;"	f
channel_clear_permitted_opens	./channels.c	/^channel_clear_permitted_opens(void)$/;"	f
channel_close_all	./channels.c	/^channel_close_all(void)$/;"	f
channel_close_fd	./channels.c	/^channel_close_fd(int *fdp)$/;"	f
channel_close_fds	./channels.c	/^channel_close_fds(Channel *c)$/;"	f	file:
channel_connect_by_listen_address	./channels.c	/^channel_connect_by_listen_address(u_short listen_port, char *ctype, char *rname)$/;"	f
channel_connect_ctx_free	./channels.c	/^channel_connect_ctx_free(struct channel_connect *cctx)$/;"	f	file:
channel_connect_stdio_fwd	./channels.c	/^channel_connect_stdio_fwd(const char *host_to_connect, u_short port_to_connect,$/;"	f
channel_connect_to	./channels.c	/^channel_connect_to(const char *host, u_short port, char *ctype, char *rname)$/;"	f
channel_decode_socks4	./channels.c	/^channel_decode_socks4(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_decode_socks5	./channels.c	/^channel_decode_socks5(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_display	./channels.c	/^long channel_display(void){$/;"	f
channel_find_maxfd	./channels.c	/^channel_find_maxfd(void)$/;"	f	file:
channel_find_open	./channels.c	/^channel_find_open(void)$/;"	f
channel_free	./channels.c	/^channel_free(Channel *c)$/;"	f
channel_free_all	./channels.c	/^channel_free_all(void)$/;"	f
channel_garbage_collect	./channels.c	/^channel_garbage_collect(Channel *c)$/;"	f	file:
channel_handle_efd	./channels.c	/^channel_handle_efd(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_handle_rfd	./channels.c	/^channel_handle_rfd(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_handle_wfd	./channels.c	/^channel_handle_wfd(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_handler	./channels.c	/^channel_handler(chan_fn *ftab[], fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_handler_init	./channels.c	/^channel_handler_init(void)$/;"	f	file:
channel_handler_init_13	./channels.c	/^channel_handler_init_13(void)$/;"	f	file:
channel_handler_init_15	./channels.c	/^channel_handler_init_15(void)$/;"	f	file:
channel_handler_init_20	./channels.c	/^channel_handler_init_20(void)$/;"	f	file:
channel_idle	./misc.c	/^int channel_idle(unsigned long long* now_usecs, int buf_len, int outbuf_remain, unsigned long long* idle_start){$/;"	f
channel_input_close	./channels.c	/^channel_input_close(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_close_confirmation	./channels.c	/^channel_input_close_confirmation(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_data	./channels.c	/^channel_input_data(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_extended_data	./channels.c	/^channel_input_extended_data(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_ieof	./channels.c	/^channel_input_ieof(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_oclose	./channels.c	/^channel_input_oclose(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_open_confirmation	./channels.c	/^channel_input_open_confirmation(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_open_failure	./channels.c	/^channel_input_open_failure(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_port_forward_request	./channels.c	/^channel_input_port_forward_request(int is_root, int gateway_ports)$/;"	f
channel_input_port_open	./channels.c	/^channel_input_port_open(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_status_confirm	./channels.c	/^channel_input_status_confirm(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_input_window_adjust	./channels.c	/^channel_input_window_adjust(int type, u_int32_t seq, void *ctxt)$/;"	f
channel_lookup	./channels.c	/^channel_lookup(int id)$/;"	f
channel_max_fd	./channels.c	/^static int channel_max_fd = 0;$/;"	v	file:
channel_new	./channels.c	/^channel_new(char *ctype, int type, int rfd, int wfd, int efd,$/;"	f
channel_not_very_much_buffered_data	./channels.c	/^channel_not_very_much_buffered_data(void)$/;"	f
channel_open_message	./channels.c	/^channel_open_message(void)$/;"	f
channel_output_poll	./channels.c	/^channel_output_poll(void)$/;"	f
channel_permit_all_opens	./channels.c	/^channel_permit_all_opens(void)$/;"	f
channel_post	./channels.c	/^chan_fn *channel_post[SSH_CHANNEL_MAX_TYPE];$/;"	v
channel_post_auth_listener	./channels.c	/^channel_post_auth_listener(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_connecting	./channels.c	/^channel_post_connecting(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_mux_client	./channels.c	/^channel_post_mux_client(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_mux_listener	./channels.c	/^channel_post_mux_listener(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_open	./channels.c	/^channel_post_open(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_output_drain_13	./channels.c	/^channel_post_output_drain_13(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_port_listener	./channels.c	/^channel_post_port_listener(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_post_x11_listener	./channels.c	/^channel_post_x11_listener(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre	./channels.c	/^chan_fn *channel_pre[SSH_CHANNEL_MAX_TYPE];$/;"	v
channel_pre_connecting	./channels.c	/^channel_pre_connecting(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_dynamic	./channels.c	/^channel_pre_dynamic(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_input_draining	./channels.c	/^channel_pre_input_draining(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_listener	./channels.c	/^channel_pre_listener(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_mux_client	./channels.c	/^channel_pre_mux_client(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_open	./channels.c	/^channel_pre_open(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_open_13	./channels.c	/^channel_pre_open_13(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_output_draining	./channels.c	/^channel_pre_output_draining(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_x11_open	./channels.c	/^channel_pre_x11_open(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_pre_x11_open_13	./channels.c	/^channel_pre_x11_open_13(Channel *c, fd_set *readset, fd_set *writeset)$/;"	f	file:
channel_prepare_select	./channels.c	/^channel_prepare_select(fd_set **readsetp, fd_set **writesetp, int *maxfdp,$/;"	f
channel_print_adm_permitted_opens	./channels.c	/^channel_print_adm_permitted_opens(void)$/;"	f
channel_register_cleanup	./channels.c	/^channel_register_cleanup(int id, channel_callback_fn *fn, int do_close)$/;"	f
channel_register_fds	./channels.c	/^channel_register_fds(Channel *c, int rfd, int wfd, int efd,$/;"	f	file:
channel_register_filter	./channels.c	/^channel_register_filter(int id, channel_infilter_fn *ifn,$/;"	f
channel_register_open_confirm	./channels.c	/^channel_register_open_confirm(int id, channel_open_fn *fn, void *ctx)$/;"	f
channel_register_status_confirm	./channels.c	/^channel_register_status_confirm(int id, channel_confirm_cb *cb,$/;"	f
channel_reply_ctx	./clientloop.c	/^struct channel_reply_ctx {$/;"	s	file:
channel_request_remote_forwarding	./channels.c	/^channel_request_remote_forwarding(const char *listen_host, u_short listen_port,$/;"	f
channel_request_rforward_cancel	./channels.c	/^channel_request_rforward_cancel(const char *host, u_short port)$/;"	f
channel_request_start	./channels.c	/^channel_request_start(int id, char *service, int wantconfirm)$/;"	f
channel_send_open	./channels.c	/^channel_send_open(int id)$/;"	f
channel_send_window_changes	./channels.c	/^channel_send_window_changes(void)$/;"	f
channel_set_af	./channels.c	/^channel_set_af(int af)$/;"	f
channel_set_fds	./channels.c	/^channel_set_fds(int id, int rfd, int wfd, int efd,$/;"	f
channel_set_reuseaddr	./channels.c	/^channel_set_reuseaddr(int fd)$/;"	f	file:
channel_setup_fwd_listener	./channels.c	/^channel_setup_fwd_listener(int type, const char *listen_addr,$/;"	f	file:
channel_setup_local_fwd_listener	./channels.c	/^channel_setup_local_fwd_listener(const char *listen_host, u_short listen_port,$/;"	f
channel_setup_remote_fwd_listener	./channels.c	/^channel_setup_remote_fwd_listener(const char *listen_address,$/;"	f
channel_still_open	./channels.c	/^channel_still_open(void)$/;"	f
channel_stop_listening	./channels.c	/^channel_stop_listening(void)$/;"	f
channels	./channels.c	/^static Channel **channels = NULL;$/;"	v	file:
channels_alloc	./channels.c	/^static u_int channels_alloc = 0;$/;"	v	file:
check_agent_present	./ssh.c	/^check_agent_present(void)$/;"	f	file:
check_crc	./deattack.c	/^check_crc(u_char *S, u_char *buf, u_int32_t len)$/;"	f	file:
check_host_cert	./sshconnect.c	/^check_host_cert(const char *host, const Key *host_key)$/;"	f	file:
check_host_key	./sshconnect.c	/^check_host_key(char *hostname, struct sockaddr *hostaddr, u_short port,$/;"	f	file:
check_hostkeys_by_key_or_type	./hostfile.c	/^check_hostkeys_by_key_or_type(struct hostkeys *hostkeys,$/;"	f	file:
check_ip_options	./canohost.c	/^check_ip_options(int sock, char *ipaddr)$/;"	f	file:
check_key_in_hostfiles	./auth.c	/^check_key_in_hostfiles(struct passwd *pw, Key *key, const char *host,$/;"	f
check_key_in_hostkeys	./hostfile.c	/^check_key_in_hostkeys(struct hostkeys *hostkeys, Key *key,$/;"	f
check_key_not_revoked	./hostfile.c	/^check_key_not_revoked(struct hostkeys *hostkeys, Key *k)$/;"	f	file:
check_markers	./hostfile.c	/^check_markers(char **cpp)$/;"	f	file:
check_parent_exists	./ssh-agent.c	/^check_parent_exists(void)$/;"	f	file:
check_quietlogin	./session.c	/^check_quietlogin(Session *s, const char *command)$/;"	f
check_rhosts_file	./auth-rhosts.c	/^check_rhosts_file(const char *filename, const char *hostname,$/;"	f	file:
child_close_fds	./session.c	/^child_close_fds(void)$/;"	f	file:
child_get_env	./session.c	/^child_get_env(char **env, const char *name)$/;"	f	file:
child_pid	./sandbox-darwin.c	/^	pid_t child_pid;$/;"	m	struct:ssh_sandbox	file:
child_pid	./sandbox-rlimit.c	/^	pid_t child_pid;$/;"	m	struct:ssh_sandbox	file:
child_pid	./sandbox-systrace.c	/^	pid_t child_pid;$/;"	m	struct:ssh_sandbox	file:
child_set_env	./session.c	/^child_set_env(char ***envp, u_int *envsizep, const char *name,$/;"	f
child_sock	./sandbox-systrace.c	/^	int child_sock;$/;"	m	struct:ssh_sandbox	file:
child_state	./monitor.c	/^} child_state;$/;"	v	typeref:struct:__anon8
child_terminated	./serverloop.c	/^static volatile sig_atomic_t child_terminated = 0;	\/* The child has terminated. *\/$/;"	v	file:
choose_comp	./kex.c	/^choose_comp(Comp *comp, char *client, char *server)$/;"	f	file:
choose_dh	./dh.c	/^choose_dh(int min, int wantbits, int max)$/;"	f
choose_enc	./kex.c	/^choose_enc(Enc *enc, char *client, char *server)$/;"	f	file:
choose_hostkeyalg	./kex.c	/^choose_hostkeyalg(Kex *k, char *client, char *server)$/;"	f	file:
choose_kex	./kex.c	/^choose_kex(Kex *k, char *client, char *server)$/;"	f	file:
choose_mac	./kex.c	/^choose_mac(Mac *mac, char *client, char *server)$/;"	f	file:
chop	./misc.c	/^chop(char *s)$/;"	f
cid	./mux.c	/^	u_int cid;	\/* channel id *\/$/;"	m	struct:mux_channel_confirm_ctx	file:
cipher_blocksize	./cipher.c	/^cipher_blocksize(const Cipher *c)$/;"	f
cipher_by_name	./cipher.c	/^cipher_by_name(const char *name)$/;"	f
cipher_by_number	./cipher.c	/^cipher_by_number(int id)$/;"	f
cipher_cleanup	./cipher.c	/^cipher_cleanup(CipherContext *cc)$/;"	f
cipher_crypt	./cipher.c	/^cipher_crypt(CipherContext *cc, u_char *dest, const u_char *src, u_int len)$/;"	f
cipher_get_keycontext	./cipher.c	/^cipher_get_keycontext(const CipherContext *cc, u_char *dat)$/;"	f
cipher_get_keyiv	./cipher.c	/^cipher_get_keyiv(CipherContext *cc, u_char *iv, u_int len)$/;"	f
cipher_get_keyiv_len	./cipher.c	/^cipher_get_keyiv_len(const CipherContext *cc)$/;"	f
cipher_get_number	./cipher.c	/^cipher_get_number(const Cipher *c)$/;"	f
cipher_init	./cipher.c	/^cipher_init(CipherContext *cc, Cipher *cipher,$/;"	f
cipher_is_cbc	./cipher.c	/^cipher_is_cbc(const Cipher *c)$/;"	f
cipher_keylen	./cipher.c	/^cipher_keylen(const Cipher *c)$/;"	f
cipher_mask_ssh1	./cipher.c	/^cipher_mask_ssh1(int client)$/;"	f
cipher_name	./cipher.c	/^cipher_name(int id)$/;"	f
cipher_number	./cipher.c	/^cipher_number(const char *name)$/;"	f
cipher_set_key_string	./cipher.c	/^cipher_set_key_string(CipherContext *cc, Cipher *cipher,$/;"	f
cipher_set_keycontext	./cipher.c	/^cipher_set_keycontext(CipherContext *cc, u_char *dat)$/;"	f
cipher_set_keyiv	./cipher.c	/^cipher_set_keyiv(CipherContext *cc, u_char *iv)$/;"	f
ciphers	./cipher.c	/^} ciphers[] = {$/;"	v	typeref:struct:Cipher
ciphers_valid	./cipher.c	/^ciphers_valid(const char *names)$/;"	f
cleanhostname	./misc.c	/^cleanhostname(char *host)$/;"	f
cleanup	./sshconnect2.c	/^	void	(*cleanup)(Authctxt *authctxt);$/;"	m	struct:Authmethod	file:
cleanup_ctxt	./auth-pam.c	/^static struct pam_ctxt *cleanup_ctxt;$/;"	v	typeref:struct:pam_ctxt	file:
cleanup_exit	./cleanup.c	/^cleanup_exit(int i)$/;"	f
cleanup_exit	./clientloop.c	/^cleanup_exit(int i)$/;"	f
cleanup_exit	./sftp-server-main.c	/^cleanup_exit(int i)$/;"	f
cleanup_exit	./ssh-agent.c	/^cleanup_exit(int i)$/;"	f
cleanup_exit	./ssh-pkcs11-helper.c	/^cleanup_exit(int i)$/;"	f
cleanup_exit	./sshd.c	/^cleanup_exit(int i)$/;"	f
cleanup_handler	./ssh-agent.c	/^cleanup_handler(int sig)$/;"	f	file:
cleanup_socket	./ssh-agent.c	/^cleanup_socket(void)$/;"	f	file:
clear_cached_addr	./canohost.c	/^clear_cached_addr(void)$/;"	f
clear_forwardings	./readconf.c	/^clear_forwardings(Options *options)$/;"	f	file:
clear_pass	./ssh-add.c	/^clear_pass(void)$/;"	f	file:
client_abandon_status_confirm	./clientloop.c	/^client_abandon_status_confirm(Channel *c, void *ctx)$/;"	f	file:
client_addr	./sftp-server.c	/^char *client_addr = NULL;$/;"	v
client_alive_check	./serverloop.c	/^client_alive_check(void)$/;"	f	file:
client_channel_closed	./clientloop.c	/^client_channel_closed(int id, void *arg)$/;"	f	file:
client_check_initial_eof_on_stdin	./clientloop.c	/^client_check_initial_eof_on_stdin(void)$/;"	f	file:
client_check_window_change	./clientloop.c	/^client_check_window_change(void)$/;"	f	file:
client_cleanup_stdio_fwd	./ssh.c	/^client_cleanup_stdio_fwd(int id, void *arg)$/;"	f	file:
client_expect_confirm	./clientloop.c	/^client_expect_confirm(int id, const char *request,$/;"	f
client_filter_cleanup	./clientloop.c	/^client_filter_cleanup(int cid, void *ctx)$/;"	f
client_global_request_reply	./clientloop.c	/^client_global_request_reply(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_init_dispatch	./clientloop.c	/^client_init_dispatch(void)$/;"	f	file:
client_init_dispatch_13	./clientloop.c	/^client_init_dispatch_13(void)$/;"	f	file:
client_init_dispatch_15	./clientloop.c	/^client_init_dispatch_15(void)$/;"	f	file:
client_init_dispatch_20	./clientloop.c	/^client_init_dispatch_20(void)$/;"	f	file:
client_input_agent_open	./clientloop.c	/^client_input_agent_open(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_input_channel_open	./clientloop.c	/^client_input_channel_open(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_input_channel_req	./clientloop.c	/^client_input_channel_req(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_input_exit_status	./clientloop.c	/^client_input_exit_status(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_input_global_request	./clientloop.c	/^client_input_global_request(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_input_stderr_data	./clientloop.c	/^client_input_stderr_data(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_input_stdout_data	./clientloop.c	/^client_input_stdout_data(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
client_loop	./clientloop.c	/^client_loop(int have_pty, int escape_char_arg, int ssh2_chan_id)$/;"	f
client_make_packets_from_stdin_data	./clientloop.c	/^client_make_packets_from_stdin_data(void)$/;"	f	file:
client_new_escape_filter_ctx	./clientloop.c	/^client_new_escape_filter_ctx(int escape_char)$/;"	f
client_process_buffered_input_packets	./clientloop.c	/^client_process_buffered_input_packets(void)$/;"	f	file:
client_process_input	./clientloop.c	/^client_process_input(fd_set *readset)$/;"	f	file:
client_process_net_input	./clientloop.c	/^client_process_net_input(fd_set *readset)$/;"	f	file:
client_process_output	./clientloop.c	/^client_process_output(fd_set *writeset)$/;"	f	file:
client_register_global_confirm	./clientloop.c	/^client_register_global_confirm(global_confirm_cb *cb, void *ctx)$/;"	f
client_request_agent	./clientloop.c	/^client_request_agent(const char *request_type, int rchan)$/;"	f	file:
client_request_forwarded_tcpip	./clientloop.c	/^client_request_forwarded_tcpip(const char *request_type, int rchan)$/;"	f	file:
client_request_tun_fwd	./clientloop.c	/^client_request_tun_fwd(int tun_mode, int local_tun, int remote_tun)$/;"	f
client_request_x11	./clientloop.c	/^client_request_x11(const char *request_type, int rchan)$/;"	f	file:
client_session2_setup	./clientloop.c	/^client_session2_setup(int id, int want_tty, int want_subsystem,$/;"	f
client_setup_stdio_fwd	./ssh.c	/^client_setup_stdio_fwd(const char *host_to_connect, u_short port_to_connect)$/;"	f	file:
client_simple_escape_filter	./clientloop.c	/^client_simple_escape_filter(Channel *c, char *buf, int len)$/;"	f
client_status_confirm	./clientloop.c	/^client_status_confirm(int type, Channel *c, void *ctx)$/;"	f	file:
client_stop_mux	./clientloop.c	/^client_stop_mux(void)$/;"	f
client_suspend_self	./clientloop.c	/^client_suspend_self(Buffer *bin, Buffer *bout, Buffer *berr)$/;"	f	file:
client_user	./auth1.c	/^static char *client_user = NULL;    \/* Used to fill in remote user for PAM *\/$/;"	v	file:
client_version_string	./sshconnect.c	/^char *client_version_string = NULL;$/;"	v
client_version_string	./sshd.c	/^char *client_version_string = NULL;$/;"	v
client_wait_until_can_do_something	./clientloop.c	/^client_wait_until_can_do_something(fd_set **readsetp, fd_set **writesetp,$/;"	f	file:
client_x11_get_proto	./clientloop.c	/^client_x11_get_proto(const char *display, const char *xauth_path,$/;"	f
close_listen_socks	./sshd.c	/^close_listen_socks(void)$/;"	f	file:
close_socket	./ssh-agent.c	/^close_socket(SocketEntry *e)$/;"	f	file:
close_startup_pipes	./sshd.c	/^close_startup_pipes(void)$/;"	f	file:
cmd	./mux.c	/^	Buffer cmd;$/;"	m	struct:mux_session_confirm_ctx	file:
cmd	./scp.c	/^char cmd[CMDNEEDS];		\/* must hold "rcp -r -p -d\\0" *\/$/;"	v
cmd_interrupt	./sftp.c	/^cmd_interrupt(int signo)$/;"	f	file:
cmds	./sftp.c	/^static const struct CMD cmds[] = {$/;"	v	typeref:struct:CMD	file:
cnt	./scp.c	/^	size_t cnt;$/;"	m	struct:__anon12	file:
collect_children	./serverloop.c	/^collect_children(void)$/;"	f	file:
colon	./misc.c	/^colon(char *cp)$/;"	f
command	./ssh.c	/^Buffer command;$/;"	v
comment	./ssh-agent.c	/^	char *comment;$/;"	m	struct:identity	file:
comp_long	./misc.c	/^int comp_long(const void* p1, const void* p2){$/;"	f
compare_forward	./mux.c	/^compare_forward(Forward *a, Forward *b)$/;"	f	file:
compare_host	./mux.c	/^compare_host(const char *a, const char *b)$/;"	f	file:
compat13	./compat.c	/^int compat13 = 0;$/;"	v
compat20	./compat.c	/^int compat20 = 0;$/;"	v
compat_cipher_proposal	./compat.c	/^compat_cipher_proposal(char *cipher_prop)$/;"	f
compat_datafellows	./compat.c	/^compat_datafellows(const char *version)$/;"	f
compile_opts_only	./logintest.c	/^int compile_opts_only = 0;$/;"	v
complete	./sftp.c	/^complete(EditLine *el, int ch)$/;"	f	file:
complete_ambiguous	./sftp.c	/^complete_ambiguous(const char *word, char **list, size_t count)$/;"	f	file:
complete_cmd_parse	./sftp.c	/^complete_cmd_parse(EditLine *el, char *cmd, int lastarg, char quote,$/;"	f	file:
complete_ctx	./sftp.c	/^struct complete_ctx {$/;"	s	file:
complete_display	./sftp.c	/^complete_display(char **list, u_int len)$/;"	f	file:
complete_is_remote	./sftp.c	/^complete_is_remote(char *cmd) {$/;"	f	file:
complete_match	./sftp.c	/^complete_match(EditLine *el, struct sftp_conn *conn, char *remote_path,$/;"	f	file:
compress_init_recv_called	./compress.c	/^static int compress_init_recv_called = 0;$/;"	v	file:
compress_init_send_called	./compress.c	/^static int compress_init_send_called = 0;$/;"	v	file:
compression_buffer	./packet.c	/^	Buffer compression_buffer;$/;"	m	struct:session_state	file:
compression_buffer_ready	./packet.c	/^	int compression_buffer_ready;$/;"	m	struct:session_state	file:
con	./ssh-keyscan.c	/^} con;$/;"	t	typeref:struct:Connection	file:
conalloc	./ssh-keyscan.c	/^conalloc(char *iname, char *oname, int keytype)$/;"	f	file:
config	./ssh.c	/^char *config = NULL;$/;"	v
config_file_name	./sshd.c	/^char *config_file_name = _PATH_SERVER_CONFIG_FILE;$/;"	v
confirm	./ssh-add.c	/^static int confirm = 0;$/;"	v	file:
confirm	./ssh-agent.c	/^	u_int confirm;$/;"	m	struct:identity	file:
confirm	./sshconnect.c	/^confirm(const char *prompt)$/;"	f	file:
confirm_key	./ssh-agent.c	/^confirm_key(Identity *id)$/;"	f	file:
confree	./ssh-keyscan.c	/^confree(int s)$/;"	f	file:
congreet	./ssh-keyscan.c	/^congreet(int s)$/;"	f	file:
conloop	./ssh-keyscan.c	/^conloop(void)$/;"	f	file:
conn	./sftp-glob.c	/^	struct sftp_conn *conn;$/;"	m	struct:__anon16	typeref:struct:__anon16::sftp_conn	file:
conn	./sftp.c	/^	struct sftp_conn *conn;$/;"	m	struct:complete_ctx	typeref:struct:complete_ctx::sftp_conn	file:
connect_local_xsocket	./channels.c	/^connect_local_xsocket(u_int dnr)$/;"	f	file:
connect_local_xsocket_path	./channels.c	/^connect_local_xsocket_path(const char *pathname)$/;"	f	file:
connect_next	./channels.c	/^connect_next(struct channel_connect *cctx)$/;"	f	file:
connect_to	./channels.c	/^connect_to(const char *host, u_short port, char *ctype, char *rname)$/;"	f	file:
connect_to_server	./sftp.c	/^connect_to_server(char *path, char **args, int *in, int *out)$/;"	f	file:
connection_closed	./serverloop.c	/^static int connection_closed = 0;	\/* Connection to client closed. *\/$/;"	v	file:
connection_in	./clientloop.c	/^static int connection_in;	\/* Connection to server (input). *\/$/;"	v	file:
connection_in	./packet.c	/^	int connection_in;$/;"	m	struct:session_state	file:
connection_in	./serverloop.c	/^static int connection_in;	\/* Connection to client (input). *\/$/;"	v	file:
connection_out	./clientloop.c	/^static int connection_out;	\/* Connection to server (output). *\/$/;"	v	file:
connection_out	./packet.c	/^	int connection_out;$/;"	m	struct:session_state	file:
connection_out	./serverloop.c	/^static int connection_out;	\/* Connection to client (output). *\/$/;"	v	file:
conread	./ssh-keyscan.c	/^conread(int s)$/;"	f	file:
conrecycle	./ssh-keyscan.c	/^conrecycle(int s)$/;"	f	file:
construct_utmp	./loginrec.c	/^construct_utmp(struct logininfo *li,$/;"	f
construct_utmpx	./loginrec.c	/^construct_utmpx(struct logininfo *li, struct utmpx *utx)$/;"	f
contouch	./ssh-keyscan.c	/^contouch(int s)$/;"	f	file:
control_client_sighandler	./mux.c	/^control_client_sighandler(int signo)$/;"	f	file:
control_client_sigrelay	./mux.c	/^control_client_sigrelay(int signo)$/;"	f	file:
control_persist_detach	./ssh.c	/^control_persist_detach(void)$/;"	f	file:
control_persist_exit_time	./clientloop.c	/^static time_t control_persist_exit_time = 0;$/;"	v	file:
convert_format	./ssh-keygen.c	/^} convert_format = FMT_RFC4716;$/;"	v	typeref:enum:__anon22
convert_from	./ssh-keygen.c	/^int convert_from = 0;$/;"	v
convert_to	./ssh-keygen.c	/^int convert_to = 0;$/;"	v
convtime	./misc.c	/^convtime(const char *s)$/;"	f
cookie	./roaming_client.c	/^static u_int64_t cookie;$/;"	v	file:
copy_environment	./session.c	/^copy_environment(char **source, char ***env, u_int *envsize)$/;"	f
copy_set_server_options	./servconf.c	/^copy_set_server_options(ServerOptions *dst, ServerOptions *src, int preauth)$/;"	f
counter	./progressmeter.c	/^static volatile off_t *counter;	\/* progress counter *\/$/;"	v	file:
crc32tab	./crc32.c	/^static const u_int32_t crc32tab[] = {$/;"	v	file:
crc_update	./deattack.c	/^crc_update(u_int32_t *a, u_int32_t b)$/;"	f	file:
ctx	./clientloop.c	/^	void *ctx;$/;"	m	struct:global_confirm	file:
ctxt	./auth2-chall.c	/^	void *ctxt;$/;"	m	struct:KbdintAuthctxt	file:
cur	./sftp-glob.c	/^} cur;$/;"	v	typeref:struct:__anon16	file:
cur_pos	./progressmeter.c	/^static off_t cur_pos;		\/* transfer position as of last refresh *\/$/;"	v	file:
cur_total_realincoming_bytes	./clientloop.c	/^static long cur_total_realincoming_bytes = 0;$/;"	v	file:
cur_total_realincoming_bytes	./serverloop.c	/^static long cur_total_realincoming_bytes = 0;$/;"	v	file:
cur_total_realsent_bytes	./clientloop.c	/^static long cur_total_realsent_bytes = 0;$/;"	v	file:
cur_total_realsent_bytes	./serverloop.c	/^static long cur_total_realsent_bytes = 0;$/;"	v	file:
cur_ts	./clientloop.c	/^static unsigned long long cur_ts = 0;$/;"	v	file:
cur_ts	./serverloop.c	/^static unsigned long long cur_ts = 0;$/;"	v	file:
curfile	./scp.c	/^char *curfile;$/;"	v
current	./sshconnect2.c	/^static Authmethod *current = NULL;$/;"	v	file:
current_keys	./kex.c	/^Newkeys *current_keys[MODE_MAX];$/;"	v
custom_environment	./auth-options.c	/^struct envstring *custom_environment = NULL;$/;"	v	typeref:struct:envstring
data	./cipher-acss.c	28;"	d	file:
data	./umac.c	/^    UINT8  data   [HASH_BUF_BYTES];    \/* Incomming data buffer           *\/$/;"	m	struct:__anon24	file:
datafellows	./compat.c	/^int datafellows = 0;$/;"	v
death	./ssh-agent.c	/^	u_int death;$/;"	m	struct:identity	file:
debug	./log.c	/^debug(const char *fmt,...)$/;"	f
debug2	./log.c	/^debug2(const char *fmt,...)$/;"	f
debug3	./log.c	/^debug3(const char *fmt,...)$/;"	f
debug3_bn	./schnorr.c	/^debug3_bn(const BIGNUM *n, const char *fmt, ...)$/;"	f
debug3_buf	./schnorr.c	/^debug3_buf(const u_char *buf, u_int len, const char *fmt, ...)$/;"	f
debug_flag	./ssh.c	/^int debug_flag = 0;$/;"	v
debug_flag	./sshd.c	/^int debug_flag = 0;$/;"	v
decode_attrib	./sftp-common.c	/^decode_attrib(Buffer *b)$/;"	f
decode_reply	./authfd.c	/^decode_reply(int type)$/;"	f
default_files	./ssh-add.c	/^static char *default_files[] = {$/;"	v	file:
deflate_failed	./compress.c	/^static int deflate_failed = 0;$/;"	v	file:
del_keys_by_name	./ssh-pkcs11-helper.c	/^del_keys_by_name(char *name)$/;"	f	file:
delete_all	./ssh-add.c	/^delete_all(AuthenticationConnection *ac)$/;"	f	file:
delete_file	./ssh-add.c	/^delete_file(AuthenticationConnection *ac, const char *filename)$/;"	f	file:
delete_host	./ssh-keygen.c	/^int delete_host = 0;$/;"	v
demote_sensitive_data	./sshd.c	/^demote_sensitive_data(void)$/;"	f
deny_input_open	./channels.c	/^deny_input_open(int type, u_int32_t seq, void *ctxt)$/;"	f
deny_severity	./sshd.c	/^int deny_severity;$/;"	v
derelativise_path	./servconf.c	/^derelativise_path(const char *path)$/;"	f
derive_key	./kex.c	/^derive_key(Kex *kex, int id, u_int need, u_char *hash, u_int hashlen,$/;"	f	file:
derive_rawsalt	./auth2-jpake.c	/^derive_rawsalt(const char *username, u_char *rawsalt, u_int len)$/;"	f	file:
derive_ssh1_session_id	./kex.c	/^derive_ssh1_session_id(BIGNUM *host_modulus, BIGNUM *server_modulus,$/;"	f
destroy_sensitive_data	./sshd.c	/^destroy_sensitive_data(void)$/;"	f
detect_attack	./deattack.c	/^detect_attack(u_char *buf, u_int32_t len)$/;"	f
device	./auth-chall.c	/^static KbdintDevice *device;$/;"	v	file:
device	./auth2-chall.c	/^	KbdintDevice *device;$/;"	m	struct:KbdintAuthctxt	file:
devices	./auth2-chall.c	/^	char *devices;$/;"	m	struct:KbdintAuthctxt	file:
devices	./auth2-chall.c	/^KbdintDevice *devices[] = {$/;"	v
dh_estimate	./dh.c	/^dh_estimate(int bits)$/;"	f
dh_gen_key	./dh.c	/^dh_gen_key(DH *dh, int need)$/;"	f
dh_new_group	./dh.c	/^dh_new_group(BIGNUM *gen, BIGNUM *modulus)$/;"	f
dh_new_group1	./dh.c	/^dh_new_group1(void)$/;"	f
dh_new_group14	./dh.c	/^dh_new_group14(void)$/;"	f
dh_new_group_asc	./dh.c	/^dh_new_group_asc(const char *gen, const char *modulus)$/;"	f
dh_pub_is_valid	./dh.c	/^dh_pub_is_valid(DH *dh, BIGNUM *dh_pub)$/;"	f
dir	./sftp-glob.c	/^	SFTP_DIRENT **dir;$/;"	m	struct:SFTP_OPENDIR	file:
dirp	./sftp-server.c	/^	DIR *dirp;$/;"	m	struct:Handle	file:
disable_forwarding	./auth-passwd.c	/^disable_forwarding(void)$/;"	f
discard_len	./cipher.c	/^	u_int	discard_len;$/;"	m	struct:Cipher	file:
dispatch	./dispatch.c	/^dispatch_fn *dispatch[DISPATCH_MAX];$/;"	v
dispatch_init	./dispatch.c	/^dispatch_init(dispatch_fn *dflt)$/;"	f
dispatch_protocol_error	./dispatch.c	/^dispatch_protocol_error(int type, u_int32_t seq, void *ctxt)$/;"	f
dispatch_protocol_ignore	./dispatch.c	/^dispatch_protocol_ignore(int type, u_int32_t seq, void *ctxt)$/;"	f
dispatch_range	./dispatch.c	/^dispatch_range(u_int from, u_int to, dispatch_fn *fn)$/;"	f
dispatch_run	./dispatch.c	/^dispatch_run(int mode, volatile sig_atomic_t *done, void *ctxt)$/;"	f
dispatch_set	./dispatch.c	/^dispatch_set(int type, dispatch_fn *fn)$/;"	f
display_loginmsg	./session.c	/^display_loginmsg(void)$/;"	f	file:
dns_read_key	./dns.c	/^dns_read_key(u_int8_t *algorithm, u_int8_t *digest_type,$/;"	f	file:
dns_read_rdata	./dns.c	/^dns_read_rdata(u_int8_t *algorithm, u_int8_t *digest_type,$/;"	f	file:
dns_result_totext	./dns.c	/^dns_result_totext(unsigned int res)$/;"	f	file:
do_authenticated	./session.c	/^do_authenticated(Authctxt *authctxt)$/;"	f
do_authenticated1	./session.c	/^do_authenticated1(Authctxt *authctxt)$/;"	f	file:
do_authenticated2	./session.c	/^do_authenticated2(Authctxt *authctxt)$/;"	f	file:
do_authentication	./auth1.c	/^do_authentication(Authctxt *authctxt)$/;"	f
do_authentication2	./auth2.c	/^do_authentication2(Authctxt *authctxt)$/;"	f
do_authloop	./auth1.c	/^do_authloop(Authctxt *authctxt)$/;"	f	file:
do_ca_sign	./ssh-keygen.c	/^do_ca_sign(struct passwd *pw, int argc, char **argv)$/;"	f	file:
do_change_comment	./ssh-keygen.c	/^do_change_comment(struct passwd *pw)$/;"	f	file:
do_change_passphrase	./ssh-keygen.c	/^do_change_passphrase(struct passwd *pw)$/;"	f	file:
do_child	./session.c	/^do_child(Session *s, const char *command)$/;"	f
do_cleanup	./session.c	/^do_cleanup(Authctxt *authctxt)$/;"	f
do_close	./sftp-client.c	/^do_close(struct sftp_conn *conn, char *handle, u_int handle_len)$/;"	f
do_cmd	./scp.c	/^do_cmd(char *host, char *remuser, char *cmd, int *fdin, int *fdout)$/;"	f
do_cmd2	./scp.c	/^do_cmd2(char *host, char *remuser, char *cmd, int fdin, int fdout)$/;"	f
do_cmd_pid	./scp.c	/^pid_t do_cmd_pid = -1;$/;"	v
do_convert_from	./ssh-keygen.c	/^do_convert_from(struct passwd *pw)$/;"	f	file:
do_convert_from_pem	./ssh-keygen.c	/^do_convert_from_pem(Key **k, int *private)$/;"	f	file:
do_convert_from_pkcs8	./ssh-keygen.c	/^do_convert_from_pkcs8(Key **k, int *private)$/;"	f	file:
do_convert_from_ssh2	./ssh-keygen.c	/^do_convert_from_ssh2(struct passwd *pw, Key **k, int *private)$/;"	f	file:
do_convert_private_ssh2_from_blob	./ssh-keygen.c	/^do_convert_private_ssh2_from_blob(u_char *blob, u_int blen)$/;"	f	file:
do_convert_to	./ssh-keygen.c	/^do_convert_to(struct passwd *pw)$/;"	f	file:
do_convert_to_pem	./ssh-keygen.c	/^do_convert_to_pem(Key *k)$/;"	f	file:
do_convert_to_pkcs8	./ssh-keygen.c	/^do_convert_to_pkcs8(Key *k)$/;"	f	file:
do_convert_to_ssh2	./ssh-keygen.c	/^do_convert_to_ssh2(struct passwd *pw, Key *k)$/;"	f	file:
do_df	./sftp.c	/^do_df(struct sftp_conn *conn, char *path, int hflag, int iflag)$/;"	f	file:
do_download	./sftp-client.c	/^do_download(struct sftp_conn *conn, char *remote_path, char *local_path,$/;"	f
do_download	./ssh-keygen.c	/^do_download(struct passwd *pw)$/;"	f	file:
do_exec	./session.c	/^do_exec(Session *s, const char *command)$/;"	f
do_exec_no_pty	./session.c	/^do_exec_no_pty(Session *s, const char *command)$/;"	f
do_exec_pty	./session.c	/^do_exec_pty(Session *s, const char *command)$/;"	f
do_file	./ssh-add.c	/^do_file(AuthenticationConnection *ac, int deleting, char *file)$/;"	f	file:
do_fingerprint	./ssh-keygen.c	/^do_fingerprint(struct passwd *pw)$/;"	f	file:
do_fsetstat	./sftp-client.c	/^do_fsetstat(struct sftp_conn *conn, char *handle, u_int handle_len,$/;"	f
do_fstat	./sftp-client.c	/^do_fstat(struct sftp_conn *conn, char *handle, u_int handle_len, int quiet)$/;"	f
do_fstatvfs	./sftp-client.c	/^do_fstatvfs(struct sftp_conn *conn, const char *handle, u_int handle_len,$/;"	f
do_gen_all_hostkeys	./ssh-keygen.c	/^do_gen_all_hostkeys(struct passwd *pw)$/;"	f	file:
do_globbed_ls	./sftp.c	/^do_globbed_ls(struct sftp_conn *conn, char *path, char *strip_path,$/;"	f	file:
do_hardlink	./sftp-client.c	/^do_hardlink(struct sftp_conn *conn, char *oldpath, char *newpath)$/;"	f
do_host	./ssh-keyscan.c	/^do_host(char *host)$/;"	f	file:
do_init	./sftp-client.c	/^do_init(int fd_in, int fd_out, u_int transfer_buflen, u_int num_requests,$/;"	f
do_known_hosts	./ssh-keygen.c	/^do_known_hosts(struct passwd *pw, const char *name)$/;"	f	file:
do_local_cmd	./scp.c	/^do_local_cmd(arglist *a)$/;"	f	file:
do_log	./log.c	/^do_log(LogLevel level, const char *fmt, va_list args)$/;"	f
do_log2	./log.c	/^do_log2(LogLevel level, const char *fmt,...)$/;"	f
do_login	./session.c	/^do_login(Session *s, const char *command)$/;"	f
do_ls_dir	./sftp.c	/^do_ls_dir(struct sftp_conn *conn, char *path, char *strip_path, int lflag)$/;"	f	file:
do_lsreaddir	./sftp-client.c	/^do_lsreaddir(struct sftp_conn *conn, char *path, int printflag,$/;"	f	file:
do_lstat	./sftp-client.c	/^do_lstat(struct sftp_conn *conn, char *path, int quiet)$/;"	f
do_mkdir	./sftp-client.c	/^do_mkdir(struct sftp_conn *conn, char *path, Attrib *a, int printflag)$/;"	f
do_motd	./session.c	/^do_motd(void)$/;"	f
do_nologin	./session.c	/^do_nologin(struct passwd *pw)$/;"	f	file:
do_pam_account	./auth-pam.c	/^do_pam_account(void)$/;"	f
do_pam_chauthtok	./auth-pam.c	/^do_pam_chauthtok(void)$/;"	f
do_pam_putenv	./auth-pam.c	/^do_pam_putenv(char *name, char *value)$/;"	f
do_pam_session	./auth-pam.c	/^do_pam_session(void)$/;"	f
do_pam_set_tty	./auth-pam.c	/^do_pam_set_tty(const char *tty)$/;"	f
do_pam_setcred	./auth-pam.c	/^do_pam_setcred(int init)$/;"	f
do_pre_login	./session.c	/^do_pre_login(Session *s)$/;"	f	file:
do_print_public	./ssh-keygen.c	/^do_print_public(struct passwd *pw)$/;"	f	file:
do_print_resource_record	./ssh-keygen.c	/^do_print_resource_record(struct passwd *pw, char *fname, char *hname)$/;"	f	file:
do_pwchange	./session.c	/^do_pwchange(Session *s)$/;"	f	file:
do_rc_files	./session.c	/^do_rc_files(Session *s, const char *shell)$/;"	f	file:
do_readdir	./sftp-client.c	/^do_readdir(struct sftp_conn *conn, char *path, SFTP_DIRENT ***dir)$/;"	f
do_readlink	./sftp-client.c	/^do_readlink(struct sftp_conn *conn, char *path)$/;"	f
do_realpath	./sftp-client.c	/^do_realpath(struct sftp_conn *conn, char *path)$/;"	f
do_rename	./sftp-client.c	/^do_rename(struct sftp_conn *conn, char *oldpath, char *newpath)$/;"	f
do_rm	./sftp-client.c	/^do_rm(struct sftp_conn *conn, char *path)$/;"	f
do_rmdir	./sftp-client.c	/^do_rmdir(struct sftp_conn *conn, char *path)$/;"	f
do_setstat	./sftp-client.c	/^do_setstat(struct sftp_conn *conn, char *path, Attrib *a)$/;"	f
do_setup_env	./session.c	/^do_setup_env(Session *s, const char *shell)$/;"	f	file:
do_setusercontext	./session.c	/^do_setusercontext(struct passwd *pw)$/;"	f
do_show_cert	./ssh-keygen.c	/^do_show_cert(struct passwd *pw)$/;"	f	file:
do_ssh1_kex	./sshd.c	/^do_ssh1_kex(void)$/;"	f	file:
do_ssh2_kex	./sshd.c	/^do_ssh2_kex(void)$/;"	f	file:
do_stat	./sftp-client.c	/^do_stat(struct sftp_conn *conn, char *path, int quiet)$/;"	f
do_statvfs	./sftp-client.c	/^do_statvfs(struct sftp_conn *conn, const char *path, struct sftp_statvfs *st,$/;"	f
do_symlink	./sftp-client.c	/^do_symlink(struct sftp_conn *conn, char *oldpath, char *newpath)$/;"	f
do_upload	./sftp-client.c	/^do_upload(struct sftp_conn *conn, char *local_path, char *remote_path,$/;"	f
download_dir	./sftp-client.c	/^download_dir(struct sftp_conn *conn, char *src, char *dst,$/;"	f
download_dir_internal	./sftp-client.c	/^download_dir_internal(struct sftp_conn *conn, char *src, char *dst,$/;"	f	file:
drain_output	./serverloop.c	/^drain_output(void)$/;"	f	file:
drop_connection	./sshd.c	/^drop_connection(int startups)$/;"	f	file:
dsa_generate_private_key	./key.c	/^dsa_generate_private_key(u_int bits)$/;"	f	file:
dump_base64	./uuencode.c	/^dump_base64(FILE *fp, const u_char *data, u_int len)$/;"	f
dump_cfg_fmtint	./servconf.c	/^dump_cfg_fmtint(ServerOpCodes code, int val)$/;"	f	file:
dump_cfg_int	./servconf.c	/^dump_cfg_int(ServerOpCodes code, int val)$/;"	f	file:
dump_cfg_strarray	./servconf.c	/^dump_cfg_strarray(ServerOpCodes code, u_int count, char **vals)$/;"	f	file:
dump_cfg_strarray_oneline	./servconf.c	/^dump_cfg_strarray_oneline(ServerOpCodes code, u_int count, char **vals)$/;"	f	file:
dump_cfg_string	./servconf.c	/^dump_cfg_string(ServerOpCodes code, const char *val)$/;"	f	file:
dump_config	./servconf.c	/^dump_config(ServerOptions *o)$/;"	f
dump_digest	./kex.c	/^dump_digest(char *msg, u_char *digest, int len)$/;"	f
dump_logininfo	./logintest.c	/^dump_logininfo(struct logininfo *li, char *descname)$/;"	f
ecdsa_generate_private_key	./key.c	/^ecdsa_generate_private_key(u_int bits, int *nid)$/;"	f	file:
enable_compat13	./compat.c	/^enable_compat13(void)$/;"	f
enable_compat20	./compat.c	/^enable_compat20(void)$/;"	f
enabled	./auth1.c	/^	int *enabled;$/;"	m	struct:AuthMethod1	file:
enabled	./sshconnect2.c	/^	int	*enabled;	\/* flag in option struct that enables method *\/$/;"	m	struct:Authmethod	file:
encode_attrib	./sftp-common.c	/^encode_attrib(Buffer *b, const Attrib *a)$/;"	f
end_pos	./progressmeter.c	/^static off_t end_pos;		\/* ending position of transfer *\/$/;"	v	file:
endian_convert	./umac.c	/^static void endian_convert(void *buf, UWORD bpw, UINT32 num_bytes)$/;"	f	file:
endian_convert_if_le	./umac.c	572;"	d	file:
endian_convert_if_le	./umac.c	574;"	d	file:
enter_non_blocking	./clientloop.c	/^enter_non_blocking(void)$/;"	f	file:
enter_raw_mode	./sshtty.c	/^enter_raw_mode(int quiet)$/;"	f
entries	./hostfile.c	/^	struct hostkey_entry *entries;$/;"	m	struct:hostkeys	typeref:struct:hostkeys::hostkey_entry	file:
env	./mux.c	/^	char **env;$/;"	m	struct:mux_session_confirm_ctx	file:
env_permitted	./mux.c	/^env_permitted(char *env)$/;"	f	file:
errno_to_portable	./sftp-server.c	/^errno_to_portable(int unixerrno)$/;"	f	file:
error	./log.c	/^error(const char *fmt,...)$/;"	f
errs	./scp.c	/^int errs, remin, remout;$/;"	v
errset_text	./dns.c	/^static const char *errset_text[] = {$/;"	v	file:
escape_char	./clientloop.c	/^	int escape_char;$/;"	m	struct:escape_filter_ctx	file:
escape_char1	./clientloop.c	/^static int escape_char1;	\/* Escape character. (proto1 only) *\/$/;"	v	file:
escape_filter_ctx	./clientloop.c	/^struct escape_filter_ctx {$/;"	s	file:
escape_pending	./clientloop.c	/^	int escape_pending;$/;"	m	struct:escape_filter_ctx	file:
escape_pending1	./clientloop.c	/^static int escape_pending1;	\/* Last character was an escape (proto1 only) *\/$/;"	v	file:
evp_acss	./cipher-acss.c	/^evp_acss(void)$/;"	f
evp_aes_128_ctr	./cipher-ctr.c	/^evp_aes_128_ctr(void)$/;"	f
evp_rijndael	./cipher-aes.c	/^evp_rijndael(void)$/;"	f
evp_ssh1_3des	./cipher-3des1.c	/^evp_ssh1_3des(void)$/;"	f
evp_ssh1_bf	./cipher-bf1.c	/^evp_ssh1_bf(void)$/;"	f
evp_ssh_sha256	./kex.c	55;"	d	file:
evp_ssh_sha256	./md-sha256.c	/^evp_ssh_sha256(void)$/;"	f
evptype	./cipher.c	/^	const EVP_CIPHER	*(*evptype)(void);$/;"	m	struct:Cipher	file:
exit_status	./clientloop.c	/^static int exit_status;		\/* Used to store the command exit status. *\/$/;"	v	file:
expand_authorized_keys	./auth.c	/^expand_authorized_keys(const char *filename, struct passwd *pw)$/;"	f
export_dns_rr	./dns.c	/^export_dns_rr(const char *hostname, Key *key, FILE *f, int generic)$/;"	f
extra_pad	./packet.c	/^	u_char extra_pad;$/;"	m	struct:session_state	file:
extract_salt	./hostfile.c	/^extract_salt(const char *s, u_int l, char *salt, size_t salt_len)$/;"	f	file:
exts	./sftp-client.c	/^	u_int exts;$/;"	m	struct:sftp_conn	file:
f	./monitor.c	/^	int (*f)(int, Buffer *);$/;"	m	struct:mon_table	file:
fake_salt_and_scheme	./auth2-jpake.c	/^fake_salt_and_scheme(Authctxt *authctxt, char **salt, char **scheme)$/;"	f	file:
fakepw	./auth.c	/^fakepw(void)$/;"	f
fatal	./fatal.c	/^fatal(const char *fmt,...)$/;"	f
fatal	./ssh-keyscan.c	/^fatal(const char *fmt,...)$/;"	f
fd	./sftp-server.c	/^	int fd;$/;"	m	struct:Handle	file:
fd	./ssh-agent.c	/^	int fd;$/;"	m	struct:__anon19	file:
fd	./ssh-pkcs11-client.c	/^int fd = -1;$/;"	v
fd_in	./sftp-client.c	/^	int fd_in;$/;"	m	struct:sftp_conn	file:
fd_out	./sftp-client.c	/^	int fd_out;$/;"	m	struct:sftp_conn	file:
fdcon	./ssh-keyscan.c	/^con *fdcon;$/;"	v
fderr	./serverloop.c	/^static int fderr;		\/* Descriptor for stderr.  May be -1. *\/$/;"	v	file:
fderr_eof	./serverloop.c	/^static int fderr_eof = 0;	\/* EOF encountered readung from fderr. *\/$/;"	v	file:
fdin	./serverloop.c	/^static int fdin;		\/* Descriptor for stdin (for writing) *\/$/;"	v	file:
fdin_is_tty	./serverloop.c	/^static int fdin_is_tty = 0;	\/* fdin points to a tty. *\/$/;"	v	file:
fdlim_get	./ssh-keyscan.c	/^fdlim_get(int hard)$/;"	f	file:
fdlim_set	./ssh-keyscan.c	/^fdlim_set(int lim)$/;"	f	file:
fdout	./serverloop.c	/^static int fdout;		\/* Descriptor for stdout (for reading);$/;"	v	file:
fdout_bytes	./serverloop.c	/^static long fdout_bytes = 0;	\/* Number of stdout bytes read from program. *\/$/;"	v	file:
fdout_eof	./serverloop.c	/^static int fdout_eof = 0;	\/* EOF encountered reading from fdout. *\/$/;"	v	file:
fetch_pam_child_environment	./auth-pam.c	/^fetch_pam_child_environment(void)$/;"	f
fetch_pam_environment	./auth-pam.c	/^fetch_pam_environment(void)$/;"	f
fid	./mux.c	/^	int fid;	\/* forward id *\/$/;"	m	struct:mux_channel_confirm_ctx	file:
file	./progressmeter.c	/^static char *file;		\/* name of the file being transferred *\/$/;"	v	file:
filename	./sshconnect2.c	/^	char	*filename;		\/* comment for agent-only keys *\/$/;"	m	struct:identity	file:
fill_default_options	./readconf.c	/^fill_default_options(Options * options)$/;"	f
fill_default_server_options	./servconf.c	/^fill_default_server_options(ServerOptions *options)$/;"	f
find_host	./ssh-keygen.c	/^int find_host = 0;$/;"	v
finish_pam	./auth-pam.c	/^finish_pam(void)$/;"	f
first_unused_handle	./sftp-server.c	/^int first_unused_handle = -1;$/;"	v
flags	./monitor.c	/^	int flags;$/;"	m	struct:mon_table	file:
flags	./servconf.c	/^	u_int flags;$/;"	m	struct:__anon14	file:
flags_from_portable	./sftp-server.c	/^flags_from_portable(int pflags)$/;"	f	file:
fmt_intarg	./servconf.c	/^fmt_intarg(ServerOpCodes code, int val)$/;"	f	file:
fmt_multistate_int	./servconf.c	/^fmt_multistate_int(int val, const struct multistate *m)$/;"	f	file:
fmt_validity	./ssh-keygen.c	/^fmt_validity(u_int64_t valid_from, u_int64_t valid_to)$/;"	f	file:
forced_command	./auth-options.c	/^char *forced_command = NULL;$/;"	v
forced_tun_device	./auth-options.c	/^int forced_tun_device = -1;$/;"	v
fork_after_authentication_flag	./ssh.c	/^int fork_after_authentication_flag = 0;$/;"	v
fork_postauth	./ssh.c	/^fork_postauth(void)$/;"	f	file:
format_forward	./mux.c	/^format_forward(u_int ftype, Forward *fwd)$/;"	f	file:
format_rate	./progressmeter.c	/^format_rate(char *buf, int size, off_t bytes)$/;"	f	file:
format_size	./progressmeter.c	/^format_size(char *buf, int size, off_t bytes)$/;"	f	file:
free_hostkeys	./hostfile.c	/^free_hostkeys(struct hostkeys *hostkeys)$/;"	f
free_identity	./ssh-agent.c	/^free_identity(Identity *id)$/;"	f	file:
free_pam_environment	./auth-pam.c	/^free_pam_environment(char **env)$/;"	f
free_ptr	./umac.c	/^    void *free_ptr;          \/* Address to free this struct via          *\/$/;"	m	struct:umac_ctx	file:
free_sftp_dirents	./sftp-client.c	/^void free_sftp_dirents(SFTP_DIRENT **s)$/;"	f
freeargs	./misc.c	/^freeargs(arglist *args)$/;"	f
fudge_closedir	./sftp-glob.c	/^fudge_closedir(struct SFTP_OPENDIR *od)$/;"	f	file:
fudge_lstat	./sftp-glob.c	/^fudge_lstat(const char *path, struct stat *st)$/;"	f	file:
fudge_opendir	./sftp-glob.c	/^fudge_opendir(const char *path)$/;"	f	file:
fudge_readdir	./sftp-glob.c	/^fudge_readdir(struct SFTP_OPENDIR *od)$/;"	f	file:
fudge_stat	./sftp-glob.c	/^fudge_stat(const char *path, struct stat *st)$/;"	f	file:
function_list	./ssh-pkcs11.c	/^	CK_FUNCTION_LIST	*function_list;$/;"	m	struct:pkcs11_provider	file:
fx2txt	./sftp-common.c	/^fx2txt(int status)$/;"	f
ga_free	./groupaccess.c	/^ga_free(void)$/;"	f
ga_init	./groupaccess.c	/^ga_init(const char *user, gid_t base)$/;"	f
ga_match	./groupaccess.c	/^ga_match(char * const *groups, int n)$/;"	f
ga_match_pattern_list	./groupaccess.c	/^ga_match_pattern_list(const char *group_pattern)$/;"	f
gen_candidates	./moduli.c	/^gen_candidates(FILE *out, u_int32_t memory, u_int32_t power, BIGNUM *start)$/;"	f
generate_ephemeral_server_key	./sshd.c	/^generate_ephemeral_server_key(void)$/;"	f	file:
get_attrib	./sftp-server.c	/^get_attrib(void)$/;"	f	file:
get_authname	./auth1.c	/^get_authname(int type)$/;"	f	file:
get_canonical_hostname	./canohost.c	/^get_canonical_hostname(int use_dns)$/;"	f
get_challenge	./auth-chall.c	/^get_challenge(Authctxt *authctxt)$/;"	f
get_current_time	./clientloop.c	/^get_current_time(void)$/;"	f	file:
get_current_time_usecs	./misc.c	/^unsigned long long get_current_time_usecs(void){$/;"	f
get_decode_stat	./sftp-client.c	/^get_decode_stat(struct sftp_conn *conn, u_int expected_id, int quiet)$/;"	f	file:
get_decode_statvfs	./sftp-client.c	/^get_decode_statvfs(struct sftp_conn *conn, struct sftp_statvfs *st,$/;"	f	file:
get_handle	./sftp-client.c	/^get_handle(struct sftp_conn *conn, u_int expected_id, u_int *len,$/;"	f	file:
get_handle	./sftp-server.c	/^get_handle(void)$/;"	f	file:
get_hostfile_hostname_ipaddr	./sshconnect.c	/^get_hostfile_hostname_ipaddr(char *hostname, struct sockaddr *hostaddr,$/;"	f
get_hostkey_by_index	./sshd.c	/^get_hostkey_by_index(int ind)$/;"	f
get_hostkey_by_type	./sshd.c	/^get_hostkey_by_type(int type, int need_private)$/;"	f	file:
get_hostkey_index	./sshd.c	/^get_hostkey_index(Key *key)$/;"	f
get_hostkey_private_by_type	./sshd.c	/^get_hostkey_private_by_type(int type)$/;"	f
get_hostkey_public_by_type	./sshd.c	/^get_hostkey_public_by_type(int type)$/;"	f
get_int	./sftp-server.c	56;"	d	file:
get_int	./ssh-pkcs11-helper.c	55;"	d	file:
get_int64	./sftp-server.c	55;"	d	file:
get_keytypes	./ssh-keyscan.c	/^int get_keytypes = KT_RSA;	\/* Get only RSA keys by default *\/$/;"	v
get_last_login_time	./sshlogin.c	/^get_last_login_time(uid_t uid, const char *logname,$/;"	f
get_line	./ssh-keygen.c	/^get_line(FILE *fp, char *line, size_t len)$/;"	f	file:
get_local_ipaddr	./canohost.c	/^get_local_ipaddr(int sock)$/;"	f
get_local_name	./canohost.c	/^get_local_name(int fd)$/;"	f
get_local_port	./canohost.c	/^get_local_port(void)$/;"	f
get_msg	./sftp-client.c	/^get_msg(struct sftp_conn *conn, Buffer *m)$/;"	f	file:
get_onload_flag	./misc.c	/^int get_onload_flag(){$/;"	f
get_paddingdone_flag	./misc.c	/^int get_paddingdone_flag(){$/;"	f
get_peer_ipaddr	./canohost.c	/^get_peer_ipaddr(int sock)$/;"	f
get_peer_port	./canohost.c	/^get_peer_port(int sock)$/;"	f
get_port	./canohost.c	/^get_port(int local)$/;"	f	file:
get_random_bytes_prngd	./entropy.c	/^get_random_bytes_prngd(unsigned char *buf, int len,$/;"	f
get_recv_buf_size	./roaming_common.c	/^get_recv_buf_size()$/;"	f
get_recv_bytes	./roaming_common.c	/^get_recv_bytes(void)$/;"	f
get_recv_bytes	./roaming_dummy.c	/^get_recv_bytes(void)$/;"	f
get_remote_hostname	./canohost.c	/^get_remote_hostname(int sock, int use_dns)$/;"	f	file:
get_remote_ipaddr	./canohost.c	/^get_remote_ipaddr(void)$/;"	f
get_remote_name_or_ip	./canohost.c	/^get_remote_name_or_ip(u_int utmp_len, int use_dns)$/;"	f
get_remote_port	./canohost.c	/^get_remote_port(void)$/;"	f
get_saved_tio	./sshtty.c	/^get_saved_tio(void)$/;"	f
get_sent_bytes	./roaming_common.c	/^get_sent_bytes(void)$/;"	f
get_snd_buf_size	./roaming_common.c	/^get_snd_buf_size()$/;"	f
get_sock_port	./canohost.c	/^get_sock_port(int sock, int local)$/;"	f
get_socket_address	./canohost.c	/^get_socket_address(int sock, int remote, int flags)$/;"	f	file:
get_status	./sftp-client.c	/^get_status(struct sftp_conn *conn, u_int expected_id)$/;"	f	file:
get_string	./sftp-server.c	57;"	d	file:
get_string	./ssh-pkcs11-helper.c	56;"	d	file:
get_tend_set	./misc.c	/^int get_tend_set(void){$/;"	f
get_ts_end	./misc.c	/^unsigned long long get_ts_end(void){$/;"	f
get_ts_start	./misc.c	/^unsigned long long get_ts_start(void){$/;"	f
get_tstart_set	./misc.c	/^int get_tstart_set(void){$/;"	f
get_u16	./misc.c	/^get_u16(const void *vp)$/;"	f
get_u32	./misc.c	/^get_u32(const void *vp)$/;"	f
get_u64	./misc.c	/^get_u64(const void *vp)$/;"	f
get_unload_flag	./misc.c	/^int get_unload_flag(){$/;"	f
getlast_entry	./loginrec.c	/^getlast_entry(struct logininfo *li)$/;"	f
getpwnamallow	./auth.c	/^getpwnamallow(const char *user)$/;"	f
gettext	./audit-bsm.c	111;"	d	file:
global_confirm	./clientloop.c	/^struct global_confirm {$/;"	s	file:
global_confirms	./clientloop.c	/^static struct global_confirms global_confirms =$/;"	v	typeref:struct:global_confirms	file:
global_pflag	./sftp.c	/^int global_pflag = 0;$/;"	v
global_rflag	./sftp.c	/^int global_rflag = 0;$/;"	v
grace_alarm_handler	./sshd.c	/^grace_alarm_handler(int sig)$/;"	f	file:
groups_byname	./groupaccess.c	/^static char **groups_byname;$/;"	v	file:
gssapi_client	./gss-serv.c	/^static ssh_gssapi_client gssapi_client =$/;"	v	file:
gssapi_kerberos_mech	./gss-serv-krb5.c	/^ssh_gssapi_mech gssapi_kerberos_mech = {$/;"	v
gssapi_null_mech	./gss-serv.c	/^ssh_gssapi_mech gssapi_null_mech =$/;"	v
gsscontext	./monitor.c	/^static Gssctxt *gsscontext = NULL;$/;"	v	file:
handle	./ssh-pkcs11.c	/^	void			*handle;$/;"	m	struct:pkcs11_provider	file:
handle_bytes_read	./sftp-server.c	/^handle_bytes_read(int handle)$/;"	f	file:
handle_bytes_write	./sftp-server.c	/^handle_bytes_write(int handle)$/;"	f	file:
handle_close	./sftp-server.c	/^handle_close(int handle)$/;"	f	file:
handle_from_string	./sftp-server.c	/^handle_from_string(const char *handle, u_int hlen)$/;"	f	file:
handle_is_ok	./sftp-server.c	/^handle_is_ok(int i, int type)$/;"	f	file:
handle_log_close	./sftp-server.c	/^handle_log_close(int handle, char *emsg)$/;"	f	file:
handle_log_exit	./sftp-server.c	/^handle_log_exit(void)$/;"	f	file:
handle_new	./sftp-server.c	/^handle_new(int use, const char *name, int fd, DIR *dirp)$/;"	f	file:
handle_to_dir	./sftp-server.c	/^handle_to_dir(int handle)$/;"	f	file:
handle_to_fd	./sftp-server.c	/^handle_to_fd(int handle)$/;"	f	file:
handle_to_name	./sftp-server.c	/^handle_to_name(int handle)$/;"	f	file:
handle_to_string	./sftp-server.c	/^handle_to_string(int handle, char **stringp, int *hlenp)$/;"	f	file:
handle_unused	./sftp-server.c	/^static void handle_unused(int i)$/;"	f	file:
handle_update_read	./sftp-server.c	/^handle_update_read(int handle, ssize_t bytes)$/;"	f	file:
handle_update_write	./sftp-server.c	/^handle_update_write(int handle, ssize_t bytes)$/;"	f	file:
handler	./mux.c	/^	int (*handler)(u_int, Channel *, Buffer *, Buffer *);$/;"	m	struct:__anon9	file:
handles	./sftp-server.c	/^Handle *handles = NULL;$/;"	v
hash	./umac.c	/^    nh_ctx hash;                          \/* Hash context for L1 NH hash  *\/$/;"	m	struct:uhash_ctx	file:
hash	./umac.c	/^    uhash_ctx hash;          \/* Hash function for message compression    *\/$/;"	m	struct:umac_ctx	file:
hash_buffer	./schnorr.c	/^hash_buffer(const u_char *buf, u_int len, const EVP_MD *md,$/;"	f
hash_hosts	./ssh-keygen.c	/^int hash_hosts = 0;$/;"	v
hash_hosts	./ssh-keyscan.c	/^int hash_hosts = 0;		\/* Hash hostname on output *\/$/;"	v
have_identity	./ssh-keygen.c	/^int have_identity = 0;$/;"	v
have_ssh1_key	./sshd.c	/^	int	have_ssh1_key;$/;"	m	struct:__anon21	file:
have_ssh2_key	./sshd.c	/^	int	have_ssh2_key;$/;"	m	struct:__anon21	file:
hello_rcvd	./mux.c	/^	int hello_rcvd;$/;"	m	struct:mux_master_state	file:
help	./sftp.c	/^help(void)$/;"	f	file:
host	./ssh.c	/^char *host;$/;"	v
host	./sshconnect2.c	/^	const char *host;$/;"	m	struct:Authctxt	file:
host_certificates	./sshd.c	/^	Key	**host_certificates;	\/* all public host certificates *\/$/;"	m	struct:__anon21	file:
host_hash	./hostfile.c	/^host_hash(const char *host, const char *name_from_hostfile, u_int src_len)$/;"	f
host_keys	./sshd.c	/^	Key	**host_keys;		\/* all private host keys *\/$/;"	m	struct:__anon21	file:
host_to_connect	./channels.c	/^	char *host_to_connect;		\/* Connect to 'host'. *\/$/;"	m	struct:__anon2	file:
hostaddr	./ssh.c	/^struct sockaddr_storage hostaddr;$/;"	v	typeref:struct:sockaddr_storage
hostbased_chost	./monitor.c	/^static char *hostbased_chost = NULL;$/;"	v	file:
hostbased_cuser	./monitor.c	/^static char *hostbased_cuser = NULL;$/;"	v	file:
hostbased_key_allowed	./auth2-hostbased.c	/^hostbased_key_allowed(struct passwd *pw, const char *cuser, char *chost,$/;"	f
hostfile_check_key	./hostfile.c	/^hostfile_check_key(int bits, const Key *key, const char *host,$/;"	f	file:
hostfile_read_key	./hostfile.c	/^hostfile_read_key(char **cpp, u_int *bitsp, Key *ret)$/;"	f
hostjump	./ssh-keyscan.c	/^hostjump(Key *hostkey)$/;"	f	file:
hostkeys	./hostfile.c	/^struct hostkeys {$/;"	s	file:
hostname	./ssh-keygen.c	/^char hostname[MAXHOSTNAMELEN];$/;"	v
hpdelim	./misc.c	/^hpdelim(char **cp)$/;"	f
iamrecursive	./scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v
iamremote	./scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v
id	./clientloop.c	/^	int id;$/;"	m	struct:channel_reply_ctx	file:
id_md5	./ssh-rsa.c	/^static const u_char id_md5[] = {$/;"	v	file:
id_sha1	./ssh-rsa.c	/^static const u_char id_sha1[] = {$/;"	v	file:
identity	./ssh-agent.c	/^typedef struct identity {$/;"	s	file:
identity	./sshconnect2.c	/^struct identity {$/;"	s	file:
identity_comment	./ssh-keygen.c	/^char *identity_comment = NULL;$/;"	v
identity_file	./ssh-keygen.c	/^char identity_file[1024];$/;"	v
identity_new_passphrase	./ssh-keygen.c	/^char *identity_new_passphrase = NULL;$/;"	v
identity_passphrase	./ssh-keygen.c	/^char *identity_passphrase = NULL;$/;"	v
identity_sign	./sshconnect2.c	/^identity_sign(Identity *id, u_char **sigp, u_int *lenp,$/;"	f	file:
idle_start	./clientloop.c	/^static unsigned long long idle_start = 0;$/;"	v	file:
idle_start	./serverloop.c	/^static unsigned long long idle_start = 0;$/;"	v	file:
idtab_init	./ssh-agent.c	/^idtab_init(void)$/;"	f	file:
idtab_lookup	./ssh-agent.c	/^idtab_lookup(int version)$/;"	f	file:
idtable	./ssh-agent.c	/^Idtab idtable[3];$/;"	v
ilen	./monitor.c	/^	u_int ilen;$/;"	m	struct:__anon8	file:
import_environments	./auth-pam.c	/^import_environments(Buffer *b)$/;"	f	file:
in_non_blocking_mode	./clientloop.c	/^static int in_non_blocking_mode = 0;$/;"	v	file:
incoming	./monitor.c	/^	z_stream incoming;$/;"	m	struct:__anon8	file:
incoming_packet	./packet.c	/^	Buffer incoming_packet;$/;"	m	struct:session_state	file:
incoming_stream	./compress.c	/^z_stream incoming_stream;$/;"	v
inetd_flag	./sshd.c	/^int inetd_flag = 0;$/;"	v
infile	./sftp.c	/^FILE* infile;$/;"	v
inflate_failed	./compress.c	/^static int inflate_failed = 0;$/;"	v	file:
info	./ssh-pkcs11.c	/^	CK_INFO			info;$/;"	m	struct:pkcs11_provider	file:
info_req_seen	./sshconnect2.c	/^	int info_req_seen;$/;"	m	struct:Authctxt	file:
init_hostkeys	./hostfile.c	/^init_hostkeys(void)$/;"	f
initialize_options	./readconf.c	/^initialize_options(Options * options)$/;"	f
initialize_server_options	./servconf.c	/^initialize_server_options(ServerOptions *options)$/;"	f
initialized	./packet.c	/^	int initialized;$/;"	m	struct:session_state	file:
input	./monitor.c	/^	u_char *input;$/;"	m	struct:__anon8	file:
input	./packet.c	/^	Buffer input;$/;"	m	struct:session_state	file:
input	./ssh-agent.c	/^	Buffer input;$/;"	m	struct:__anon19	file:
input_gssapi_error	./sshconnect2.c	/^input_gssapi_error(int type, u_int32_t plen, void *ctxt)$/;"	f
input_gssapi_errtok	./auth2-gss.c	/^input_gssapi_errtok(int type, u_int32_t plen, void *ctxt)$/;"	f	file:
input_gssapi_errtok	./sshconnect2.c	/^input_gssapi_errtok(int type, u_int32_t plen, void *ctxt)$/;"	f
input_gssapi_exchange_complete	./auth2-gss.c	/^input_gssapi_exchange_complete(int type, u_int32_t plen, void *ctxt)$/;"	f	file:
input_gssapi_mic	./auth2-gss.c	/^input_gssapi_mic(int type, u_int32_t plen, void *ctxt)$/;"	f	file:
input_gssapi_response	./sshconnect2.c	/^input_gssapi_response(int type, u_int32_t plen, void *ctxt)$/;"	f
input_gssapi_token	./auth2-gss.c	/^input_gssapi_token(int type, u_int32_t plen, void *ctxt)$/;"	f	file:
input_gssapi_token	./sshconnect2.c	/^input_gssapi_token(int type, u_int32_t plen, void *ctxt)$/;"	f
input_service_request	./auth2.c	/^input_service_request(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
input_userauth_banner	./sshconnect2.c	/^input_userauth_banner(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_error	./sshconnect2.c	/^input_userauth_error(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_failure	./sshconnect2.c	/^input_userauth_failure(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_info_req	./sshconnect2.c	/^input_userauth_info_req(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_info_response	./auth2-chall.c	/^input_userauth_info_response(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
input_userauth_jpake_client_confirm	./auth2-jpake.c	/^input_userauth_jpake_client_confirm(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
input_userauth_jpake_client_step1	./auth2-jpake.c	/^input_userauth_jpake_client_step1(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
input_userauth_jpake_client_step2	./auth2-jpake.c	/^input_userauth_jpake_client_step2(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
input_userauth_jpake_server_confirm	./sshconnect2.c	/^input_userauth_jpake_server_confirm(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_jpake_server_step1	./sshconnect2.c	/^input_userauth_jpake_server_step1(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_jpake_server_step2	./sshconnect2.c	/^input_userauth_jpake_server_step2(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_passwd_changereq	./sshconnect2.c	/^input_userauth_passwd_changereq(int type, u_int32_t seqnr, void *ctxt)$/;"	f
input_userauth_pk_ok	./sshconnect2.c	/^input_userauth_pk_ok(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_request	./auth2.c	/^input_userauth_request(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
input_userauth_success	./sshconnect2.c	/^input_userauth_success(int type, u_int32_t seq, void *ctxt)$/;"	f
input_userauth_success_unexpected	./sshconnect2.c	/^input_userauth_success_unexpected(int type, u_int32_t seq, void *ctxt)$/;"	f
insert_time	./misc.c	/^void insert_time(unsigned long long time){$/;"	f
interactive_loop	./sftp.c	/^interactive_loop(struct sftp_conn *conn, char *file1, char *file2)$/;"	f
interactive_mode	./packet.c	/^	int interactive_mode;$/;"	m	struct:session_state	file:
interrupted	./sftp.c	/^volatile sig_atomic_t interrupted = 0;$/;"	v
ip_aux	./umac.c	/^static UINT64 ip_aux(UINT64 t, UINT64 *ipkp, UINT64 data)$/;"	f	file:
ip_keys	./umac.c	/^    UINT64 ip_keys[STREAMS*4];            \/* Inner-product keys           *\/$/;"	m	struct:uhash_ctx	file:
ip_long	./umac.c	/^static void ip_long(uhash_ctx_t ahc, u_char *res)$/;"	f	file:
ip_reduce_p36	./umac.c	/^static UINT32 ip_reduce_p36(UINT64 t)$/;"	f	file:
ip_short	./umac.c	/^static void ip_short(uhash_ctx_t ahc, UINT8 *nh_res, u_char *res)$/;"	f	file:
ip_trans	./umac.c	/^    UINT32 ip_trans[STREAMS];             \/* Inner-product translation    *\/$/;"	m	struct:uhash_ctx	file:
ipqos	./misc.c	/^} ipqos[] = {$/;"	v	typeref:struct:__anon7	file:
iptos2str	./misc.c	/^iptos2str(int iptos)$/;"	f
ipv64_normalise_mapped	./canohost.c	/^ipv64_normalise_mapped(struct sockaddr_storage *addr, socklen_t *len)$/;"	f
iqueue	./sftp-server.c	/^Buffer iqueue;$/;"	v
iqueue	./ssh-pkcs11-helper.c	/^Buffer iqueue;$/;"	v
is_child	./session.c	/^static int is_child = 0;$/;"	v	file:
is_dir	./sftp.c	/^is_dir(char *path)$/;"	f	file:
is_md5_salt	./md5crypt.c	/^is_md5_salt(const char *salt)$/;"	f
is_numeric_hostname	./dns.c	/^is_numeric_hostname(const char *hostname)$/;"	f	file:
is_pam_session_open	./auth-pam.c	/^is_pam_session_open(void)$/;"	f
isprivate	./sshconnect2.c	/^	int	isprivate;		\/* key points to the private key *\/$/;"	m	struct:identity	file:
istates	./nchan.c	/^static char *istates[] = { "open", "drain", "wait_oclose", "closed" };$/;"	v	file:
itoa64	./md5crypt.c	/^static unsigned char itoa64[] =$/;"	v	file:
ivin	./monitor.c	/^	u_char *ivin;$/;"	m	struct:__anon8	file:
ivinlen	./monitor.c	/^	u_int ivinlen;$/;"	m	struct:__anon8	file:
ivout	./monitor.c	/^	u_char *ivout;$/;"	m	struct:__anon8	file:
ivoutlen	./monitor.c	/^	u_int ivoutlen;$/;"	m	struct:__anon8	file:
jpake_check_confirm	./jpake.c	/^jpake_check_confirm(const BIGNUM *k,$/;"	f
jpake_confirm_hash	./jpake.c	/^jpake_confirm_hash(const BIGNUM *k,$/;"	f
jpake_default_group	./jpake.c	/^jpake_default_group(void)$/;"	f
jpake_dump	./jpake.c	/^jpake_dump(struct jpake_ctx *pctx, const char *fmt, ...)$/;"	f
jpake_free	./jpake.c	/^jpake_free(struct jpake_ctx *pctx)$/;"	f
jpake_key_confirm	./jpake.c	/^jpake_key_confirm(struct modp_group *grp, BIGNUM *s, BIGNUM *step2_val,$/;"	f
jpake_new	./jpake.c	/^jpake_new(void)$/;"	f
jpake_password_to_secret	./sshconnect2.c	/^jpake_password_to_secret(Authctxt *authctxt, const char *crypt_scheme,$/;"	f	file:
jpake_step1	./jpake.c	/^jpake_step1(struct modp_group *grp,$/;"	f
jpake_step2	./jpake.c	/^jpake_step2(struct modp_group *grp, BIGNUM *s,$/;"	f
junk	./sandbox-null.c	/^	int junk;$/;"	m	struct:ssh_sandbox	file:
k1	./cipher-3des1.c	/^	EVP_CIPHER_CTX	k1, k2, k3;$/;"	m	struct:ssh1_3des_ctx	file:
k2	./cipher-3des1.c	/^	EVP_CIPHER_CTX	k1, k2, k3;$/;"	m	struct:ssh1_3des_ctx	file:
k3	./cipher-3des1.c	/^	EVP_CIPHER_CTX	k1, k2, k3;$/;"	m	struct:ssh1_3des_ctx	file:
kbdint_alloc	./auth2-chall.c	/^kbdint_alloc(const char *devs)$/;"	f	file:
kbdint_free	./auth2-chall.c	/^kbdint_free(KbdintAuthctxt *kbdintctxt)$/;"	f	file:
kbdint_next_device	./auth2-chall.c	/^kbdint_next_device(KbdintAuthctxt *kbdintctxt)$/;"	f	file:
kbdint_reset_device	./auth2-chall.c	/^kbdint_reset_device(KbdintAuthctxt *kbdintctxt)$/;"	f	file:
kdf	./umac.c	/^static void kdf(void *bufp, aes_int_key key, UINT8 ndx, int nbytes)$/;"	f	file:
keep_alive_timeouts	./packet.c	/^	int keep_alive_timeouts;$/;"	m	struct:session_state	file:
kex_buf2prop	./kex.c	/^kex_buf2prop(Buffer *raw, int *first_kex_follows)$/;"	f	file:
kex_choose_conf	./kex.c	/^kex_choose_conf(Kex *kex)$/;"	f	file:
kex_derive_keys	./kex.c	/^kex_derive_keys(Kex *kex, u_char *hash, u_int hashlen, BIGNUM *shared_secret)$/;"	f
kex_dh_hash	./kexdh.c	/^kex_dh_hash($/;"	f
kex_ecdh_hash	./kexecdh.c	/^kex_ecdh_hash($/;"	f
kex_ecdh_name_to_evpmd	./kexecdh.c	/^kex_ecdh_name_to_evpmd(const char *kexname)$/;"	f
kex_ecdh_name_to_nid	./kexecdh.c	/^kex_ecdh_name_to_nid(const char *kexname)$/;"	f
kex_finish	./kex.c	/^kex_finish(Kex *kex)$/;"	f
kex_get_newkeys	./kex.c	/^kex_get_newkeys(int mode)$/;"	f
kex_input_kexinit	./kex.c	/^kex_input_kexinit(int type, u_int32_t seq, void *ctxt)$/;"	f
kex_kexinit_finish	./kex.c	/^kex_kexinit_finish(Kex *kex)$/;"	f	file:
kex_names_valid	./kex.c	/^kex_names_valid(const char *names)$/;"	f
kex_prop2buf	./kex.c	/^kex_prop2buf(Buffer *b, char *proposal[PROPOSAL_MAX])$/;"	f	file:
kex_prop_free	./kex.c	/^kex_prop_free(char **proposal)$/;"	f	file:
kex_protocol_error	./kex.c	/^kex_protocol_error(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
kex_reset_dispatch	./kex.c	/^kex_reset_dispatch(void)$/;"	f	file:
kex_send_kexinit	./kex.c	/^kex_send_kexinit(Kex *kex)$/;"	f
kex_setup	./kex.c	/^kex_setup(char *proposal[PROPOSAL_MAX])$/;"	f
kexdh_client	./kexdhc.c	/^kexdh_client(Kex *kex)$/;"	f
kexdh_server	./kexdhs.c	/^kexdh_server(Kex *kex)$/;"	f
kexecdh_client	./kexecdhc.c	/^kexecdh_client(Kex *kex)$/;"	f
kexecdh_server	./kexecdhs.c	/^kexecdh_server(Kex *kex)$/;"	f
kexgex_client	./kexgexc.c	/^kexgex_client(Kex *kex)$/;"	f
kexgex_hash	./kexgex.c	/^kexgex_hash($/;"	f
kexgex_server	./kexgexs.c	/^kexgex_server(Kex *kex)$/;"	f
kexjmp	./ssh-keyscan.c	/^jmp_buf kexjmp;$/;"	v
kexjmp_key	./ssh-keyscan.c	/^Key *kexjmp_key;$/;"	v
key	./servconf.c	/^	char *key;$/;"	m	struct:multistate	file:
key	./ssh-agent.c	/^	Key *key;$/;"	m	struct:identity	file:
key	./ssh-pkcs11-helper.c	/^	Key		*key;$/;"	m	struct:pkcs11_keyinfo	file:
key	./sshconnect2.c	/^	Key	*key;			\/* public\/private key *\/$/;"	m	struct:identity	file:
key1	./roaming_client.c	/^static u_int64_t key1, key2, oldkey1, oldkey2;$/;"	v	file:
key2	./roaming_client.c	/^static u_int64_t key1, key2, oldkey1, oldkey2;$/;"	v	file:
key_add_private	./key.c	/^key_add_private(Key *k)$/;"	f
key_blob	./monitor.c	/^static u_char *key_blob = NULL;$/;"	v	file:
key_bloblen	./monitor.c	/^static u_int key_bloblen = 0;$/;"	v	file:
key_blobtype	./monitor.c	/^static int key_blobtype = MM_NOKEY;$/;"	v	file:
key_cert_check_authority	./key.c	/^key_cert_check_authority(const Key *k, int want_host, int require_principal,$/;"	f
key_cert_copy	./key.c	/^key_cert_copy(const Key *from_key, struct Key *to_key)$/;"	f
key_cert_is_legacy	./key.c	/^key_cert_is_legacy(Key *k)$/;"	f
key_cert_type	./key.c	/^key_cert_type(const Key *k)$/;"	f
key_certify	./key.c	/^key_certify(Key *k, Key *ca)$/;"	f
key_curve_name_to_nid	./key.c	/^key_curve_name_to_nid(const char *name)$/;"	f
key_curve_nid_to_bits	./key.c	/^key_curve_nid_to_bits(int nid)$/;"	f
key_curve_nid_to_name	./key.c	/^key_curve_nid_to_name(int nid)$/;"	f
key_demote	./key.c	/^key_demote(const Key *k)$/;"	f
key_do_regen	./sshd.c	/^static volatile sig_atomic_t key_do_regen = 0;$/;"	v	file:
key_drop_cert	./key.c	/^key_drop_cert(Key *k)$/;"	f
key_dump_ec_key	./key.c	/^key_dump_ec_key(const EC_KEY *key)$/;"	f
key_dump_ec_point	./key.c	/^key_dump_ec_point(const EC_GROUP *group, const EC_POINT *point)$/;"	f
key_ec_nid_to_evpmd	./key.c	/^key_ec_nid_to_evpmd(int nid)$/;"	f
key_ec_validate_private	./key.c	/^key_ec_validate_private(const EC_KEY *key)$/;"	f
key_ec_validate_public	./key.c	/^key_ec_validate_public(const EC_GROUP *group, const EC_POINT *public)$/;"	f
key_ecdsa_bits_to_nid	./key.c	/^key_ecdsa_bits_to_nid(int bits)$/;"	f
key_ecdsa_key_to_nid	./key.c	/^key_ecdsa_key_to_nid(EC_KEY *k)$/;"	f
key_ecdsa_nid_from_name	./key.c	/^key_ecdsa_nid_from_name(const char *name)$/;"	f
key_equal	./key.c	/^key_equal(const Key *a, const Key *b)$/;"	f
key_equal_public	./key.c	/^key_equal_public(const Key *a, const Key *b)$/;"	f
key_fingerprint	./key.c	/^key_fingerprint(Key *k, enum fp_type dgst_type, enum fp_rep dgst_rep)$/;"	f
key_fingerprint_bubblebabble	./key.c	/^key_fingerprint_bubblebabble(u_char *dgst_raw, u_int dgst_raw_len)$/;"	f	file:
key_fingerprint_hex	./key.c	/^key_fingerprint_hex(u_char *dgst_raw, u_int dgst_raw_len)$/;"	f	file:
key_fingerprint_randomart	./key.c	/^key_fingerprint_randomart(u_char *dgst_raw, u_int dgst_raw_len, const Key *k)$/;"	f	file:
key_fingerprint_raw	./key.c	/^key_fingerprint_raw(Key *k, enum fp_type dgst_type, u_int *dgst_raw_length)$/;"	f
key_free	./key.c	/^key_free(Key *k)$/;"	f
key_from_blob	./key.c	/^key_from_blob(const u_char *blob, u_int blen)$/;"	f
key_from_private	./key.c	/^key_from_private(const Key *k)$/;"	f
key_generate	./key.c	/^key_generate(int type, u_int bits)$/;"	f
key_in_file	./authfile.c	/^key_in_file(Key *key, const char *filename, int strict_type)$/;"	f
key_is_cert	./key.c	/^key_is_cert(const Key *k)$/;"	f
key_is_cert_authority	./auth-options.c	/^int key_is_cert_authority = 0;$/;"	v
key_len	./cipher.c	/^	u_int	key_len;$/;"	m	struct:Cipher	file:
key_len	./mac.c	/^	int		key_len;	\/* just for UMAC *\/$/;"	m	struct:__anon6	file:
key_load_cert	./authfile.c	/^key_load_cert(const char *filename)$/;"	f
key_load_file	./authfile.c	/^key_load_file(int fd, const char *filename, Buffer *blob)$/;"	f
key_load_private	./authfile.c	/^key_load_private(const char *filename, const char *passphrase,$/;"	f
key_load_private_cert	./authfile.c	/^key_load_private_cert(int type, const char *filename, const char *passphrase,$/;"	f
key_load_private_pem	./authfile.c	/^key_load_private_pem(int fd, int type, const char *passphrase,$/;"	f
key_load_private_type	./authfile.c	/^key_load_private_type(int type, const char *filename, const char *passphrase,$/;"	f
key_load_public	./authfile.c	/^key_load_public(const char *filename, char **commentp)$/;"	f
key_load_public_rsa1	./authfile.c	/^key_load_public_rsa1(int fd, const char *filename, char **commentp)$/;"	f	file:
key_load_public_type	./authfile.c	/^key_load_public_type(int type, const char *filename, char **commentp)$/;"	f
key_names_valid2	./key.c	/^key_names_valid2(const char *names)$/;"	f
key_new	./key.c	/^key_new(int type)$/;"	f
key_new_private	./key.c	/^key_new_private(int type)$/;"	f
key_parse_private	./authfile.c	/^key_parse_private(Buffer *buffer, const char *filename,$/;"	f
key_parse_private_pem	./authfile.c	/^key_parse_private_pem(Buffer *blob, int type, const char *passphrase,$/;"	f	file:
key_parse_private_rsa1	./authfile.c	/^key_parse_private_rsa1(Buffer *blob, const char *passphrase, char **commentp)$/;"	f	file:
key_parse_private_type	./authfile.c	/^key_parse_private_type(Buffer *blob, int type, const char *passphrase,$/;"	f	file:
key_parse_public_rsa1	./authfile.c	/^key_parse_public_rsa1(Buffer *blob, char **commentp)$/;"	f	file:
key_perm_ok	./authfile.c	/^key_perm_ok(int fd, const char *filename)$/;"	f
key_private_pem_to_blob	./authfile.c	/^key_private_pem_to_blob(Key *key, Buffer *blob, const char *_passphrase,$/;"	f	file:
key_private_rsa1_to_blob	./authfile.c	/^key_private_rsa1_to_blob(Key *key, Buffer *blob, const char *passphrase,$/;"	f	file:
key_private_to_blob	./authfile.c	/^key_private_to_blob(Key *key, Buffer *blob, const char *passphrase,$/;"	f	file:
key_read	./key.c	/^key_read(Key *ret, char **cpp)$/;"	f
key_regeneration_alarm	./sshd.c	/^key_regeneration_alarm(int sig)$/;"	f	file:
key_save_private	./authfile.c	/^key_save_private(Key *key, const char *filename, const char *passphrase,$/;"	f
key_save_private_blob	./authfile.c	/^key_save_private_blob(Buffer *keybuf, const char *filename)$/;"	f	file:
key_sign	./key.c	/^key_sign($/;"	f
key_size	./key.c	/^key_size(const Key *k)$/;"	f
key_ssh_name	./key.c	/^key_ssh_name(const Key *k)$/;"	f
key_ssh_name_from_type_nid	./key.c	/^key_ssh_name_from_type_nid(int type, int nid)$/;"	f	file:
key_ssh_name_plain	./key.c	/^key_ssh_name_plain(const Key *k)$/;"	f
key_to_blob	./key.c	/^key_to_blob(const Key *key, u_char **blobp, u_int *lenp)$/;"	f
key_to_certified	./key.c	/^key_to_certified(Key *k, int legacy)$/;"	f
key_try_load_public	./authfile.c	/^key_try_load_public(Key *k, const char *filename, char **commentp)$/;"	f	file:
key_type	./key.c	/^key_type(const Key *k)$/;"	f
key_type_from_name	./key.c	/^key_type_from_name(char *name)$/;"	f
key_type_name	./ssh-keygen.c	/^char *key_type_name = NULL;$/;"	v
key_type_plain	./key.c	/^key_type_plain(int type)$/;"	f
key_verify	./key.c	/^key_verify($/;"	f
key_write	./key.c	/^key_write(const Key *key, FILE *f)$/;"	f
keygrab_ssh1	./ssh-keyscan.c	/^keygrab_ssh1(con *c)$/;"	f	file:
keygrab_ssh2	./ssh-keyscan.c	/^keygrab_ssh2(con *c)$/;"	f	file:
keyid	./ssh-pkcs11.c	/^	char			*keyid;$/;"	m	struct:pkcs11_key	file:
keyid_len	./ssh-pkcs11.c	/^	int			keyid_len;$/;"	m	struct:pkcs11_key	file:
keyin	./monitor.c	/^	u_char *keyin;$/;"	m	struct:__anon8	file:
keyinlen	./monitor.c	/^	u_int keyinlen;$/;"	m	struct:__anon8	file:
keyout	./monitor.c	/^	u_char *keyout;$/;"	m	struct:__anon8	file:
keyoutlen	./monitor.c	/^	u_int keyoutlen;$/;"	m	struct:__anon8	file:
keyprint	./ssh-keyscan.c	/^keyprint(con *c, Key *key)$/;"	f	file:
keys	./sshconnect2.c	/^	Idlist keys;$/;"	m	struct:Authctxt	file:
keywords	./readconf.c	/^} keywords[] = {$/;"	v	typeref:struct:__anon11	file:
keywords	./servconf.c	/^} keywords[] = {$/;"	v	typeref:struct:__anon14	file:
killchild	./scp.c	/^killchild(int signo)$/;"	f	file:
killchild	./sftp.c	/^killchild(int signo)$/;"	f	file:
krb5_cleanup_proc	./auth-krb5.c	/^krb5_cleanup_proc(Authctxt *authctxt)$/;"	f
krb5_init	./auth-krb5.c	/^krb5_init(void *context)$/;"	f	file:
krb_context	./gss-serv-krb5.c	/^static krb5_context krb_context = NULL;$/;"	v	file:
ks	./cipher-acss.c	/^	ACSS_KEY ks;$/;"	m	struct:__anon3	file:
largebase	./moduli.c	/^static BIGNUM *largebase;$/;"	v	file:
largebits	./moduli.c	/^static u_int32_t largebits, largememory;	\/* megabytes *\/$/;"	v	file:
largememory	./moduli.c	/^static u_int32_t largebits, largememory;	\/* megabytes *\/$/;"	v	file:
largenumbers	./moduli.c	/^static u_int32_t *LargeSieve, largewords, largetries, largenumbers;$/;"	v	file:
largetries	./moduli.c	/^static u_int32_t *LargeSieve, largewords, largetries, largenumbers;$/;"	v	file:
largewords	./moduli.c	/^static u_int32_t *LargeSieve, largewords, largetries, largenumbers;$/;"	v	file:
last_update	./progressmeter.c	/^static time_t last_update;	\/* last progress update *\/$/;"	v	file:
last_was_cr	./clientloop.c	/^static int last_was_cr;		\/* Last character was a newline. *\/$/;"	v	file:
lastlog_get_entry	./loginrec.c	/^lastlog_get_entry(struct logininfo *li)$/;"	f
lastlog_openseek	./loginrec.c	/^lastlog_openseek(struct logininfo *li, int *fd, int filemode)$/;"	f	file:
lastlog_write_entry	./loginrec.c	/^lastlog_write_entry(struct logininfo *li)$/;"	f
lastseenchall	./roaming_client.c	/^static u_int64_t lastseenchall;$/;"	v	file:
launch_login	./session.c	/^launch_login(struct passwd *pw, const char *hostname)$/;"	f	file:
lc	./session.c	/^login_cap_t *lc;$/;"	v
leave_non_blocking	./clientloop.c	/^leave_non_blocking(void)$/;"	f	file:
leave_raw_mode	./sshtty.c	/^leave_raw_mode(int quiet)$/;"	f
len	./mac.c	/^	int		len;		\/* just for UMAC *\/$/;"	m	struct:__anon6	file:
lifetime	./ssh-add.c	/^static int lifetime = 0;$/;"	v	file:
lifetime	./ssh-agent.c	/^static int lifetime = 0;$/;"	v	file:
limit_kbps	./scp.c	/^long long limit_kbps = 0;$/;"	v
limit_kbps	./sftp-client.c	/^	u_int64_t limit_kbps;$/;"	m	struct:sftp_conn	file:
line_abbrevname	./loginrec.c	/^line_abbrevname(char *dst, const char *src, int dstsize)$/;"	f
line_fullname	./loginrec.c	/^line_fullname(char *dst, const char *src, u_int dstsize)$/;"	f
line_stripname	./loginrec.c	/^line_stripname(char *dst, const char *src, int dstsize)$/;"	f
linux_audit_record_event	./audit-linux.c	/^linux_audit_record_event(int uid, const char *username,$/;"	f
list_hostkey_types	./sshd.c	/^list_hostkey_types(void)$/;"	f	file:
list_identities	./ssh-add.c	/^list_identities(AuthenticationConnection *ac, int do_fp)$/;"	f	file:
listen_port	./channels.c	/^	u_short listen_port;		\/* Remote side should listen port number. *\/$/;"	m	struct:__anon2	file:
listen_socks	./sshd.c	/^int listen_socks[MAX_LISTEN_SOCKS];$/;"	v
load_hostkeys	./hostfile.c	/^load_hostkeys(struct hostkeys *hostkeys, const char *host, const char *path)$/;"	f
load_identity	./ssh-keygen.c	/^load_identity(char *filename)$/;"	f	file:
load_identity_file	./sshconnect2.c	/^load_identity_file(char *filename)$/;"	f	file:
load_pkcs11_key	./ssh-keygen.c	/^load_pkcs11_key(char *path)$/;"	f	file:
load_public_identity_files	./ssh.c	/^load_public_identity_files(void)$/;"	f	file:
load_server_config	./servconf.c	/^load_server_config(const char *filename, Buffer *conf)$/;"	f
local_do_ls	./sftp.c	/^local_do_ls(const char *args)$/;"	f	file:
local_do_shell	./sftp.c	/^local_do_shell(const char *args)$/;"	f	file:
local_user	./sshconnect2.c	/^	const char *local_user;$/;"	m	struct:Authctxt	file:
lock_agent	./ssh-add.c	/^lock_agent(AuthenticationConnection *ac, int lock)$/;"	f	file:
lock_passwd	./ssh-agent.c	/^char *lock_passwd = NULL;$/;"	v
locked	./ssh-agent.c	/^int locked = 0;$/;"	v
log_facilities	./log.c	/^} log_facilities[] = {$/;"	v	typeref:struct:__anon4	file:
log_facility	./log.c	/^static int log_facility = LOG_AUTH;$/;"	v	file:
log_facility_name	./log.c	/^log_facility_name(SyslogFacility facility)$/;"	f
log_facility_number	./log.c	/^log_facility_number(char *name)$/;"	f
log_handler	./log.c	/^static log_handler_fn *log_handler;$/;"	v	file:
log_handler_ctx	./log.c	/^static void *log_handler_ctx;$/;"	v	file:
log_init	./log.c	/^log_init(char *av0, LogLevel level, SyslogFacility facility, int on_stderr)$/;"	f
log_level	./log.c	/^static LogLevel log_level = SYSLOG_LEVEL_INFO;$/;"	v	file:
log_level	./sftp-server.c	/^LogLevel log_level = SYSLOG_LEVEL_ERROR;$/;"	v
log_level	./ssh-keygen.c	/^int log_level = SYSLOG_LEVEL_INFO;$/;"	v
log_level_name	./log.c	/^log_level_name(LogLevel level)$/;"	f
log_level_number	./log.c	/^log_level_number(char *name)$/;"	f
log_levels	./log.c	/^} log_levels[] =$/;"	v	typeref:struct:__anon5	file:
log_on_stderr	./log.c	/^static int log_on_stderr = 1;$/;"	v	file:
log_stderr	./sshd.c	/^int log_stderr = 0;$/;"	v
logged_in	./ssh-pkcs11.c	/^	int			logged_in;$/;"	m	struct:pkcs11_slotinfo	file:
login_alloc_entry	./loginrec.c	/^logininfo *login_alloc_entry(pid_t pid, const char *username,$/;"	f
login_free_entry	./loginrec.c	/^login_free_entry(struct logininfo *li)$/;"	f
login_get_lastlog	./loginrec.c	/^login_get_lastlog(struct logininfo *li, const uid_t uid)$/;"	f
login_get_lastlog_time	./loginrec.c	/^login_get_lastlog_time(const uid_t uid)$/;"	f
login_init_entry	./loginrec.c	/^login_init_entry(struct logininfo *li, pid_t pid, const char *username,$/;"	f
login_login	./loginrec.c	/^login_login(struct logininfo *li)$/;"	f
login_logout	./loginrec.c	/^login_logout(struct logininfo *li)$/;"	f
login_set_addr	./loginrec.c	/^login_set_addr(struct logininfo *li, const struct sockaddr *sa,$/;"	f
login_set_current_time	./loginrec.c	/^login_set_current_time(struct logininfo *li)$/;"	f
login_utmp_only	./loginrec.c	/^login_utmp_only(struct logininfo *li)$/;"	f
login_write	./loginrec.c	/^login_write(struct logininfo *li)$/;"	f
loginmsg	./sshd.c	/^Buffer loginmsg;$/;"	v
logit	./log.c	/^logit(const char *fmt,...)$/;"	f
long_name	./sftp-server.c	/^	char *long_name;$/;"	m	struct:Stat	file:
lookup_authmethod1	./auth1.c	/^*lookup_authmethod1(int type)$/;"	f	file:
lookup_identity	./ssh-agent.c	/^lookup_identity(Key *key, int version)$/;"	f	file:
lookup_key	./ssh-pkcs11-helper.c	/^lookup_key(Key *k)$/;"	f	file:
lookup_key_in_hostkeys_by_type	./hostfile.c	/^lookup_key_in_hostkeys_by_type(struct hostkeys *hostkeys, int keytype,$/;"	f
lookup_opcode_name	./servconf.c	/^lookup_opcode_name(ServerOpCodes code)$/;"	f	file:
lostconn	./scp.c	/^lostconn(int signo)$/;"	f
ls_file	./sftp-common.c	/^ls_file(const char *name, const struct stat *st, int remote, int si_units)$/;"	f
m36	./umac.c	767;"	d	file:
mac_clear	./mac.c	/^mac_clear(Mac *mac)$/;"	f
mac_compute	./mac.c	/^mac_compute(Mac *mac, u_int32_t seqno, u_char *data, int datalen)$/;"	f
mac_init	./mac.c	/^mac_init(Mac *mac)$/;"	f
mac_setup	./mac.c	/^mac_setup(Mac *mac, char *name)$/;"	f
mac_setup_by_id	./mac.c	/^mac_setup_by_id(Mac *mac, int which)$/;"	f	file:
mac_valid	./mac.c	/^mac_valid(const char *names)$/;"	f
macs	./mac.c	/^} macs[] = {$/;"	v	typeref:struct:__anon6
magic	./md5crypt.c	/^static char *magic = "$1$";$/;"	v	file:
main	./logintest.c	/^main(int argc, char *argv[])$/;"	f
main	./schnorr.c	/^main(int argc, char **argv)$/;"	f
main	./scp.c	/^main(int argc, char **argv)$/;"	f
main	./sftp-server-main.c	/^main(int argc, char **argv)$/;"	f
main	./sftp.c	/^main(int argc, char **argv)$/;"	f
main	./ssh-add.c	/^main(int argc, char **argv)$/;"	f
main	./ssh-agent.c	/^main(int ac, char **av)$/;"	f
main	./ssh-keygen.c	/^main(int argc, char **argv)$/;"	f
main	./ssh-keyscan.c	/^main(int argc, char **argv)$/;"	f
main	./ssh-keysign.c	/^main(int argc, char **argv)$/;"	f
main	./ssh-pkcs11-helper.c	/^main(int argc, char **argv)$/;"	f
main	./ssh.c	/^main(int ac, char **av)$/;"	f
main	./sshd.c	/^main(int ac, char **av)$/;"	f
main_sigchld_handler	./ssh.c	/^main_sigchld_handler(int sig)$/;"	f	file:
main_sigchld_handler	./sshd.c	/^main_sigchld_handler(int sig)$/;"	f	file:
make_absolute	./sftp.c	/^make_absolute(char *p, char *pwd)$/;"	f	file:
make_packets_from_stderr_data	./serverloop.c	/^make_packets_from_stderr_data(void)$/;"	f	file:
make_packets_from_stdout_data	./serverloop.c	/^make_packets_from_stdout_data(void)$/;"	f	file:
makeargv	./sftp.c	/^makeargv(const char *arg, int *argcp, int sloppy, char *lastquote,$/;"	f	file:
makesalt	./auth2-jpake.c	/^makesalt(u_int want, const char *user)$/;"	f	file:
masklen_valid	./addrmatch.c	/^masklen_valid(int af, u_int masklen)$/;"	f	file:
match_cfg_line	./servconf.c	/^match_cfg_line(char **condition, int line, const char *user, const char *host,$/;"	f	file:
match_cfg_line_group	./servconf.c	/^match_cfg_line_group(const char *grps, int line, const char *user)$/;"	f	file:
match_host_and_ip	./match.c	/^match_host_and_ip(const char *host, const char *ipaddr,$/;"	f
match_hostname	./match.c	/^match_hostname(const char *host, const char *pattern, u_int len)$/;"	f
match_list	./match.c	/^match_list(const char *client, const char *server, u_int *next)$/;"	f
match_pattern	./match.c	/^match_pattern(const char *s, const char *pattern)$/;"	f
match_pattern_list	./match.c	/^match_pattern_list(const char *string, const char *pattern, u_int len,$/;"	f
match_principals_file	./auth2-pubkey.c	/^match_principals_file(char *file, struct passwd *pw, struct KeyCert *cert)$/;"	f	file:
match_principals_option	./auth2-pubkey.c	/^match_principals_option(const char *principal_list, struct KeyCert *cert)$/;"	f	file:
match_user	./match.c	/^match_user(const char *user, const char *host, const char *ipaddr,$/;"	f
matching_host_key_dns	./sshconnect.c	/^static int matching_host_key_dns = 0;$/;"	v	file:
max_blocks_in	./packet.c	/^	u_int64_t max_blocks_in, max_blocks_out;$/;"	m	struct:session_state	file:
max_blocks_out	./packet.c	/^	u_int64_t max_blocks_in, max_blocks_out;$/;"	m	struct:session_state	file:
max_fd	./ssh-agent.c	/^int max_fd = 0;$/;"	v
max_packet_size	./packet.c	/^	u_int max_packet_size;$/;"	m	struct:session_state	file:
maxfd	./ssh-keyscan.c	/^int maxfd;$/;"	v
md5_crypt	./md5crypt.c	/^md5_crypt(const char *pw, const char *salt)$/;"	f
mdfunc	./mac.c	/^	const EVP_MD *	(*mdfunc)(void);$/;"	m	struct:__anon6	file:
method	./auth1.c	/^	int (*method)(Authctxt *, char *, size_t);$/;"	m	struct:AuthMethod1	file:
method	./sshconnect2.c	/^	Authmethod *method;$/;"	m	struct:Authctxt	file:
method_gssapi	./auth2-gss.c	/^Authmethod method_gssapi = {$/;"	v
method_hostbased	./auth2-hostbased.c	/^Authmethod method_hostbased = {$/;"	v
method_jpake	./auth2-jpake.c	/^Authmethod method_jpake = {$/;"	v
method_kbdint	./auth2-kbdint.c	/^Authmethod method_kbdint = {$/;"	v
method_none	./auth2-none.c	/^Authmethod method_none = {$/;"	v
method_passwd	./auth2-passwd.c	/^Authmethod method_passwd = {$/;"	v
method_pubkey	./auth2-pubkey.c	/^Authmethod method_pubkey = {$/;"	v
methoddata	./sshconnect2.c	/^	void *methoddata;$/;"	m	struct:Authctxt	file:
mktemp_proto	./misc.c	/^mktemp_proto(char *s, size_t len)$/;"	f
mm_answer_audit_command	./monitor.c	/^mm_answer_audit_command(int socket, Buffer *m)$/;"	f
mm_answer_audit_event	./monitor.c	/^mm_answer_audit_event(int socket, Buffer *m)$/;"	f
mm_answer_auth2_read_banner	./monitor.c	/^int mm_answer_auth2_read_banner(int sock, Buffer *m)$/;"	f
mm_answer_authpassword	./monitor.c	/^mm_answer_authpassword(int sock, Buffer *m)$/;"	f
mm_answer_authserv	./monitor.c	/^mm_answer_authserv(int sock, Buffer *m)$/;"	f
mm_answer_bsdauthquery	./monitor.c	/^mm_answer_bsdauthquery(int sock, Buffer *m)$/;"	f
mm_answer_bsdauthrespond	./monitor.c	/^mm_answer_bsdauthrespond(int sock, Buffer *m)$/;"	f
mm_answer_gss_accept_ctx	./monitor.c	/^mm_answer_gss_accept_ctx(int sock, Buffer *m)$/;"	f
mm_answer_gss_checkmic	./monitor.c	/^mm_answer_gss_checkmic(int sock, Buffer *m)$/;"	f
mm_answer_gss_setup_ctx	./monitor.c	/^mm_answer_gss_setup_ctx(int sock, Buffer *m)$/;"	f
mm_answer_gss_userok	./monitor.c	/^mm_answer_gss_userok(int sock, Buffer *m)$/;"	f
mm_answer_jpake_check_confirm	./monitor.c	/^mm_answer_jpake_check_confirm(int sock, Buffer *m)$/;"	f
mm_answer_jpake_get_pwdata	./monitor.c	/^mm_answer_jpake_get_pwdata(int sock, Buffer *m)$/;"	f
mm_answer_jpake_key_confirm	./monitor.c	/^mm_answer_jpake_key_confirm(int sock, Buffer *m)$/;"	f
mm_answer_jpake_step1	./monitor.c	/^mm_answer_jpake_step1(int sock, Buffer *m)$/;"	f
mm_answer_jpake_step2	./monitor.c	/^mm_answer_jpake_step2(int sock, Buffer *m)$/;"	f
mm_answer_keyallowed	./monitor.c	/^mm_answer_keyallowed(int sock, Buffer *m)$/;"	f
mm_answer_keyverify	./monitor.c	/^mm_answer_keyverify(int sock, Buffer *m)$/;"	f
mm_answer_moduli	./monitor.c	/^mm_answer_moduli(int sock, Buffer *m)$/;"	f
mm_answer_pam_account	./monitor.c	/^mm_answer_pam_account(int sock, Buffer *m)$/;"	f
mm_answer_pam_free_ctx	./monitor.c	/^mm_answer_pam_free_ctx(int sock, Buffer *m)$/;"	f
mm_answer_pam_init_ctx	./monitor.c	/^mm_answer_pam_init_ctx(int sock, Buffer *m)$/;"	f
mm_answer_pam_query	./monitor.c	/^mm_answer_pam_query(int sock, Buffer *m)$/;"	f
mm_answer_pam_respond	./monitor.c	/^mm_answer_pam_respond(int sock, Buffer *m)$/;"	f
mm_answer_pam_start	./monitor.c	/^mm_answer_pam_start(int sock, Buffer *m)$/;"	f
mm_answer_pty	./monitor.c	/^mm_answer_pty(int sock, Buffer *m)$/;"	f
mm_answer_pty_cleanup	./monitor.c	/^mm_answer_pty_cleanup(int sock, Buffer *m)$/;"	f
mm_answer_pwnamallow	./monitor.c	/^mm_answer_pwnamallow(int sock, Buffer *m)$/;"	f
mm_answer_rsa_challenge	./monitor.c	/^mm_answer_rsa_challenge(int sock, Buffer *m)$/;"	f
mm_answer_rsa_keyallowed	./monitor.c	/^mm_answer_rsa_keyallowed(int sock, Buffer *m)$/;"	f
mm_answer_rsa_response	./monitor.c	/^mm_answer_rsa_response(int sock, Buffer *m)$/;"	f
mm_answer_sessid	./monitor.c	/^mm_answer_sessid(int sock, Buffer *m)$/;"	f
mm_answer_sesskey	./monitor.c	/^mm_answer_sesskey(int sock, Buffer *m)$/;"	f
mm_answer_sign	./monitor.c	/^mm_answer_sign(int sock, Buffer *m)$/;"	f
mm_answer_skeyquery	./monitor.c	/^mm_answer_skeyquery(int sock, Buffer *m)$/;"	f
mm_answer_skeyrespond	./monitor.c	/^mm_answer_skeyrespond(int sock, Buffer *m)$/;"	f
mm_answer_term	./monitor.c	/^mm_answer_term(int sock, Buffer *req)$/;"	f
mm_audit_event	./monitor_wrap.c	/^mm_audit_event(ssh_audit_event_t event)$/;"	f
mm_audit_run_command	./monitor_wrap.c	/^mm_audit_run_command(const char *command)$/;"	f
mm_auth2_jpake_get_pwdata	./monitor_wrap.c	/^mm_auth2_jpake_get_pwdata(Authctxt *authctxt, BIGNUM **s,$/;"	f
mm_auth2_read_banner	./monitor_wrap.c	/^mm_auth2_read_banner(void)$/;"	f
mm_auth_password	./monitor_wrap.c	/^mm_auth_password(Authctxt *authctxt, char *password)$/;"	f
mm_auth_rhosts_rsa_key_allowed	./monitor_wrap.c	/^mm_auth_rhosts_rsa_key_allowed(struct passwd *pw, char *user,$/;"	f
mm_auth_rsa_generate_challenge	./monitor_wrap.c	/^mm_auth_rsa_generate_challenge(Key *key)$/;"	f
mm_auth_rsa_key_allowed	./monitor_wrap.c	/^mm_auth_rsa_key_allowed(struct passwd *pw, BIGNUM *client_n, Key **rkey)$/;"	f
mm_auth_rsa_verify_response	./monitor_wrap.c	/^mm_auth_rsa_verify_response(Key *key, BIGNUM *p, u_char response[16])$/;"	f
mm_bsdauth_device	./auth-bsdauth.c	/^KbdintDevice mm_bsdauth_device = {$/;"	v
mm_bsdauth_query	./monitor_wrap.c	/^mm_bsdauth_query(void *ctx, char **name, char **infotxt,$/;"	f
mm_bsdauth_respond	./monitor_wrap.c	/^mm_bsdauth_respond(void *ctx, u_int numresponses, char **responses)$/;"	f
mm_chall_setup	./monitor_wrap.c	/^mm_chall_setup(char **name, char **infotxt, u_int *numprompts,$/;"	f	file:
mm_choose_dh	./monitor_wrap.c	/^mm_choose_dh(int min, int nbits, int max)$/;"	f
mm_compare	./monitor_mm.c	/^mm_compare(struct mm_share *a, struct mm_share *b)$/;"	f	file:
mm_create	./monitor_mm.c	/^mm_create(struct mm_master *mmalloc, size_t size)$/;"	f
mm_destroy	./monitor_mm.c	/^mm_destroy(struct mm_master *mm)$/;"	f
mm_do_pam_account	./monitor_wrap.c	/^mm_do_pam_account(void)$/;"	f
mm_free	./monitor_mm.c	/^mm_free(struct mm_master *mm, void *address)$/;"	f
mm_freelist	./monitor_mm.c	/^mm_freelist(struct mm_master *mmalloc, struct mmtree *head)$/;"	f	file:
mm_get_kex	./monitor.c	/^mm_get_kex(Buffer *m)$/;"	f	file:
mm_get_keystate	./monitor.c	/^mm_get_keystate(struct monitor *pmonitor)$/;"	f
mm_getpwnamallow	./monitor_wrap.c	/^mm_getpwnamallow(const char *username)$/;"	f
mm_hostbased_key_allowed	./monitor_wrap.c	/^mm_hostbased_key_allowed(struct passwd *pw, char *user, char *host,$/;"	f
mm_inform_authserv	./monitor_wrap.c	/^mm_inform_authserv(char *service, char *style)$/;"	f
mm_init_compression	./monitor.c	/^mm_init_compression(struct mm_master *mm)$/;"	f
mm_is_monitor	./monitor_wrap.c	/^mm_is_monitor(void)$/;"	f
mm_jpake_check_confirm	./monitor_wrap.c	/^mm_jpake_check_confirm(const BIGNUM *k,$/;"	f
mm_jpake_key_confirm	./monitor_wrap.c	/^mm_jpake_key_confirm(struct modp_group *grp, BIGNUM *s, BIGNUM *step2_val,$/;"	f
mm_jpake_step1	./monitor_wrap.c	/^mm_jpake_step1(struct modp_group *grp,$/;"	f
mm_jpake_step2	./monitor_wrap.c	/^mm_jpake_step2(struct modp_group *grp, BIGNUM *s,$/;"	f
mm_key_allowed	./monitor_wrap.c	/^mm_key_allowed(enum mm_keytype type, char *user, char *host, Key *key)$/;"	f
mm_key_sign	./monitor_wrap.c	/^mm_key_sign(Key *key, u_char **sigp, u_int *lenp, u_char *data, u_int datalen)$/;"	f
mm_key_verify	./monitor_wrap.c	/^mm_key_verify(Key *key, u_char *sig, u_int siglen, u_char *data, u_int datalen)$/;"	f
mm_log_handler	./monitor_wrap.c	/^mm_log_handler(LogLevel level, const char *msg, void *ctx)$/;"	f
mm_make_entry	./monitor_mm.c	/^mm_make_entry(struct mm_master *mm, struct mmtree *head,$/;"	f	file:
mm_malloc	./monitor_mm.c	/^mm_malloc(struct mm_master *mm, size_t size)$/;"	f
mm_memvalid	./monitor_mm.c	/^mm_memvalid(struct mm_master *mm, void *address, size_t size)$/;"	f
mm_newkeys_from_blob	./monitor_wrap.c	/^mm_newkeys_from_blob(u_char *blob, int blen)$/;"	f
mm_newkeys_to_blob	./monitor_wrap.c	/^mm_newkeys_to_blob(int mode, u_char **blobp, u_int *lenp)$/;"	f
mm_pty_allocate	./monitor_wrap.c	/^mm_pty_allocate(int *ptyfd, int *ttyfd, char *namebuf, size_t namebuflen)$/;"	f
mm_receive_fd	./monitor_fdpass.c	/^mm_receive_fd(int sock)$/;"	f
mm_record_login	./monitor.c	/^mm_record_login(Session *s, struct passwd *pw)$/;"	f	file:
mm_request_receive	./monitor_wrap.c	/^mm_request_receive(int sock, Buffer *m)$/;"	f
mm_request_receive_expect	./monitor_wrap.c	/^mm_request_receive_expect(int sock, enum monitor_reqtype type, Buffer *m)$/;"	f
mm_request_send	./monitor_wrap.c	/^mm_request_send(int sock, enum monitor_reqtype type, Buffer *m)$/;"	f
mm_send_fd	./monitor_fdpass.c	/^mm_send_fd(int sock, int fd)$/;"	f
mm_send_kex	./monitor_wrap.c	/^mm_send_kex(Buffer *m, Kex *kex)$/;"	f	file:
mm_send_keystate	./monitor_wrap.c	/^mm_send_keystate(struct monitor *monitor)$/;"	f
mm_session_close	./monitor.c	/^mm_session_close(Session *s)$/;"	f	file:
mm_session_pty_cleanup2	./monitor_wrap.c	/^mm_session_pty_cleanup2(Session *s)$/;"	f
mm_share_sync	./monitor_mm.c	/^mm_share_sync(struct mm_master **pmm, struct mm_master **pmmalloc)$/;"	f
mm_skey_device	./auth-skey.c	/^KbdintDevice mm_skey_device = {$/;"	v
mm_skey_query	./monitor_wrap.c	/^mm_skey_query(void *ctx, char **name, char **infotxt,$/;"	f
mm_skey_respond	./monitor_wrap.c	/^mm_skey_respond(void *ctx, u_int numresponses, char **responses)$/;"	f
mm_ssh1_session_id	./monitor_wrap.c	/^mm_ssh1_session_id(u_char session_id[16])$/;"	f
mm_ssh1_session_key	./monitor_wrap.c	/^mm_ssh1_session_key(BIGNUM *num)$/;"	f
mm_ssh_gssapi_accept_ctx	./monitor_wrap.c	/^mm_ssh_gssapi_accept_ctx(Gssctxt *ctx, gss_buffer_desc *in,$/;"	f
mm_ssh_gssapi_checkmic	./monitor_wrap.c	/^mm_ssh_gssapi_checkmic(Gssctxt *ctx, gss_buffer_t gssbuf, gss_buffer_t gssmic)$/;"	f
mm_ssh_gssapi_server_ctx	./monitor_wrap.c	/^mm_ssh_gssapi_server_ctx(Gssctxt **ctx, gss_OID goid)$/;"	f
mm_ssh_gssapi_userok	./monitor_wrap.c	/^mm_ssh_gssapi_userok(char *user)$/;"	f
mm_sshpam_device	./auth-pam.c	/^KbdintDevice mm_sshpam_device = {$/;"	v
mm_sshpam_free_ctx	./monitor_wrap.c	/^mm_sshpam_free_ctx(void *ctxtp)$/;"	f
mm_sshpam_init_ctx	./monitor_wrap.c	/^mm_sshpam_init_ctx(Authctxt *authctxt)$/;"	f
mm_sshpam_query	./monitor_wrap.c	/^mm_sshpam_query(void *ctx, char **name, char **info,$/;"	f
mm_sshpam_respond	./monitor_wrap.c	/^mm_sshpam_respond(void *ctx, u_int num, char **resp)$/;"	f
mm_start_pam	./monitor_wrap.c	/^mm_start_pam(Authctxt *authctxt)$/;"	f
mm_sync_list	./monitor_mm.c	/^mm_sync_list(struct mmtree *oldtree, struct mmtree *newtree,$/;"	f	file:
mm_terminate	./monitor_wrap.c	/^mm_terminate(void)$/;"	f
mm_user_key_allowed	./monitor_wrap.c	/^mm_user_key_allowed(struct passwd *pw, Key *key)$/;"	f
mm_xmalloc	./monitor_mm.c	/^mm_xmalloc(struct mm_master *mm, size_t size)$/;"	f
mm_zalloc	./monitor.c	/^mm_zalloc(struct mm_master *mm, u_int ncount, u_int size)$/;"	f
mm_zfree	./monitor.c	/^mm_zfree(struct mm_master *mm, void *address)$/;"	f
modp_group_free	./schnorr.c	/^modp_group_free(struct modp_group *grp)$/;"	f
modp_group_from_g_and_safe_p	./schnorr.c	/^modp_group_from_g_and_safe_p(const char *grp_g, const char *grp_p)$/;"	f
mon_dispatch	./monitor.c	/^struct mon_table *mon_dispatch;$/;"	v	typeref:struct:mon_table
mon_dispatch_postauth15	./monitor.c	/^struct mon_table mon_dispatch_postauth15[] = {$/;"	v	typeref:struct:mon_table
mon_dispatch_postauth20	./monitor.c	/^struct mon_table mon_dispatch_postauth20[] = {$/;"	v	typeref:struct:mon_table
mon_dispatch_proto15	./monitor.c	/^struct mon_table mon_dispatch_proto15[] = {$/;"	v	typeref:struct:mon_table
mon_dispatch_proto20	./monitor.c	/^struct mon_table mon_dispatch_proto20[] = {$/;"	v	typeref:struct:mon_table
mon_table	./monitor.c	/^struct mon_table {$/;"	s	file:
monitor_allowed_key	./monitor.c	/^monitor_allowed_key(u_char *blob, u_int bloblen)$/;"	f	file:
monitor_apply_keystate	./monitor.c	/^monitor_apply_keystate(struct monitor *pmonitor)$/;"	f
monitor_child_handler	./monitor.c	/^monitor_child_handler(int sig)$/;"	f	file:
monitor_child_pid	./monitor.c	/^static pid_t monitor_child_pid;$/;"	v	file:
monitor_child_postauth	./monitor.c	/^monitor_child_postauth(struct monitor *pmonitor)$/;"	f
monitor_child_preauth	./monitor.c	/^monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)$/;"	f
monitor_init	./monitor.c	/^monitor_init(void)$/;"	f
monitor_openfds	./monitor.c	/^monitor_openfds(struct monitor *mon, int do_logfds)$/;"	f	file:
monitor_permit	./monitor.c	/^monitor_permit(struct mon_table *ent, enum monitor_reqtype type, int permit)$/;"	f	file:
monitor_permit_authentications	./monitor.c	/^monitor_permit_authentications(int permit)$/;"	f	file:
monitor_read	./monitor.c	/^monitor_read(struct monitor *pmonitor, struct mon_table *ent,$/;"	f
monitor_read_log	./monitor.c	/^monitor_read_log(struct monitor *pmonitor)$/;"	f	file:
monitor_reinit	./monitor.c	/^monitor_reinit(struct monitor *mon)$/;"	f
monitor_reset_key_state	./monitor.c	/^monitor_reset_key_state(void)$/;"	f	file:
monitor_set_child_handler	./monitor.c	/^monitor_set_child_handler(pid_t pid)$/;"	f	file:
monitor_sync	./monitor.c	/^monitor_sync(struct monitor *pmonitor)$/;"	f
monitor_valid_hostbasedblob	./monitor.c	/^monitor_valid_hostbasedblob(u_char *data, u_int datalen, char *cuser,$/;"	f	file:
monitor_valid_userblob	./monitor.c	/^monitor_valid_userblob(u_char *data, u_int datalen)$/;"	f	file:
ms_subtract_diff	./misc.c	/^ms_subtract_diff(struct timeval *start, int *ms)$/;"	f
ms_to_timeval	./misc.c	/^ms_to_timeval(struct timeval *tv, int ms)$/;"	f
msg_id	./sftp-client.c	/^	u_int msg_id;$/;"	m	struct:sftp_conn	file:
msg_len	./umac.c	/^    UINT32 msg_len;                       \/* Total length of data passed  *\/$/;"	m	struct:uhash_ctx	file:
mtime	./scp.c	916;"	d	file:
multistate	./servconf.c	/^struct multistate {$/;"	s	file:
multistate_addressfamily	./servconf.c	/^static const struct multistate multistate_addressfamily[] = {$/;"	v	typeref:struct:multistate	file:
multistate_compression	./servconf.c	/^static const struct multistate multistate_compression[] = {$/;"	v	typeref:struct:multistate	file:
multistate_gatewayports	./servconf.c	/^static const struct multistate multistate_gatewayports[] = {$/;"	v	typeref:struct:multistate	file:
multistate_permitrootlogin	./servconf.c	/^static const struct multistate multistate_permitrootlogin[] = {$/;"	v	typeref:struct:multistate	file:
multistate_privsep	./servconf.c	/^static const struct multistate multistate_privsep[] = {$/;"	v	typeref:struct:multistate	file:
mux_channel_confirm_ctx	./mux.c	/^struct mux_channel_confirm_ctx {$/;"	s	file:
mux_client_hello_exchange	./mux.c	/^mux_client_hello_exchange(int fd)$/;"	f	file:
mux_client_read	./mux.c	/^mux_client_read(int fd, Buffer *b, u_int need)$/;"	f	file:
mux_client_read_packet	./mux.c	/^mux_client_read_packet(int fd, Buffer *m)$/;"	f	file:
mux_client_request_alive	./mux.c	/^mux_client_request_alive(int fd)$/;"	f	file:
mux_client_request_forward	./mux.c	/^mux_client_request_forward(int fd, u_int ftype, Forward *fwd)$/;"	f	file:
mux_client_request_forwards	./mux.c	/^mux_client_request_forwards(int fd)$/;"	f	file:
mux_client_request_session	./mux.c	/^mux_client_request_session(int fd)$/;"	f	file:
mux_client_request_stdio_fwd	./mux.c	/^mux_client_request_stdio_fwd(int fd)$/;"	f	file:
mux_client_request_stop_listening	./mux.c	/^mux_client_request_stop_listening(int fd)$/;"	f	file:
mux_client_request_terminate	./mux.c	/^mux_client_request_terminate(int fd)$/;"	f	file:
mux_client_write_packet	./mux.c	/^mux_client_write_packet(int fd, Buffer *m)$/;"	f	file:
mux_confirm_remote_forward	./mux.c	/^mux_confirm_remote_forward(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
mux_exit_message	./mux.c	/^mux_exit_message(Channel *c, int exitval)$/;"	f
mux_listener_channel	./mux.c	/^static Channel *mux_listener_channel = NULL;$/;"	v	file:
mux_master_control_cleanup_cb	./mux.c	/^mux_master_control_cleanup_cb(int cid, void *unused)$/;"	f	file:
mux_master_handlers	./mux.c	/^} mux_master_handlers[] = {$/;"	v	typeref:struct:__anon9	file:
mux_master_read_cb	./mux.c	/^mux_master_read_cb(Channel *c)$/;"	f	file:
mux_master_session_cleanup_cb	./mux.c	/^mux_master_session_cleanup_cb(int cid, void *unused)$/;"	f	file:
mux_master_state	./mux.c	/^struct mux_master_state {$/;"	s	file:
mux_session_confirm	./mux.c	/^mux_session_confirm(int id, int success, void *arg)$/;"	f	file:
mux_session_confirm_ctx	./mux.c	/^struct mux_session_confirm_ctx {$/;"	s	file:
mux_tty_alloc_failed	./mux.c	/^mux_tty_alloc_failed(Channel *c)$/;"	f
muxclient	./mux.c	/^muxclient(const char *path)$/;"	f
muxclient_command	./mux.c	/^u_int muxclient_command = 0;$/;"	v
muxclient_request_id	./mux.c	/^u_int muxclient_request_id = 0;$/;"	v
muxclient_terminate	./mux.c	/^static volatile sig_atomic_t muxclient_terminate = 0;$/;"	v	file:
muxserver_listen	./mux.c	/^muxserver_listen(void)$/;"	f
muxserver_pid	./mux.c	/^static u_int muxserver_pid = 0;$/;"	v	file:
muxserver_sock	./mux.c	/^int muxserver_sock = -1;$/;"	v
n	./sftp.c	/^	const int n;$/;"	m	struct:CMD	file:
name	./auth1.c	/^	char *name;$/;"	m	struct:AuthMethod1	file:
name	./cipher.c	/^	char	*name;$/;"	m	struct:Cipher	file:
name	./log.c	/^	const char *name;$/;"	m	struct:__anon4	file:
name	./log.c	/^	const char *name;$/;"	m	struct:__anon5	file:
name	./mac.c	/^	char		*name;$/;"	m	struct:__anon6	file:
name	./misc.c	/^	const char *name;$/;"	m	struct:__anon7	file:
name	./readconf.c	/^	const char *name;$/;"	m	struct:__anon11	file:
name	./servconf.c	/^	const char *name;$/;"	m	struct:__anon14	file:
name	./sftp-server.c	/^	char *name;$/;"	m	struct:Handle	file:
name	./sftp-server.c	/^	char *name;$/;"	m	struct:Stat	file:
name	./ssh-pkcs11.c	/^	char			*name;$/;"	m	struct:pkcs11_provider	file:
name	./sshconnect2.c	/^	char	*name;		\/* string to compare against server's list *\/$/;"	m	struct:Authmethod	file:
ncon	./ssh-keyscan.c	/^int ncon;$/;"	v
need_controlpersist_detach	./ssh.c	/^int need_controlpersist_detach = 0;$/;"	v
need_rekeying	./clientloop.c	/^static int need_rekeying;	\/* Set to non-zero if rekeying is requested. *\/$/;"	v	file:
nentries	./ssh-agent.c	/^	int nentries;$/;"	m	struct:__anon20	file:
new_socket	./ssh-agent.c	/^new_socket(sock_type type, int fd)$/;"	f	file:
new_total_realincoming_bytes	./clientloop.c	/^static long new_total_realincoming_bytes = 0;$/;"	v	file:
new_total_realincoming_bytes	./serverloop.c	/^static long new_total_realincoming_bytes = 0;$/;"	v	file:
new_total_realsent_bytes	./clientloop.c	/^static long new_total_realsent_bytes = 0;$/;"	v	file:
new_total_realsent_bytes	./serverloop.c	/^static long new_total_realsent_bytes = 0;$/;"	v	file:
new_ts	./clientloop.c	/^static unsigned long long new_ts = 0;$/;"	v	file:
new_ts	./serverloop.c	/^static unsigned long long new_ts = 0;$/;"	v	file:
newkeys	./packet.c	/^	Newkeys *newkeys[MODE_MAX];$/;"	m	struct:session_state	file:
next_data_empty	./umac.c	/^    int next_data_empty;    \/* Bookeeping variable for data buffer.       *\/$/;"	m	struct:__anon24	file:
next_unused	./sftp-server.c	/^	int next_unused;$/;"	m	struct:Handle	file:
ngroups	./groupaccess.c	/^static int ngroups;$/;"	v	file:
nh	./umac.c	/^static void nh(nh_ctx *hc, UINT8 *buf, UINT32 padded_len,$/;"	f	file:
nh_aux	./umac.c	/^static void nh_aux(void *kp, void *dp, void *hp, UINT32 dlen)$/;"	f	file:
nh_ctx	./umac.c	/^} nh_ctx;$/;"	t	typeref:struct:__anon24	file:
nh_final	./umac.c	/^static void nh_final(nh_ctx *hc, UINT8 *result)$/;"	f	file:
nh_init	./umac.c	/^static void nh_init(nh_ctx *hc, aes_int_key prf_key)$/;"	f	file:
nh_key	./umac.c	/^    UINT8  nh_key [L1_KEY_LEN + L1_KEY_SHIFT * (STREAMS - 1)]; \/* NH Key *\/$/;"	m	struct:__anon24	file:
nh_reset	./umac.c	/^static void nh_reset(nh_ctx *hc)$/;"	f	file:
nh_transform	./umac.c	/^static void nh_transform(nh_ctx *hc, UINT8 *buf, UINT32 nbytes)$/;"	f	file:
nh_update	./umac.c	/^static void nh_update(nh_ctx *hc, UINT8 *buf, UINT32 nbytes)$/;"	f	file:
no_agent_forwarding_flag	./auth-options.c	/^int no_agent_forwarding_flag = 0;$/;"	v
no_daemon_flag	./sshd.c	/^int no_daemon_flag = 0;$/;"	v
no_identities	./ssh-agent.c	/^no_identities(SocketEntry *e, u_int type)$/;"	f	file:
no_more_sessions	./serverloop.c	/^static int no_more_sessions = 0; \/* Disallow further sessions. *\/$/;"	v	file:
no_port_forwarding_flag	./auth-options.c	/^int no_port_forwarding_flag = 0;$/;"	v
no_pty_flag	./auth-options.c	/^int no_pty_flag = 0;$/;"	v
no_shell_flag	./ssh.c	/^int no_shell_flag = 0;$/;"	v
no_user_rc	./auth-options.c	/^int no_user_rc = 0;$/;"	v
no_x11_forwarding_flag	./auth-options.c	/^int no_x11_forwarding_flag = 0;$/;"	v
nologtest	./logintest.c	/^int nologtest = 0;$/;"	v
nonce	./umac.c	/^    UINT8 nonce[AES_BLOCK_LEN];  \/* The AES input making above cache  *\/$/;"	m	struct:__anon23	file:
none_enabled	./auth2-none.c	/^static int none_enabled = 1;$/;"	v	file:
nonfatal_fatal	./ssh-keyscan.c	/^int nonfatal_fatal = 0;$/;"	v
notify_done	./serverloop.c	/^notify_done(fd_set *readset)$/;"	f	file:
notify_parent	./serverloop.c	/^notify_parent(void)$/;"	f	file:
notify_pipe	./serverloop.c	/^static int notify_pipe[2];$/;"	v	file:
notify_prepare	./serverloop.c	/^notify_prepare(fd_set *readset)$/;"	f	file:
notify_setup	./serverloop.c	/^notify_setup(void)$/;"	f	file:
nreq	./auth2-chall.c	/^	u_int nreq;$/;"	m	struct:KbdintAuthctxt	file:
nslots	./ssh-pkcs11.c	/^	CK_ULONG		nslots;$/;"	m	struct:pkcs11_provider	file:
null_conv	./auth-pam.c	/^static struct pam_conv null_conv = { sshpam_null_conv, NULL };$/;"	v	typeref:struct:pam_conv	file:
num_adm_permitted_opens	./channels.c	/^static int num_adm_permitted_opens = 0;$/;"	v	file:
num_entries	./hostfile.c	/^	u_int num_entries;$/;"	m	struct:hostkeys	file:
num_handles	./sftp-server.c	/^u_int num_handles = 0;$/;"	v
num_listen_socks	./sshd.c	/^int num_listen_socks = 0;$/;"	v
num_permitted_opens	./channels.c	/^static int num_permitted_opens = 0;$/;"	v	file:
num_requests	./sftp-client.c	/^	u_int num_requests;$/;"	m	struct:sftp_conn	file:
number	./cipher.c	/^	int	number;		\/* for ssh1 only *\/$/;"	m	struct:Cipher	file:
oAddressFamily	./readconf.c	/^	oAddressFamily, oGssAuthentication, oGssDelegateCreds,$/;"	e	enum:__anon10	file:
oBadOption	./readconf.c	/^	oBadOption,$/;"	e	enum:__anon10	file:
oBatchMode	./readconf.c	/^	oBatchMode, oCheckHostIP, oStrictHostKeyChecking, oCompression,$/;"	e	enum:__anon10	file:
oBindAddress	./readconf.c	/^	oHostKeyAlgorithms, oBindAddress, oPKCS11Provider,$/;"	e	enum:__anon10	file:
oChallengeResponseAuthentication	./readconf.c	/^	oChallengeResponseAuthentication, oXAuthLocation,$/;"	e	enum:__anon10	file:
oCheckHostIP	./readconf.c	/^	oBatchMode, oCheckHostIP, oStrictHostKeyChecking, oCompression,$/;"	e	enum:__anon10	file:
oCipher	./readconf.c	/^	oIdentityFile, oHostName, oPort, oCipher, oRemoteForward, oLocalForward,$/;"	e	enum:__anon10	file:
oCiphers	./readconf.c	/^	oUsePrivilegedPort, oLogLevel, oCiphers, oProtocol, oMacs,$/;"	e	enum:__anon10	file:
oClearAllForwardings	./readconf.c	/^	oClearAllForwardings, oNoHostAuthenticationForLocalhost,$/;"	e	enum:__anon10	file:
oCompression	./readconf.c	/^	oBatchMode, oCheckHostIP, oStrictHostKeyChecking, oCompression,$/;"	e	enum:__anon10	file:
oCompressionLevel	./readconf.c	/^	oCompressionLevel, oTCPKeepAlive, oNumberOfPasswordPrompts,$/;"	e	enum:__anon10	file:
oConnectTimeout	./readconf.c	/^	oEnableSSHKeysign, oRekeyLimit, oVerifyHostKeyDNS, oConnectTimeout,$/;"	e	enum:__anon10	file:
oConnectionAttempts	./readconf.c	/^	oGlobalKnownHostsFile, oUserKnownHostsFile, oConnectionAttempts,$/;"	e	enum:__anon10	file:
oControlMaster	./readconf.c	/^	oSendEnv, oControlPath, oControlMaster, oControlPersist,$/;"	e	enum:__anon10	file:
oControlPath	./readconf.c	/^	oSendEnv, oControlPath, oControlMaster, oControlPersist,$/;"	e	enum:__anon10	file:
oControlPersist	./readconf.c	/^	oSendEnv, oControlPath, oControlMaster, oControlPersist,$/;"	e	enum:__anon10	file:
oDeprecated	./readconf.c	/^	oDeprecated, oUnsupported$/;"	e	enum:__anon10	file:
oDynamicForward	./readconf.c	/^	oDynamicForward, oPreferredAuthentications, oHostbasedAuthentication,$/;"	e	enum:__anon10	file:
oEnableSSHKeysign	./readconf.c	/^	oEnableSSHKeysign, oRekeyLimit, oVerifyHostKeyDNS, oConnectTimeout,$/;"	e	enum:__anon10	file:
oEscapeChar	./readconf.c	/^	oUser, oHost, oEscapeChar, oRhostsRSAAuthentication, oProxyCommand,$/;"	e	enum:__anon10	file:
oExitOnForwardFailure	./readconf.c	/^	oGatewayPorts, oExitOnForwardFailure,$/;"	e	enum:__anon10	file:
oForwardAgent	./readconf.c	/^	oForwardAgent, oForwardX11, oForwardX11Trusted, oForwardX11Timeout,$/;"	e	enum:__anon10	file:
oForwardX11	./readconf.c	/^	oForwardAgent, oForwardX11, oForwardX11Trusted, oForwardX11Timeout,$/;"	e	enum:__anon10	file:
oForwardX11Timeout	./readconf.c	/^	oForwardAgent, oForwardX11, oForwardX11Trusted, oForwardX11Timeout,$/;"	e	enum:__anon10	file:
oForwardX11Trusted	./readconf.c	/^	oForwardAgent, oForwardX11, oForwardX11Trusted, oForwardX11Timeout,$/;"	e	enum:__anon10	file:
oGatewayPorts	./readconf.c	/^	oGatewayPorts, oExitOnForwardFailure,$/;"	e	enum:__anon10	file:
oGlobalKnownHostsFile	./readconf.c	/^	oGlobalKnownHostsFile, oUserKnownHostsFile, oConnectionAttempts,$/;"	e	enum:__anon10	file:
oGlobalKnownHostsFile2	./readconf.c	/^	oGlobalKnownHostsFile2, oUserKnownHostsFile2, oPubkeyAuthentication,$/;"	e	enum:__anon10	file:
oGssAuthentication	./readconf.c	/^	oAddressFamily, oGssAuthentication, oGssDelegateCreds,$/;"	e	enum:__anon10	file:
oGssDelegateCreds	./readconf.c	/^	oAddressFamily, oGssAuthentication, oGssDelegateCreds,$/;"	e	enum:__anon10	file:
oHashKnownHosts	./readconf.c	/^	oHashKnownHosts,$/;"	e	enum:__anon10	file:
oHost	./readconf.c	/^	oUser, oHost, oEscapeChar, oRhostsRSAAuthentication, oProxyCommand,$/;"	e	enum:__anon10	file:
oHostKeyAlgorithms	./readconf.c	/^	oHostKeyAlgorithms, oBindAddress, oPKCS11Provider,$/;"	e	enum:__anon10	file:
oHostKeyAlias	./readconf.c	/^	oKbdInteractiveAuthentication, oKbdInteractiveDevices, oHostKeyAlias,$/;"	e	enum:__anon10	file:
oHostName	./readconf.c	/^	oIdentityFile, oHostName, oPort, oCipher, oRemoteForward, oLocalForward,$/;"	e	enum:__anon10	file:
oHostbasedAuthentication	./readconf.c	/^	oDynamicForward, oPreferredAuthentications, oHostbasedAuthentication,$/;"	e	enum:__anon10	file:
oIPQoS	./readconf.c	/^	oKexAlgorithms, oIPQoS, oRequestTTY,$/;"	e	enum:__anon10	file:
oIdentitiesOnly	./readconf.c	/^	oServerAliveInterval, oServerAliveCountMax, oIdentitiesOnly,$/;"	e	enum:__anon10	file:
oIdentityFile	./readconf.c	/^	oIdentityFile, oHostName, oPort, oCipher, oRemoteForward, oLocalForward,$/;"	e	enum:__anon10	file:
oKbdInteractiveAuthentication	./readconf.c	/^	oKbdInteractiveAuthentication, oKbdInteractiveDevices, oHostKeyAlias,$/;"	e	enum:__anon10	file:
oKbdInteractiveDevices	./readconf.c	/^	oKbdInteractiveAuthentication, oKbdInteractiveDevices, oHostKeyAlias,$/;"	e	enum:__anon10	file:
oKexAlgorithms	./readconf.c	/^	oKexAlgorithms, oIPQoS, oRequestTTY,$/;"	e	enum:__anon10	file:
oLocalCommand	./readconf.c	/^	oTunnel, oTunnelDevice, oLocalCommand, oPermitLocalCommand,$/;"	e	enum:__anon10	file:
oLocalForward	./readconf.c	/^	oIdentityFile, oHostName, oPort, oCipher, oRemoteForward, oLocalForward,$/;"	e	enum:__anon10	file:
oLogLevel	./readconf.c	/^	oUsePrivilegedPort, oLogLevel, oCiphers, oProtocol, oMacs,$/;"	e	enum:__anon10	file:
oMacs	./readconf.c	/^	oUsePrivilegedPort, oLogLevel, oCiphers, oProtocol, oMacs,$/;"	e	enum:__anon10	file:
oNoHostAuthenticationForLocalhost	./readconf.c	/^	oClearAllForwardings, oNoHostAuthenticationForLocalhost,$/;"	e	enum:__anon10	file:
oNumberOfPasswordPrompts	./readconf.c	/^	oCompressionLevel, oTCPKeepAlive, oNumberOfPasswordPrompts,$/;"	e	enum:__anon10	file:
oPKCS11Provider	./readconf.c	/^	oHostKeyAlgorithms, oBindAddress, oPKCS11Provider,$/;"	e	enum:__anon10	file:
oPasswordAuthentication	./readconf.c	/^	oPasswordAuthentication, oRSAAuthentication,$/;"	e	enum:__anon10	file:
oPermitLocalCommand	./readconf.c	/^	oTunnel, oTunnelDevice, oLocalCommand, oPermitLocalCommand,$/;"	e	enum:__anon10	file:
oPort	./readconf.c	/^	oIdentityFile, oHostName, oPort, oCipher, oRemoteForward, oLocalForward,$/;"	e	enum:__anon10	file:
oPreferredAuthentications	./readconf.c	/^	oDynamicForward, oPreferredAuthentications, oHostbasedAuthentication,$/;"	e	enum:__anon10	file:
oProtocol	./readconf.c	/^	oUsePrivilegedPort, oLogLevel, oCiphers, oProtocol, oMacs,$/;"	e	enum:__anon10	file:
oProxyCommand	./readconf.c	/^	oUser, oHost, oEscapeChar, oRhostsRSAAuthentication, oProxyCommand,$/;"	e	enum:__anon10	file:
oPubkeyAuthentication	./readconf.c	/^	oGlobalKnownHostsFile2, oUserKnownHostsFile2, oPubkeyAuthentication,$/;"	e	enum:__anon10	file:
oRSAAuthentication	./readconf.c	/^	oPasswordAuthentication, oRSAAuthentication,$/;"	e	enum:__anon10	file:
oRekeyLimit	./readconf.c	/^	oEnableSSHKeysign, oRekeyLimit, oVerifyHostKeyDNS, oConnectTimeout,$/;"	e	enum:__anon10	file:
oRemoteForward	./readconf.c	/^	oIdentityFile, oHostName, oPort, oCipher, oRemoteForward, oLocalForward,$/;"	e	enum:__anon10	file:
oRequestTTY	./readconf.c	/^	oKexAlgorithms, oIPQoS, oRequestTTY,$/;"	e	enum:__anon10	file:
oRhostsRSAAuthentication	./readconf.c	/^	oUser, oHost, oEscapeChar, oRhostsRSAAuthentication, oProxyCommand,$/;"	e	enum:__anon10	file:
oSendEnv	./readconf.c	/^	oSendEnv, oControlPath, oControlMaster, oControlPersist,$/;"	e	enum:__anon10	file:
oServerAliveCountMax	./readconf.c	/^	oServerAliveInterval, oServerAliveCountMax, oIdentitiesOnly,$/;"	e	enum:__anon10	file:
oServerAliveInterval	./readconf.c	/^	oServerAliveInterval, oServerAliveCountMax, oIdentitiesOnly,$/;"	e	enum:__anon10	file:
oStrictHostKeyChecking	./readconf.c	/^	oBatchMode, oCheckHostIP, oStrictHostKeyChecking, oCompression,$/;"	e	enum:__anon10	file:
oTCPKeepAlive	./readconf.c	/^	oCompressionLevel, oTCPKeepAlive, oNumberOfPasswordPrompts,$/;"	e	enum:__anon10	file:
oTunnel	./readconf.c	/^	oTunnel, oTunnelDevice, oLocalCommand, oPermitLocalCommand,$/;"	e	enum:__anon10	file:
oTunnelDevice	./readconf.c	/^	oTunnel, oTunnelDevice, oLocalCommand, oPermitLocalCommand,$/;"	e	enum:__anon10	file:
oUnsupported	./readconf.c	/^	oDeprecated, oUnsupported$/;"	e	enum:__anon10	file:
oUsePrivilegedPort	./readconf.c	/^	oUsePrivilegedPort, oLogLevel, oCiphers, oProtocol, oMacs,$/;"	e	enum:__anon10	file:
oUseRoaming	./readconf.c	/^	oVisualHostKey, oUseRoaming, oZeroKnowledgePasswordAuthentication,$/;"	e	enum:__anon10	file:
oUser	./readconf.c	/^	oUser, oHost, oEscapeChar, oRhostsRSAAuthentication, oProxyCommand,$/;"	e	enum:__anon10	file:
oUserKnownHostsFile	./readconf.c	/^	oGlobalKnownHostsFile, oUserKnownHostsFile, oConnectionAttempts,$/;"	e	enum:__anon10	file:
oUserKnownHostsFile2	./readconf.c	/^	oGlobalKnownHostsFile2, oUserKnownHostsFile2, oPubkeyAuthentication,$/;"	e	enum:__anon10	file:
oVerifyHostKeyDNS	./readconf.c	/^	oEnableSSHKeysign, oRekeyLimit, oVerifyHostKeyDNS, oConnectTimeout,$/;"	e	enum:__anon10	file:
oVisualHostKey	./readconf.c	/^	oVisualHostKey, oUseRoaming, oZeroKnowledgePasswordAuthentication,$/;"	e	enum:__anon10	file:
oXAuthLocation	./readconf.c	/^	oChallengeResponseAuthentication, oXAuthLocation,$/;"	e	enum:__anon10	file:
oZeroKnowledgePasswordAuthentication	./readconf.c	/^	oVisualHostKey, oUseRoaming, oZeroKnowledgePasswordAuthentication,$/;"	e	enum:__anon10	file:
offset	./sftp-glob.c	/^	int offset;$/;"	m	struct:SFTP_OPENDIR	file:
okname	./scp.c	/^okname(char *cp0)$/;"	f
old_total_realincoming_bytes	./clientloop.c	/^static long old_total_realincoming_bytes = 0;$/;"	v	file:
old_total_realincoming_bytes	./serverloop.c	/^static long old_total_realincoming_bytes = 0;$/;"	v	file:
old_total_realsent_bytes	./clientloop.c	/^static long old_total_realsent_bytes = 0;$/;"	v	file:
old_total_realsent_bytes	./serverloop.c	/^static long old_total_realsent_bytes = 0;$/;"	v	file:
old_ts	./clientloop.c	/^static unsigned long long old_ts = 0;$/;"	v	file:
old_ts	./serverloop.c	/^static unsigned long long old_ts = 0;$/;"	v	file:
oldkey1	./roaming_client.c	/^static u_int64_t key1, key2, oldkey1, oldkey2;$/;"	v	file:
oldkey2	./roaming_client.c	/^static u_int64_t key1, key2, oldkey1, oldkey2;$/;"	v	file:
olen	./monitor.c	/^	u_int olen;$/;"	m	struct:__anon8	file:
onload_flag	./misc.c	/^static int onload_flag = 0;$/;"	v	file:
ono_shell_flag	./ssh.c	/^int ostdin_null_flag, ono_shell_flag, otty_flag, orequest_tty;$/;"	v
opcode	./readconf.c	/^	OpCodes opcode;$/;"	m	struct:__anon11	file:
opcode	./servconf.c	/^	ServerOpCodes opcode;$/;"	m	struct:__anon14	file:
openssh_RSA_verify	./ssh-rsa.c	/^openssh_RSA_verify(int type, u_char *hash, u_int hashlen,$/;"	f	file:
options	./ssh.c	/^Options options;$/;"	v
options	./sshd.c	/^ServerOptions options;$/;"	v
oqueue	./sftp-server.c	/^Buffer oqueue;$/;"	v
oqueue	./ssh-pkcs11-helper.c	/^Buffer oqueue;$/;"	v
order_hostkeyalgs	./sshconnect2.c	/^order_hostkeyalgs(char *host, struct sockaddr *hostaddr, u_short port)$/;"	f	file:
orequest_tty	./ssh.c	/^int ostdin_null_flag, ono_shell_flag, otty_flag, orequest_tty;$/;"	v
orig_bf	./cipher-bf1.c	/^static int (*orig_bf)(EVP_CIPHER_CTX *, u_char *,$/;"	v	file:
orig_finish	./ssh-pkcs11.c	/^	int			(*orig_finish)(RSA *rsa);$/;"	m	struct:pkcs11_key	file:
original_command	./session.c	/^const char *original_command = NULL;$/;"	v
original_effective_uid	./ssh.c	/^uid_t original_effective_uid;$/;"	v
original_real_uid	./ssh-keysign.c	/^uid_t original_real_uid;$/;"	v
original_real_uid	./ssh.c	/^uid_t original_real_uid;$/;"	v
ostates	./nchan.c	/^static char *ostates[] = { "open", "drain", "wait_ieof", "closed" };$/;"	v	file:
ostdin_null_flag	./ssh.c	/^int ostdin_null_flag, ono_shell_flag, otty_flag, orequest_tty;$/;"	v
otty_flag	./ssh.c	/^int ostdin_null_flag, ono_shell_flag, otty_flag, orequest_tty;$/;"	v
out_buf	./roaming_common.c	/^static char *out_buf = NULL;$/;"	v	file:
out_buf_size	./roaming_common.c	/^static size_t out_buf_size = 0;$/;"	v	file:
out_last	./roaming_common.c	/^static size_t out_last;$/;"	v	file:
out_start	./roaming_common.c	/^static size_t out_start;$/;"	v	file:
outbuf_remain	./clientloop.c	/^static int outbuf_remain = 0;$/;"	v	file:
outbuf_remain	./serverloop.c	/^static int outbuf_remain = 0;$/;"	v	file:
outgoing	./monitor.c	/^	z_stream outgoing;$/;"	m	struct:__anon8	file:
outgoing_buffer_len	./packet.c	/^int outgoing_buffer_len(){$/;"	f
outgoing_packet	./packet.c	/^	Buffer outgoing_packet;$/;"	m	struct:session_state	file:
outgoing_stream	./compress.c	/^z_stream outgoing_stream;$/;"	v
output	./monitor.c	/^	u_char *output;$/;"	m	struct:__anon8	file:
output	./packet.c	/^	Buffer output;$/;"	m	struct:session_state	file:
output	./ssh-agent.c	/^	Buffer output;$/;"	m	struct:__anon19	file:
output_buffer_len	./packet.c	/^int output_buffer_len(){$/;"	f
p36	./umac.c	765;"	d	file:
p64	./umac.c	766;"	d	file:
p_read	./packet.c	/^	struct packet_state p_read, p_send;$/;"	m	struct:session_state	typeref:struct:session_state::packet_state	file:
p_send	./packet.c	/^	struct packet_state p_read, p_send;$/;"	m	struct:session_state	typeref:struct:session_state::	file:
packet	./packet.c	/^struct packet {$/;"	s	file:
packet_add_padding	./packet.c	/^packet_add_padding(u_char pad)$/;"	f
packet_backup_state	./packet.c	/^packet_backup_state(void)$/;"	f
packet_close	./packet.c	/^packet_close(void)$/;"	f
packet_compression	./packet.c	/^	int packet_compression;$/;"	m	struct:session_state	file:
packet_connection_af	./packet.c	/^packet_connection_af(void)$/;"	f	file:
packet_connection_is_on_socket	./packet.c	/^packet_connection_is_on_socket(void)$/;"	f
packet_discard	./packet.c	/^	u_int packet_discard;$/;"	m	struct:session_state	file:
packet_discard_mac	./packet.c	/^	Mac *packet_discard_mac;$/;"	m	struct:session_state	file:
packet_disconnect	./packet.c	/^packet_disconnect(const char *fmt,...)$/;"	f
packet_enable_delayed_compress	./packet.c	/^packet_enable_delayed_compress(void)$/;"	f	file:
packet_get_bignum	./packet.c	/^packet_get_bignum(BIGNUM * value)$/;"	f
packet_get_bignum2	./packet.c	/^packet_get_bignum2(BIGNUM * value)$/;"	f
packet_get_char	./packet.c	/^packet_get_char(void)$/;"	f
packet_get_connection_in	./packet.c	/^packet_get_connection_in(void)$/;"	f
packet_get_connection_out	./packet.c	/^packet_get_connection_out(void)$/;"	f
packet_get_cstring	./packet.c	/^packet_get_cstring(u_int *length_ptr)$/;"	f
packet_get_ecpoint	./packet.c	/^packet_get_ecpoint(const EC_GROUP *curve, EC_POINT *point)$/;"	f
packet_get_encryption_key	./packet.c	/^packet_get_encryption_key(u_char *key)$/;"	f
packet_get_input	./packet.c	/^packet_get_input(void)$/;"	f
packet_get_int	./packet.c	/^packet_get_int(void)$/;"	f
packet_get_int64	./packet.c	/^packet_get_int64(void)$/;"	f
packet_get_keycontext	./packet.c	/^packet_get_keycontext(int mode, u_char *dat)$/;"	f
packet_get_keyiv	./packet.c	/^packet_get_keyiv(int mode, u_char *iv, u_int len)$/;"	f
packet_get_keyiv_len	./packet.c	/^packet_get_keyiv_len(int mode)$/;"	f
packet_get_maxsize	./packet.c	/^packet_get_maxsize(void)$/;"	f
packet_get_newkeys	./packet.c	/^packet_get_newkeys(int mode)$/;"	f
packet_get_output	./packet.c	/^packet_get_output(void)$/;"	f
packet_get_protocol_flags	./packet.c	/^packet_get_protocol_flags(void)$/;"	f
packet_get_raw	./packet.c	/^packet_get_raw(u_int *length_ptr)$/;"	f
packet_get_ssh1_cipher	./packet.c	/^packet_get_ssh1_cipher(void)$/;"	f
packet_get_state	./packet.c	/^packet_get_state(int mode, u_int32_t *seqnr, u_int64_t *blocks,$/;"	f
packet_get_string	./packet.c	/^packet_get_string(u_int *length_ptr)$/;"	f
packet_get_string_ptr	./packet.c	/^packet_get_string_ptr(u_int *length_ptr)$/;"	f
packet_have_data_to_write	./packet.c	/^packet_have_data_to_write(void)$/;"	f
packet_inc_alive_timeouts	./packet.c	/^packet_inc_alive_timeouts(void)$/;"	f
packet_init_compression	./packet.c	/^packet_init_compression(void)$/;"	f	file:
packet_is_interactive	./packet.c	/^packet_is_interactive(void)$/;"	f
packet_need_rekeying	./packet.c	/^packet_need_rekeying(void)$/;"	f
packet_not_very_much_data_to_write	./packet.c	/^packet_not_very_much_data_to_write(void)$/;"	f
packet_process_incoming	./packet.c	/^packet_process_incoming(const char *buf, u_int len)$/;"	f
packet_put_bignum	./packet.c	/^packet_put_bignum(BIGNUM * value)$/;"	f
packet_put_bignum2	./packet.c	/^packet_put_bignum2(BIGNUM * value)$/;"	f
packet_put_char	./packet.c	/^packet_put_char(int value)$/;"	f
packet_put_cstring	./packet.c	/^packet_put_cstring(const char *str)$/;"	f
packet_put_ecpoint	./packet.c	/^packet_put_ecpoint(const EC_GROUP *curve, const EC_POINT *point)$/;"	f
packet_put_int	./packet.c	/^packet_put_int(u_int value)$/;"	f
packet_put_int64	./packet.c	/^packet_put_int64(u_int64_t value)$/;"	f
packet_put_raw	./packet.c	/^packet_put_raw(const void *buf, u_int len)$/;"	f
packet_put_string	./packet.c	/^packet_put_string(const void *buf, u_int len)$/;"	f
packet_read	./packet.c	/^packet_read(void)$/;"	f
packet_read_expect	./packet.c	/^packet_read_expect(int expected_type)$/;"	f
packet_read_poll	./packet.c	/^packet_read_poll(void)$/;"	f
packet_read_poll1	./packet.c	/^packet_read_poll1(void)$/;"	f	file:
packet_read_poll2	./packet.c	/^packet_read_poll2(u_int32_t *seqnr_p)$/;"	f	file:
packet_read_poll_seqnr	./packet.c	/^packet_read_poll_seqnr(u_int32_t *seqnr_p)$/;"	f
packet_read_seqnr	./packet.c	/^packet_read_seqnr(u_int32_t *seqnr_p)$/;"	f
packet_remaining	./packet.c	/^packet_remaining(void)$/;"	f
packet_restore_state	./packet.c	/^packet_restore_state(void)$/;"	f
packet_send	./packet.c	/^packet_send(void)$/;"	f
packet_send1	./packet.c	/^packet_send1(void)$/;"	f	file:
packet_send2	./packet.c	/^packet_send2(void)$/;"	f	file:
packet_send2_wrapped	./packet.c	/^packet_send2_wrapped(void)$/;"	f	file:
packet_send_debug	./packet.c	/^packet_send_debug(const char *fmt,...)$/;"	f
packet_send_ignore	./packet.c	/^packet_send_ignore(int nbytes)$/;"	f
packet_send_notify	./packet.c	/^packet_send_notify(int nbytes, char flag)$/;"	f
packet_set_alive_timeouts	./packet.c	/^packet_set_alive_timeouts(int ka)$/;"	f
packet_set_authenticated	./packet.c	/^packet_set_authenticated(void)$/;"	f
packet_set_connection	./packet.c	/^packet_set_connection(int fd_in, int fd_out)$/;"	f
packet_set_encryption_key	./packet.c	/^packet_set_encryption_key(const u_char *key, u_int keylen, int number)$/;"	f
packet_set_interactive	./packet.c	/^packet_set_interactive(int interactive, int qos_interactive, int qos_bulk)$/;"	f
packet_set_iv	./packet.c	/^packet_set_iv(int mode, u_char *dat)$/;"	f
packet_set_keycontext	./packet.c	/^packet_set_keycontext(int mode, u_char *dat)$/;"	f
packet_set_maxsize	./packet.c	/^packet_set_maxsize(u_int s)$/;"	f
packet_set_nonblocking	./packet.c	/^packet_set_nonblocking(void)$/;"	f
packet_set_protocol_flags	./packet.c	/^packet_set_protocol_flags(u_int protocol_flags)$/;"	f
packet_set_rekey_limit	./packet.c	/^packet_set_rekey_limit(u_int32_t bytes)$/;"	f
packet_set_server	./packet.c	/^packet_set_server(void)$/;"	f
packet_set_state	./packet.c	/^packet_set_state(int mode, u_int32_t seqnr, u_int64_t blocks, u_int32_t packets,$/;"	f
packet_set_timeout	./packet.c	/^packet_set_timeout(int timeout, int count)$/;"	f
packet_set_tos	./packet.c	/^packet_set_tos(int tos)$/;"	f	file:
packet_start	./packet.c	/^packet_start(u_char type)$/;"	f
packet_start_compression	./packet.c	/^packet_start_compression(int level)$/;"	f
packet_start_discard	./packet.c	/^packet_start_discard(Enc *enc, Mac *mac, u_int packet_length, u_int discard)$/;"	f	file:
packet_state	./packet.c	/^struct packet_state {$/;"	s	file:
packet_stop_discard	./packet.c	/^packet_stop_discard(void)$/;"	f	file:
packet_timeout_ms	./packet.c	/^	int packet_timeout_ms;$/;"	m	struct:session_state	file:
packet_write_poll	./packet.c	/^packet_write_poll(void)$/;"	f
packet_write_wait	./packet.c	/^packet_write_wait(void)$/;"	f
packets	./packet.c	/^	u_int32_t packets;$/;"	m	struct:packet_state	file:
packlen	./packet.c	/^	u_int packlen;$/;"	m	struct:session_state	file:
paddingdone_flag	./misc.c	/^static int paddingdone_flag = 0;$/;"	v	file:
pam_chauthtok	./auth-pam.c	272;"	d	file:
pam_csock	./auth-pam.c	/^	int		 pam_csock;$/;"	m	struct:pam_ctxt	file:
pam_ctxt	./auth-pam.c	/^struct pam_ctxt {$/;"	s	file:
pam_done	./auth-pam.c	/^	int		 pam_done;$/;"	m	struct:pam_ctxt	file:
pam_getenvlist	./auth-pam.c	/^pam_getenvlist(pam_handle_t *pamh)$/;"	f	file:
pam_psock	./auth-pam.c	/^	int		 pam_psock;$/;"	m	struct:pam_ctxt	file:
pam_thread	./auth-pam.c	/^	sp_pthread_t	 pam_thread;$/;"	m	struct:pam_ctxt	file:
parent_alive_interval	./ssh-agent.c	/^u_int parent_alive_interval = 0;$/;"	v
parent_pid	./ssh-agent.c	/^pid_t parent_pid = -1;$/;"	v
parent_sock	./sandbox-systrace.c	/^	int parent_sock;$/;"	m	struct:ssh_sandbox	file:
parse_absolute_time	./ssh-keygen.c	/^parse_absolute_time(const char *s)$/;"	f	file:
parse_args	./sftp.c	/^parse_args(const char **cpp, int *pflag, int *rflag, int *lflag, int *iflag,$/;"	f	file:
parse_cert_times	./ssh-keygen.c	/^parse_cert_times(char *timespec)$/;"	f	file:
parse_df_flags	./sftp.c	/^parse_df_flags(const char *cmd, char **argv, int argc, int *hflag, int *iflag)$/;"	f	file:
parse_dispatch_command	./sftp.c	/^parse_dispatch_command(struct sftp_conn *conn, const char *cmd, char **pwd,$/;"	f	file:
parse_forward	./readconf.c	/^parse_forward(Forward *fwd, const char *fwdspec, int dynamicfwd, int remotefwd)$/;"	f
parse_getput_flags	./sftp.c	/^parse_getput_flags(const char *cmd, char **argv, int argc, int *pflag,$/;"	f	file:
parse_ipqos	./misc.c	/^parse_ipqos(const char *cp)$/;"	f
parse_link_flags	./sftp.c	/^parse_link_flags(const char *cmd, char **argv, int argc, int *sflag)$/;"	f	file:
parse_ls_flags	./sftp.c	/^parse_ls_flags(char **argv, int argc, int *lflag)$/;"	f	file:
parse_option_list	./auth-options.c	/^parse_option_list(u_char *optblob, size_t optblob_len, struct passwd *pw,$/;"	f	file:
parse_prime	./dh.c	/^parse_prime(int linenum, char *line, struct dhgroup *dhg)$/;"	f	file:
parse_relative_time	./ssh-keygen.c	/^parse_relative_time(const char *s, time_t now)$/;"	f	file:
parse_server_config	./servconf.c	/^parse_server_config(ServerOptions *options, const char *filename, Buffer *conf,$/;"	f
parse_server_match_config	./servconf.c	/^parse_server_match_config(ServerOptions *options, const char *user,$/;"	f
parse_token	./readconf.c	/^parse_token(const char *cp, const char *filename, int linenum)$/;"	f	file:
parse_token	./servconf.c	/^parse_token(const char *cp, const char *filename,$/;"	f	file:
pass	./ssh-add.c	/^static char *pass = NULL;$/;"	v	file:
passwd_conv	./auth-pam.c	/^static struct pam_conv passwd_conv = { sshpam_passwd_conv, NULL };$/;"	v	typeref:struct:pam_conv	file:
path_append	./sftp-client.c	/^path_append(char *p1, char *p2)$/;"	f
path_strip	./sftp.c	/^path_strip(char *path, char *strip)$/;"	f	file:
pathname_is_dir	./sftp.c	/^pathname_is_dir(char *pathname)$/;"	f	file:
payload	./packet.c	/^	Buffer payload;$/;"	m	struct:packet	file:
pdf	./umac.c	/^    pdf_ctx pdf;             \/* PDF for hashed output                    *\/$/;"	m	struct:umac_ctx	file:
pdf_ctx	./umac.c	/^} pdf_ctx;$/;"	t	typeref:struct:__anon23	file:
pdf_gen_xor	./umac.c	/^static void pdf_gen_xor(pdf_ctx *pc, UINT8 nonce[8], UINT8 buf[8])$/;"	f	file:
pdf_init	./umac.c	/^static void pdf_init(pdf_ctx *pc, aes_int_key prf_key)$/;"	f	file:
percent_expand	./misc.c	/^percent_expand(const char *string, ...)$/;"	f
permanently_drop_suid	./uidswap.c	/^permanently_drop_suid(uid_t uid)$/;"	f
permanently_set_uid	./uidswap.c	/^permanently_set_uid(struct passwd *pw)$/;"	f
permitted_adm_opens	./channels.c	/^static ForwardPermission *permitted_adm_opens = NULL;$/;"	v	file:
permitted_opens	./channels.c	/^static ForwardPermission *permitted_opens = NULL;$/;"	v	file:
pflag	./scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v
pid	./ssh-pkcs11-client.c	/^pid_t pid = -1;$/;"	v
pkcs11_add_provider	./ssh-pkcs11-client.c	/^pkcs11_add_provider(char *name, char *pin, Key ***keysp)$/;"	f
pkcs11_add_provider	./ssh-pkcs11.c	/^pkcs11_add_provider(char *provider_id, char *pin, Key ***keyp)$/;"	f
pkcs11_del_provider	./ssh-pkcs11-client.c	/^pkcs11_del_provider(char *name)$/;"	f
pkcs11_del_provider	./ssh-pkcs11.c	/^pkcs11_del_provider(char *provider_id)$/;"	f
pkcs11_fetch_keys	./ssh-pkcs11.c	/^pkcs11_fetch_keys(struct pkcs11_provider *p, CK_ULONG slotidx, Key ***keysp,$/;"	f	file:
pkcs11_find	./ssh-pkcs11.c	/^pkcs11_find(struct pkcs11_provider *p, CK_ULONG slotidx, CK_ATTRIBUTE *attr,$/;"	f	file:
pkcs11_init	./ssh-pkcs11-client.c	/^pkcs11_init(int interactive)$/;"	f
pkcs11_init	./ssh-pkcs11.c	/^pkcs11_init(int interactive)$/;"	f
pkcs11_interactive	./ssh-pkcs11.c	/^int pkcs11_interactive = 0;$/;"	v
pkcs11_key	./ssh-pkcs11.c	/^struct pkcs11_key {$/;"	s	file:
pkcs11_keyinfo	./ssh-pkcs11-helper.c	/^struct pkcs11_keyinfo {$/;"	s	file:
pkcs11_open_session	./ssh-pkcs11.c	/^pkcs11_open_session(struct pkcs11_provider *p, CK_ULONG slotidx, char *pin)$/;"	f	file:
pkcs11_provider	./ssh-pkcs11.c	/^struct pkcs11_provider {$/;"	s	file:
pkcs11_provider_finalize	./ssh-pkcs11.c	/^pkcs11_provider_finalize(struct pkcs11_provider *p)$/;"	f	file:
pkcs11_provider_lookup	./ssh-pkcs11.c	/^pkcs11_provider_lookup(char *provider_id)$/;"	f	file:
pkcs11_provider_unref	./ssh-pkcs11.c	/^pkcs11_provider_unref(struct pkcs11_provider *p)$/;"	f	file:
pkcs11_rsa_finish	./ssh-pkcs11.c	/^pkcs11_rsa_finish(RSA *rsa)$/;"	f	file:
pkcs11_rsa_private_decrypt	./ssh-pkcs11.c	/^pkcs11_rsa_private_decrypt(int flen, const u_char *from, u_char *to, RSA *rsa,$/;"	f	file:
pkcs11_rsa_private_encrypt	./ssh-pkcs11-client.c	/^pkcs11_rsa_private_encrypt(int flen, const u_char *from, u_char *to, RSA *rsa,$/;"	f	file:
pkcs11_rsa_private_encrypt	./ssh-pkcs11.c	/^pkcs11_rsa_private_encrypt(int flen, const u_char *from, u_char *to, RSA *rsa,$/;"	f	file:
pkcs11_rsa_wrap	./ssh-pkcs11.c	/^pkcs11_rsa_wrap(struct pkcs11_provider *provider, CK_ULONG slotidx,$/;"	f	file:
pkcs11_slotinfo	./ssh-pkcs11.c	/^struct pkcs11_slotinfo {$/;"	s	file:
pkcs11_start_helper	./ssh-pkcs11-client.c	/^pkcs11_start_helper(void)$/;"	f	file:
pkcs11_terminate	./ssh-pkcs11-client.c	/^pkcs11_terminate(void)$/;"	f
pkcs11_terminate	./ssh-pkcs11.c	/^pkcs11_terminate(void)$/;"	f
pkcs11provider	./ssh-keygen.c	/^char *pkcs11provider = NULL;$/;"	v
platform_krb5_get_principal_name	./platform.c	/^platform_krb5_get_principal_name(const char *pw_name)$/;"	f
platform_post_fork_child	./platform.c	/^platform_post_fork_child(void)$/;"	f
platform_post_fork_parent	./platform.c	/^platform_post_fork_parent(pid_t child_pid)$/;"	f
platform_pre_fork	./platform.c	/^platform_pre_fork(void)$/;"	f
platform_pre_listen	./platform.c	/^platform_pre_listen(void)$/;"	f
platform_privileged_uidswap	./platform.c	/^platform_privileged_uidswap(void)$/;"	f
platform_setusercontext	./platform.c	/^platform_setusercontext(struct passwd *pw)$/;"	f
platform_setusercontext_post_groups	./platform.c	/^platform_setusercontext_post_groups(struct passwd *pw)$/;"	f
pmonitor	./sshd.c	/^struct monitor *pmonitor = NULL;$/;"	v	typeref:struct:monitor
poly64	./umac.c	/^static UINT64 poly64(UINT64 cur, UINT64 key, UINT64 data)$/;"	f	file:
poly_accum	./umac.c	/^    UINT64 poly_accum[STREAMS];           \/* poly hash result             *\/$/;"	m	struct:uhash_ctx	file:
poly_hash	./umac.c	/^static void poly_hash(uhash_ctx_t hc, UINT32 data_in[])$/;"	f	file:
poly_key_8	./umac.c	/^    UINT64 poly_key_8[STREAMS];           \/* p64 poly keys                *\/$/;"	m	struct:uhash_ctx	file:
port_open_helper	./channels.c	/^port_open_helper(Channel *c, char *rtype)$/;"	f	file:
port_to_connect	./channels.c	/^	u_short port_to_connect;	\/* Connect to 'port'. *\/$/;"	m	struct:__anon2	file:
pre_rate	./clientloop.c	/^static float pre_rate = 0.0f;$/;"	v	file:
pre_rate	./serverloop.c	/^static float pre_rate = 0.0f;$/;"	v	file:
preauth_policy	./sandbox-systrace.c	/^static const struct sandbox_policy preauth_policy[] = {$/;"	v	typeref:struct:sandbox_policy	file:
preferred	./sshconnect2.c	/^static char *preferred = NULL;$/;"	v	file:
prepare_options_buf	./ssh-keygen.c	/^prepare_options_buf(Buffer *c, int which)$/;"	f	file:
prepare_select	./ssh-agent.c	/^prepare_select(fd_set **fdrp, fd_set **fdwp, int *fdl, u_int *nallocp,$/;"	f	file:
prf_key	./umac.c	/^    aes_int_key prf_key;         \/* Expanded AES key for PDF          *\/$/;"	m	struct:__anon23	file:
prime_test	./moduli.c	/^prime_test(FILE *in, FILE *out, u_int32_t trials, u_int32_t generator_wanted)$/;"	f
print_bubblebabble	./ssh-keygen.c	/^int print_bubblebabble = 0;$/;"	v
print_fingerprint	./ssh-keygen.c	/^int print_fingerprint = 0;$/;"	v
print_generic	./ssh-keygen.c	/^int print_generic = 0;$/;"	v
print_public	./ssh-keygen.c	/^int print_public = 0;$/;"	v
printhost	./ssh-keygen.c	/^printhost(FILE *f, const char *name, Key *public, int ca, int hash)$/;"	f	file:
privileged	./uidswap.c	/^static int	privileged = 0;$/;"	v	file:
privsep_challenge_enable	./auth2-chall.c	/^privsep_challenge_enable(void)$/;"	f
privsep_postauth	./sshd.c	/^privsep_postauth(Authctxt *authctxt)$/;"	f	file:
privsep_preauth	./sshd.c	/^privsep_preauth(Authctxt *authctxt)$/;"	f	file:
privsep_preauth_child	./sshd.c	/^privsep_preauth_child(void)$/;"	f	file:
privsep_pw	./sshd.c	/^struct passwd *privsep_pw = NULL;$/;"	v	typeref:struct:passwd
process	./sftp-server.c	/^process(void)$/;"	f	file:
process	./ssh-pkcs11-helper.c	/^process(void)$/;"	f	file:
process_add	./ssh-pkcs11-helper.c	/^process_add(void)$/;"	f	file:
process_add_identity	./ssh-agent.c	/^process_add_identity(SocketEntry *e, int version)$/;"	f	file:
process_add_smartcard_key	./ssh-agent.c	/^process_add_smartcard_key(SocketEntry *e)$/;"	f	file:
process_authentication_challenge1	./ssh-agent.c	/^process_authentication_challenge1(SocketEntry *e)$/;"	f	file:
process_buffered_input_packets	./serverloop.c	/^process_buffered_input_packets(void)$/;"	f	file:
process_close	./sftp-server.c	/^process_close(void)$/;"	f	file:
process_cmdline	./clientloop.c	/^process_cmdline(void)$/;"	f	file:
process_config_line	./readconf.c	/^process_config_line(Options *options, const char *host,$/;"	f
process_del	./ssh-pkcs11-helper.c	/^process_del(void)$/;"	f	file:
process_do_stat	./sftp-server.c	/^process_do_stat(int do_lstat)$/;"	f	file:
process_escapes	./clientloop.c	/^process_escapes(Channel *c, Buffer *bin, Buffer *bout, Buffer *berr,$/;"	f	file:
process_extended	./sftp-server.c	/^process_extended(void)$/;"	f	file:
process_extended_fstatvfs	./sftp-server.c	/^process_extended_fstatvfs(u_int32_t id)$/;"	f	file:
process_extended_hardlink	./sftp-server.c	/^process_extended_hardlink(u_int32_t id)$/;"	f	file:
process_extended_posix_rename	./sftp-server.c	/^process_extended_posix_rename(u_int32_t id)$/;"	f	file:
process_extended_statvfs	./sftp-server.c	/^process_extended_statvfs(u_int32_t id)$/;"	f	file:
process_fsetstat	./sftp-server.c	/^process_fsetstat(void)$/;"	f	file:
process_fstat	./sftp-server.c	/^process_fstat(void)$/;"	f	file:
process_get	./sftp.c	/^process_get(struct sftp_conn *conn, char *src, char *dst, char *pwd,$/;"	f	file:
process_gssapi_token	./sshconnect2.c	/^process_gssapi_token(void *ctxt, gss_buffer_t recv_tok)$/;"	f	file:
process_init	./sftp-server.c	/^process_init(void)$/;"	f	file:
process_input	./serverloop.c	/^process_input(fd_set *readset)$/;"	f	file:
process_lock_agent	./ssh-agent.c	/^process_lock_agent(SocketEntry *e, int lock)$/;"	f	file:
process_lstat	./sftp-server.c	/^process_lstat(void)$/;"	f	file:
process_message	./ssh-agent.c	/^process_message(SocketEntry *e)$/;"	f	file:
process_mkdir	./sftp-server.c	/^process_mkdir(void)$/;"	f	file:
process_mux_alive_check	./mux.c	/^process_mux_alive_check(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_close_fwd	./mux.c	/^process_mux_close_fwd(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_master_hello	./mux.c	/^process_mux_master_hello(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_new_session	./mux.c	/^process_mux_new_session(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_open_fwd	./mux.c	/^process_mux_open_fwd(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_stdio_fwd	./mux.c	/^process_mux_stdio_fwd(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_stop_listening	./mux.c	/^process_mux_stop_listening(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_mux_terminate	./mux.c	/^process_mux_terminate(u_int rid, Channel *c, Buffer *m, Buffer *r)$/;"	f	file:
process_open	./sftp-server.c	/^process_open(void)$/;"	f	file:
process_opendir	./sftp-server.c	/^process_opendir(void)$/;"	f	file:
process_output	./serverloop.c	/^process_output(fd_set *writeset)$/;"	f	file:
process_put	./sftp.c	/^process_put(struct sftp_conn *conn, char *src, char *dst, char *pwd,$/;"	f	file:
process_read	./sftp-server.c	/^process_read(void)$/;"	f	file:
process_readdir	./sftp-server.c	/^process_readdir(void)$/;"	f	file:
process_readlink	./sftp-server.c	/^process_readlink(void)$/;"	f	file:
process_realpath	./sftp-server.c	/^process_realpath(void)$/;"	f	file:
process_remove	./sftp-server.c	/^process_remove(void)$/;"	f	file:
process_remove_all_identities	./ssh-agent.c	/^process_remove_all_identities(SocketEntry *e, int version)$/;"	f	file:
process_remove_identity	./ssh-agent.c	/^process_remove_identity(SocketEntry *e, int version)$/;"	f	file:
process_remove_smartcard_key	./ssh-agent.c	/^process_remove_smartcard_key(SocketEntry *e)$/;"	f	file:
process_rename	./sftp-server.c	/^process_rename(void)$/;"	f	file:
process_request_identities	./ssh-agent.c	/^process_request_identities(SocketEntry *e, int version)$/;"	f	file:
process_rmdir	./sftp-server.c	/^process_rmdir(void)$/;"	f	file:
process_server_config_line	./servconf.c	/^process_server_config_line(ServerOptions *options, char *line,$/;"	f
process_setstat	./sftp-server.c	/^process_setstat(void)$/;"	f	file:
process_sign	./ssh-pkcs11-helper.c	/^process_sign(void)$/;"	f	file:
process_sign_request2	./ssh-agent.c	/^process_sign_request2(SocketEntry *e)$/;"	f	file:
process_stat	./sftp-server.c	/^process_stat(void)$/;"	f	file:
process_symlink	./sftp-server.c	/^process_symlink(void)$/;"	f	file:
process_write	./sftp-server.c	/^process_write(void)$/;"	f	file:
prompt	./sftp.c	/^prompt(EditLine *el)$/;"	f	file:
proposals_match	./kex.c	/^proposals_match(char *my[PROPOSAL_MAX], char *peer[PROPOSAL_MAX])$/;"	f	file:
proto_spec	./compat.c	/^proto_spec(const char *spec)$/;"	f
provider	./ssh-agent.c	/^	char *provider;$/;"	m	struct:identity	file:
provider	./ssh-pkcs11.c	/^	struct pkcs11_provider	*provider;$/;"	m	struct:pkcs11_key	typeref:struct:pkcs11_key::pkcs11_provider	file:
providername	./ssh-pkcs11-helper.c	/^	char		*providername;$/;"	m	struct:pkcs11_keyinfo	file:
proxy_command_pid	./sshconnect.c	/^static pid_t proxy_command_pid = 0;$/;"	v	file:
pthread_cancel	./auth-pam.c	/^pthread_cancel(sp_pthread_t thread)$/;"	f	file:
pthread_create	./auth-pam.c	/^pthread_create(sp_pthread_t *thread, const void *attr,$/;"	f	file:
pthread_exit	./auth-pam.c	/^pthread_exit(void *value)$/;"	f	file:
pthread_join	./auth-pam.c	/^pthread_join(sp_pthread_t thread, void **value)$/;"	f	file:
pty_allocate	./sshpty.c	/^pty_allocate(int *ptyfd, int *ttyfd, char *namebuf, size_t namebuflen)$/;"	f
pty_change_window_size	./sshpty.c	/^pty_change_window_size(int ptyfd, u_int row, u_int col,$/;"	f
pty_make_controlling_tty	./sshpty.c	/^pty_make_controlling_tty(int *ttyfd, const char *tty)$/;"	f
pty_release	./sshpty.c	/^pty_release(const char *tty)$/;"	f
pty_setowner	./sshpty.c	/^pty_setowner(struct passwd *pw, const char *tty)$/;"	f
pubkey_cleanup	./sshconnect2.c	/^pubkey_cleanup(Authctxt *authctxt)$/;"	f	file:
pubkey_prepare	./sshconnect2.c	/^pubkey_prepare(Authctxt *authctxt)$/;"	f	file:
put_host_port	./misc.c	/^put_host_port(const char *host, u_short port)$/;"	f
put_u16	./misc.c	/^put_u16(void *vp, u_int16_t v)$/;"	f
put_u32	./misc.c	/^put_u32(void *vp, u_int32_t v)$/;"	f
put_u64	./misc.c	/^put_u64(void *vp, u_int64_t v)$/;"	f
pw	./sftp-server.c	/^struct passwd *pw = NULL;$/;"	v	typeref:struct:passwd
pw_encode64	./auth2-jpake.c	/^pw_encode64(u_int i64)$/;"	f	file:
pw_encrypt	./sshconnect2.c	/^pw_encrypt(const char *password, const char *crypt_scheme, const char *salt)$/;"	f	file:
pwcopy	./misc.c	/^pwcopy(struct passwd *pw)$/;"	f
pwd	./scp.c	/^struct passwd *pwd;$/;"	v	typeref:struct:passwd
qfileout	./moduli.c	/^qfileout(FILE * ofile, u_int32_t otype, u_int32_t otests, u_int32_t otries,$/;"	f	file:
quiet	./ssh-keygen.c	/^int quiet = 0;$/;"	v
quit_pending	./clientloop.c	/^volatile sig_atomic_t quit_pending; \/* Set non-zero to quit the loop. *\/$/;"	v
r_ctx	./cipher-aes.c	/^	rijndael_ctx	r_ctx;$/;"	m	struct:ssh_rijndael_ctx	file:
r_iv	./cipher-aes.c	/^	u_char		r_iv[RIJNDAEL_BLOCKSIZE];$/;"	m	struct:ssh_rijndael_ctx	file:
rcon	./rijndael.c	/^static const u32 rcon[] = {$/;"	v	file:
read_bignum	./key.c	/^read_bignum(char **cpp, BIGNUM * value)$/;"	f	file:
read_bytes	./roaming_common.c	/^static u_int64_t read_bytes = 0;$/;"	v	file:
read_config_file	./readconf.c	/^read_config_file(const char *filename, const char *host, Options *options,$/;"	f
read_environment_file	./session.c	/^read_environment_file(char ***env, u_int *envsize,$/;"	f	file:
read_etc_default_login	./session.c	/^read_etc_default_login(char ***env, u_int *envsize, uid_t uid)$/;"	f	file:
read_keyfile_line	./misc.c	/^read_keyfile_line(FILE *f, const char *filename, char *buf, size_t bufsz,$/;"	f
read_mux	./channels.c	/^read_mux(Channel *c, u_int need)$/;"	f	file:
read_passphrase	./readpass.c	/^read_passphrase(const char *prompt, int flags)$/;"	f
read_wait	./ssh-keyscan.c	/^fd_set *read_wait;$/;"	v
read_wait_nfdset	./ssh-keyscan.c	/^size_t read_wait_nfdset;$/;"	v
readonly	./sftp-server.c	/^int readonly;$/;"	v
reaper	./ssh-agent.c	/^reaper(void)$/;"	f	file:
reason2txt	./channels.c	/^reason2txt(int reason)$/;"	f	file:
receive_context	./packet.c	/^	CipherContext receive_context;$/;"	m	struct:session_state	file:
received_sighup	./sshd.c	/^static volatile sig_atomic_t received_sighup = 0;$/;"	v	file:
received_signal	./clientloop.c	/^static volatile sig_atomic_t received_signal = 0;$/;"	v	file:
received_sigterm	./serverloop.c	/^static volatile sig_atomic_t received_sigterm = 0;$/;"	v	file:
received_sigterm	./sshd.c	/^static volatile sig_atomic_t received_sigterm = 0;$/;"	v	file:
received_window_change_signal	./clientloop.c	/^static volatile sig_atomic_t received_window_change_signal = 0;$/;"	v	file:
record_failed_login	./loginrec.c	/^record_failed_login(const char *username, const char *hostname,$/;"	f
record_login	./sshlogin.c	/^record_login(pid_t pid, const char *tty, const char *user, uid_t uid,$/;"	f
record_logout	./sshlogin.c	/^record_logout(pid_t pid, const char *tty, const char *user)$/;"	f
record_utmp_only	./sshlogin.c	/^record_utmp_only(pid_t pid, const char *ttyname, const char *user,$/;"	f
recv_bytes	./monitor.c	/^	u_int64_t recv_bytes;$/;"	m	struct:__anon8	file:
recv_msg	./ssh-pkcs11-client.c	/^recv_msg(Buffer *m)$/;"	f	file:
recv_rexec_state	./sshd.c	/^recv_rexec_state(int fd, Buffer *conf)$/;"	f	file:
ref_count	./clientloop.c	/^	int ref_count;$/;"	m	struct:global_confirm	file:
refcount	./ssh-pkcs11.c	/^	int			refcount;$/;"	m	struct:pkcs11_provider	file:
refresh_progress_meter	./progressmeter.c	/^refresh_progress_meter(void)$/;"	f
rekey_limit	./packet.c	/^	u_int32_t rekey_limit;$/;"	m	struct:session_state	file:
rekeying	./packet.c	/^	int rekeying;$/;"	m	struct:session_state	file:
remin	./scp.c	/^int errs, remin, remout;$/;"	v
remote_forward_confirms_received	./ssh.c	/^static int remote_forward_confirms_received = 0;$/;"	v	file:
remote_glob	./sftp-glob.c	/^remote_glob(struct sftp_conn *conn, const char *pattern, int flags,$/;"	f
remote_is_dir	./sftp.c	/^remote_is_dir(struct sftp_conn *conn, char *path)$/;"	f	file:
remote_pathp	./sftp.c	/^	char **remote_pathp;$/;"	m	struct:complete_ctx	file:
remote_protocol_flags	./packet.c	/^	u_int remote_protocol_flags;$/;"	m	struct:session_state	file:
remote_remote_args	./scp.c	/^arglist remote_remote_args;$/;"	v
remout	./scp.c	/^int errs, remin, remout;$/;"	v
remove_kbdint_device	./auth2-chall.c	/^remove_kbdint_device(const char *devname)$/;"	f
replacearg	./misc.c	/^replacearg(arglist *args, u_int which, char *fmt, ...)$/;"	f
request	./ssh-agent.c	/^	Buffer request;$/;"	m	struct:__anon19	file:
request_roaming	./roaming_client.c	/^request_roaming(void)$/;"	f
request_type	./clientloop.c	/^	const char *request_type;$/;"	m	struct:channel_reply_ctx	file:
resend_bytes	./roaming_common.c	/^resend_bytes(int fd, u_int64_t *offset)$/;"	f
respond_to_rsa_challenge	./sshconnect1.c	/^respond_to_rsa_challenge(BIGNUM * challenge, RSA * prv)$/;"	f	file:
response	./scp.c	/^response(void)$/;"	f
restore_uid	./uidswap.c	/^restore_uid(void)$/;"	f
resume_in_progress	./roaming_common.c	/^int resume_in_progress = 0;$/;"	v
resume_in_progress	./roaming_dummy.c	/^int resume_in_progress = 0;$/;"	v
resume_kex	./roaming_client.c	/^resume_kex(void)$/;"	f
resume_kex	./roaming_dummy.c	/^resume_kex(void)$/;"	f
reverse	./acss.c	/^static unsigned char reverse[] = {$/;"	v	file:
rexec_argc	./sshd.c	/^int rexec_argc = 0;$/;"	v
rexec_argv	./sshd.c	/^char **rexec_argv;$/;"	v
rexec_flag	./sshd.c	/^int rexec_flag = 1;$/;"	v
rexec_recv_rng_seed	./entropy.c	/^rexec_recv_rng_seed(Buffer *m)$/;"	f
rexec_send_rng_seed	./entropy.c	/^rexec_send_rng_seed(Buffer *m)$/;"	f
rexeced_flag	./sshd.c	/^int rexeced_flag = 0;$/;"	v
rid	./mux.c	/^	u_int rid;	\/* request id *\/$/;"	m	struct:mux_channel_confirm_ctx	file:
rid	./mux.c	/^	u_int rid;$/;"	m	struct:mux_session_confirm_ctx	file:
rijndaelDecrypt	./rijndael.c	/^static void rijndaelDecrypt(const u32 rk[\/*4*(Nr + 1)*\/], int Nr, const u8 ct[16], u8 pt[16]) {$/;"	f	file:
rijndaelEncrypt	./rijndael.c	/^static void rijndaelEncrypt(const u32 rk[\/*4*(Nr + 1)*\/], int Nr, const u8 pt[16], u8 ct[16]) {$/;"	f	file:
rijndaelKeySetupDec	./rijndael.c	/^rijndaelKeySetupDec(u32 rk[\/*4*(Nr + 1)*\/], const u8 cipherKey[], int keyBits,$/;"	f	file:
rijndaelKeySetupEnc	./rijndael.c	/^static int rijndaelKeySetupEnc(u32 rk[\/*4*(Nr + 1)*\/], const u8 cipherKey[], int keyBits) {$/;"	f	file:
rijndael_decrypt	./rijndael.c	/^rijndael_decrypt(rijndael_ctx *ctx, u_char *src, u_char *dst)$/;"	f
rijndael_encrypt	./rijndael.c	/^rijndael_encrypt(rijndael_ctx *ctx, u_char *src, u_char *dst)$/;"	f
rijndael_set_key	./rijndael.c	/^rijndael_set_key(rijndael_ctx *ctx, u_char *key, int bits, int do_encrypt)$/;"	f
rmspace	./ssh-pkcs11.c	/^rmspace(char *buf, size_t len)$/;"	f	file:
roam_set_bytes	./roaming_common.c	/^roam_set_bytes(u_int64_t sent, u_int64_t recvd)$/;"	f
roaming_atomicio	./roaming_common.c	/^roaming_atomicio(ssize_t(*f)(int, void*, size_t), int fd, void *buf,$/;"	f
roaming_auth_required	./roaming_client.c	/^roaming_auth_required(void)$/;"	f	file:
roaming_enabled	./roaming_common.c	/^int roaming_enabled = 0;$/;"	v
roaming_id	./roaming_client.c	/^static u_int32_t roaming_id;$/;"	v	file:
roaming_read	./roaming_common.c	/^roaming_read(int fd, void *buf, size_t count, int *cont)$/;"	f
roaming_read	./roaming_dummy.c	/^roaming_read(int fd, void *buf, size_t count, int *cont)$/;"	f
roaming_reply	./roaming_client.c	/^roaming_reply(int type, u_int32_t seq, void *ctxt)$/;"	f
roaming_resume	./roaming_client.c	/^roaming_resume(void)$/;"	f	file:
roaming_write	./roaming_common.c	/^roaming_write(int fd, const void *buf, size_t count, int *cont)$/;"	f
roaming_write	./roaming_dummy.c	/^roaming_write(int fd, const void *buf, size_t count, int *cont)$/;"	f
rsa_generate_additional_parameters	./rsa.c	/^rsa_generate_additional_parameters(RSA *rsa)$/;"	f
rsa_generate_private_key	./key.c	/^rsa_generate_private_key(u_int bits)$/;"	f	file:
rsa_key_allowed_in_file	./auth-rsa.c	/^rsa_key_allowed_in_file(struct passwd *pw, char *file,$/;"	f	file:
rsa_method	./ssh-pkcs11.c	/^	RSA_METHOD		rsa_method;$/;"	m	struct:pkcs11_key	file:
rsa_private_decrypt	./rsa.c	/^rsa_private_decrypt(BIGNUM *out, BIGNUM *in, RSA *key)$/;"	f
rsa_public_encrypt	./rsa.c	/^rsa_public_encrypt(BIGNUM *out, BIGNUM *in, RSA *key)$/;"	f
rsource	./scp.c	/^rsource(char *name, struct stat *statp)$/;"	f
run_err	./scp.c	/^run_err(const char *fmt,...)$/;"	f
sAcceptEnv	./servconf.c	/^	sGssAuthentication, sGssCleanupCreds, sAcceptEnv, sPermitTunnel,$/;"	e	enum:__anon13	file:
sAddressFamily	./servconf.c	/^	sListenAddress, sAddressFamily,$/;"	e	enum:__anon13	file:
sAllowAgentForwarding	./servconf.c	/^	sUsePrivilegeSeparation, sAllowAgentForwarding,$/;"	e	enum:__anon13	file:
sAllowGroups	./servconf.c	/^	sAllowUsers, sDenyUsers, sAllowGroups, sDenyGroups,$/;"	e	enum:__anon13	file:
sAllowTcpForwarding	./servconf.c	/^	sPermitUserEnvironment, sUseLogin, sAllowTcpForwarding, sCompression,$/;"	e	enum:__anon13	file:
sAllowUsers	./servconf.c	/^	sAllowUsers, sDenyUsers, sAllowGroups, sDenyGroups,$/;"	e	enum:__anon13	file:
sAuthorizedKeysFile	./servconf.c	/^	sClientAliveCountMax, sAuthorizedKeysFile,$/;"	e	enum:__anon13	file:
sAuthorizedPrincipalsFile	./servconf.c	/^	sRevokedKeys, sTrustedUserCAKeys, sAuthorizedPrincipalsFile,$/;"	e	enum:__anon13	file:
sBadOption	./servconf.c	/^	sBadOption,		\/* == unknown option *\/$/;"	e	enum:__anon13	file:
sBanner	./servconf.c	/^	sBanner, sUseDNS, sHostbasedAuthentication,$/;"	e	enum:__anon13	file:
sChallengeResponseAuthentication	./servconf.c	/^	sKerberosTgtPassing, sChallengeResponseAuthentication,$/;"	e	enum:__anon13	file:
sChrootDirectory	./servconf.c	/^	sMatch, sPermitOpen, sForceCommand, sChrootDirectory,$/;"	e	enum:__anon13	file:
sCiphers	./servconf.c	/^	sIgnoreUserKnownHosts, sCiphers, sMacs, sProtocol, sPidFile,$/;"	e	enum:__anon13	file:
sClientAliveCountMax	./servconf.c	/^	sClientAliveCountMax, sAuthorizedKeysFile,$/;"	e	enum:__anon13	file:
sClientAliveInterval	./servconf.c	/^	sHostbasedUsesNameFromPacketOnly, sClientAliveInterval,$/;"	e	enum:__anon13	file:
sCompression	./servconf.c	/^	sPermitUserEnvironment, sUseLogin, sAllowTcpForwarding, sCompression,$/;"	e	enum:__anon13	file:
sDenyGroups	./servconf.c	/^	sAllowUsers, sDenyUsers, sAllowGroups, sDenyGroups,$/;"	e	enum:__anon13	file:
sDenyUsers	./servconf.c	/^	sAllowUsers, sDenyUsers, sAllowGroups, sDenyGroups,$/;"	e	enum:__anon13	file:
sDeprecated	./servconf.c	/^	sDeprecated, sUnsupported$/;"	e	enum:__anon13	file:
sEmptyPasswd	./servconf.c	/^	sStrictModes, sEmptyPasswd, sTCPKeepAlive,$/;"	e	enum:__anon13	file:
sForceCommand	./servconf.c	/^	sMatch, sPermitOpen, sForceCommand, sChrootDirectory,$/;"	e	enum:__anon13	file:
sGatewayPorts	./servconf.c	/^	sGatewayPorts, sPubkeyAuthentication, sXAuthLocation, sSubsystem,$/;"	e	enum:__anon13	file:
sGssAuthentication	./servconf.c	/^	sGssAuthentication, sGssCleanupCreds, sAcceptEnv, sPermitTunnel,$/;"	e	enum:__anon13	file:
sGssCleanupCreds	./servconf.c	/^	sGssAuthentication, sGssCleanupCreds, sAcceptEnv, sPermitTunnel,$/;"	e	enum:__anon13	file:
sHostCertificate	./servconf.c	/^	sZeroKnowledgePasswordAuthentication, sHostCertificate,$/;"	e	enum:__anon13	file:
sHostKeyFile	./servconf.c	/^	sPort, sHostKeyFile, sServerKeyBits, sLoginGraceTime, sKeyRegenerationTime,$/;"	e	enum:__anon13	file:
sHostbasedAuthentication	./servconf.c	/^	sBanner, sUseDNS, sHostbasedAuthentication,$/;"	e	enum:__anon13	file:
sHostbasedUsesNameFromPacketOnly	./servconf.c	/^	sHostbasedUsesNameFromPacketOnly, sClientAliveInterval,$/;"	e	enum:__anon13	file:
sIPQoS	./servconf.c	/^	sKexAlgorithms, sIPQoS,$/;"	e	enum:__anon13	file:
sIgnoreRhosts	./servconf.c	/^	sPrintMotd, sPrintLastLog, sIgnoreRhosts,$/;"	e	enum:__anon13	file:
sIgnoreUserKnownHosts	./servconf.c	/^	sIgnoreUserKnownHosts, sCiphers, sMacs, sProtocol, sPidFile,$/;"	e	enum:__anon13	file:
sKbdInteractiveAuthentication	./servconf.c	/^	sPasswordAuthentication, sKbdInteractiveAuthentication,$/;"	e	enum:__anon13	file:
sKerberosAuthentication	./servconf.c	/^	sKerberosAuthentication, sKerberosOrLocalPasswd, sKerberosTicketCleanup,$/;"	e	enum:__anon13	file:
sKerberosGetAFSToken	./servconf.c	/^	sKerberosGetAFSToken,$/;"	e	enum:__anon13	file:
sKerberosOrLocalPasswd	./servconf.c	/^	sKerberosAuthentication, sKerberosOrLocalPasswd, sKerberosTicketCleanup,$/;"	e	enum:__anon13	file:
sKerberosTgtPassing	./servconf.c	/^	sKerberosTgtPassing, sChallengeResponseAuthentication,$/;"	e	enum:__anon13	file:
sKerberosTicketCleanup	./servconf.c	/^	sKerberosAuthentication, sKerberosOrLocalPasswd, sKerberosTicketCleanup,$/;"	e	enum:__anon13	file:
sKexAlgorithms	./servconf.c	/^	sKexAlgorithms, sIPQoS,$/;"	e	enum:__anon13	file:
sKeyRegenerationTime	./servconf.c	/^	sPort, sHostKeyFile, sServerKeyBits, sLoginGraceTime, sKeyRegenerationTime,$/;"	e	enum:__anon13	file:
sListenAddress	./servconf.c	/^	sListenAddress, sAddressFamily,$/;"	e	enum:__anon13	file:
sLogFacility	./servconf.c	/^	sPermitRootLogin, sLogFacility, sLogLevel,$/;"	e	enum:__anon13	file:
sLogLevel	./servconf.c	/^	sPermitRootLogin, sLogFacility, sLogLevel,$/;"	e	enum:__anon13	file:
sLoginGraceTime	./servconf.c	/^	sPort, sHostKeyFile, sServerKeyBits, sLoginGraceTime, sKeyRegenerationTime,$/;"	e	enum:__anon13	file:
sMacs	./servconf.c	/^	sIgnoreUserKnownHosts, sCiphers, sMacs, sProtocol, sPidFile,$/;"	e	enum:__anon13	file:
sMatch	./servconf.c	/^	sMatch, sPermitOpen, sForceCommand, sChrootDirectory,$/;"	e	enum:__anon13	file:
sMaxAuthTries	./servconf.c	/^	sMaxStartups, sMaxAuthTries, sMaxSessions,$/;"	e	enum:__anon13	file:
sMaxSessions	./servconf.c	/^	sMaxStartups, sMaxAuthTries, sMaxSessions,$/;"	e	enum:__anon13	file:
sMaxStartups	./servconf.c	/^	sMaxStartups, sMaxAuthTries, sMaxSessions,$/;"	e	enum:__anon13	file:
sPasswordAuthentication	./servconf.c	/^	sPasswordAuthentication, sKbdInteractiveAuthentication,$/;"	e	enum:__anon13	file:
sPermitOpen	./servconf.c	/^	sMatch, sPermitOpen, sForceCommand, sChrootDirectory,$/;"	e	enum:__anon13	file:
sPermitRootLogin	./servconf.c	/^	sPermitRootLogin, sLogFacility, sLogLevel,$/;"	e	enum:__anon13	file:
sPermitTunnel	./servconf.c	/^	sGssAuthentication, sGssCleanupCreds, sAcceptEnv, sPermitTunnel,$/;"	e	enum:__anon13	file:
sPermitUserEnvironment	./servconf.c	/^	sPermitUserEnvironment, sUseLogin, sAllowTcpForwarding, sCompression,$/;"	e	enum:__anon13	file:
sPidFile	./servconf.c	/^	sIgnoreUserKnownHosts, sCiphers, sMacs, sProtocol, sPidFile,$/;"	e	enum:__anon13	file:
sPort	./servconf.c	/^	sPort, sHostKeyFile, sServerKeyBits, sLoginGraceTime, sKeyRegenerationTime,$/;"	e	enum:__anon13	file:
sPrintLastLog	./servconf.c	/^	sPrintMotd, sPrintLastLog, sIgnoreRhosts,$/;"	e	enum:__anon13	file:
sPrintMotd	./servconf.c	/^	sPrintMotd, sPrintLastLog, sIgnoreRhosts,$/;"	e	enum:__anon13	file:
sProtocol	./servconf.c	/^	sIgnoreUserKnownHosts, sCiphers, sMacs, sProtocol, sPidFile,$/;"	e	enum:__anon13	file:
sPubkeyAuthentication	./servconf.c	/^	sGatewayPorts, sPubkeyAuthentication, sXAuthLocation, sSubsystem,$/;"	e	enum:__anon13	file:
sRSAAuthentication	./servconf.c	/^	sRhostsRSAAuthentication, sRSAAuthentication,$/;"	e	enum:__anon13	file:
sRevokedKeys	./servconf.c	/^	sRevokedKeys, sTrustedUserCAKeys, sAuthorizedPrincipalsFile,$/;"	e	enum:__anon13	file:
sRhostsRSAAuthentication	./servconf.c	/^	sRhostsRSAAuthentication, sRSAAuthentication,$/;"	e	enum:__anon13	file:
sServerKeyBits	./servconf.c	/^	sPort, sHostKeyFile, sServerKeyBits, sLoginGraceTime, sKeyRegenerationTime,$/;"	e	enum:__anon13	file:
sStrictModes	./servconf.c	/^	sStrictModes, sEmptyPasswd, sTCPKeepAlive,$/;"	e	enum:__anon13	file:
sSubsystem	./servconf.c	/^	sGatewayPorts, sPubkeyAuthentication, sXAuthLocation, sSubsystem,$/;"	e	enum:__anon13	file:
sTCPKeepAlive	./servconf.c	/^	sStrictModes, sEmptyPasswd, sTCPKeepAlive,$/;"	e	enum:__anon13	file:
sTrustedUserCAKeys	./servconf.c	/^	sRevokedKeys, sTrustedUserCAKeys, sAuthorizedPrincipalsFile,$/;"	e	enum:__anon13	file:
sUnsupported	./servconf.c	/^	sDeprecated, sUnsupported$/;"	e	enum:__anon13	file:
sUseDNS	./servconf.c	/^	sBanner, sUseDNS, sHostbasedAuthentication,$/;"	e	enum:__anon13	file:
sUseLogin	./servconf.c	/^	sPermitUserEnvironment, sUseLogin, sAllowTcpForwarding, sCompression,$/;"	e	enum:__anon13	file:
sUsePAM	./servconf.c	/^	sUsePAM,$/;"	e	enum:__anon13	file:
sUsePrivilegeSeparation	./servconf.c	/^	sUsePrivilegeSeparation, sAllowAgentForwarding,$/;"	e	enum:__anon13	file:
sX11DisplayOffset	./servconf.c	/^	sX11Forwarding, sX11DisplayOffset, sX11UseLocalhost,$/;"	e	enum:__anon13	file:
sX11Forwarding	./servconf.c	/^	sX11Forwarding, sX11DisplayOffset, sX11UseLocalhost,$/;"	e	enum:__anon13	file:
sX11UseLocalhost	./servconf.c	/^	sX11Forwarding, sX11DisplayOffset, sX11UseLocalhost,$/;"	e	enum:__anon13	file:
sXAuthLocation	./servconf.c	/^	sGatewayPorts, sPubkeyAuthentication, sXAuthLocation, sSubsystem,$/;"	e	enum:__anon13	file:
sZeroKnowledgePasswordAuthentication	./servconf.c	/^	sZeroKnowledgePasswordAuthentication, sHostCertificate,$/;"	e	enum:__anon13	file:
safely_chroot	./session.c	/^safely_chroot(const char *path, uid_t uid)$/;"	f	file:
sandbox_policy	./sandbox-systrace.c	/^struct sandbox_policy {$/;"	s	file:
sanitise_stdfd	./misc.c	/^sanitise_stdfd(void)$/;"	f
saved_argc	./sshd.c	/^int saved_argc;$/;"	v
saved_argv	./sshd.c	/^char **saved_argv;$/;"	v
saved_av	./ssh.c	/^static char **saved_av;$/;"	v	file:
saved_egid	./uidswap.c	/^static gid_t	saved_egid = 0;$/;"	v	file:
saved_egroups	./uidswap.c	/^static gid_t	*saved_egroups = NULL, *user_groups = NULL;$/;"	v	file:
saved_egroupslen	./uidswap.c	/^static int	saved_egroupslen = -1, user_groupslen = -1;$/;"	v	file:
saved_euid	./uidswap.c	/^static uid_t 	saved_euid = 0;$/;"	v	file:
sboxdec	./acss.c	/^static unsigned char sboxdec[] = {$/;"	v	file:
sboxenc	./acss.c	/^static unsigned char sboxenc[] = {$/;"	v	file:
schnorr_hash	./schnorr.c	/^schnorr_hash(const BIGNUM *p, const BIGNUM *q, const BIGNUM *g,$/;"	f	file:
schnorr_selftest	./schnorr.c	/^schnorr_selftest(void)$/;"	f	file:
schnorr_selftest_one	./schnorr.c	/^schnorr_selftest_one(const BIGNUM *grp_p, const BIGNUM *grp_q,$/;"	f	file:
schnorr_sign	./schnorr.c	/^schnorr_sign(const BIGNUM *grp_p, const BIGNUM *grp_q, const BIGNUM *grp_g,$/;"	f
schnorr_sign_buf	./schnorr.c	/^schnorr_sign_buf(const BIGNUM *grp_p, const BIGNUM *grp_q, const BIGNUM *grp_g,$/;"	f
schnorr_verify	./schnorr.c	/^schnorr_verify(const BIGNUM *grp_p, const BIGNUM *grp_q, const BIGNUM *grp_g,$/;"	f
schnorr_verify_buf	./schnorr.c	/^schnorr_verify_buf(const BIGNUM *grp_p, const BIGNUM *grp_q,$/;"	f
scope_id	./addrmatch.c	/^	u_int32_t	scope_id;	\/* iface scope id for v6 *\/$/;"	m	struct:xaddr	file:
scpio	./scp.c	/^scpio(void *_cnt, size_t s)$/;"	f	file:
sdirent_comp	./sftp.c	/^sdirent_comp(const void *aa, const void *bb)$/;"	f	file:
secure_filename	./auth.c	/^secure_filename(FILE *f, const char *file, struct passwd *pw,$/;"	f	file:
seed_from_prngd	./entropy.c	/^seed_from_prngd(unsigned char *buf, size_t bytes)$/;"	f	file:
seed_rng	./entropy.c	/^seed_rng(void)$/;"	f
selected	./audit-bsm.c	/^selected(char *username, uid_t uid, au_event_t event, int sf)$/;"	f	file:
send_attrib	./sftp-server.c	/^send_attrib(u_int32_t id, const Attrib *a)$/;"	f	file:
send_context	./packet.c	/^	CipherContext send_context;$/;"	m	struct:session_state	file:
send_data	./sftp-server.c	/^send_data(u_int32_t id, const char *data, int dlen)$/;"	f	file:
send_data_or_handle	./sftp-server.c	/^send_data_or_handle(char type, u_int32_t id, const char *data, int dlen)$/;"	f	file:
send_handle	./sftp-server.c	/^send_handle(u_int32_t id, int handle)$/;"	f	file:
send_msg	./sftp-client.c	/^send_msg(struct sftp_conn *conn, Buffer *m)$/;"	f	file:
send_msg	./sftp-server.c	/^send_msg(Buffer *m)$/;"	f	file:
send_msg	./ssh-pkcs11-client.c	/^send_msg(Buffer *m)$/;"	f	file:
send_msg	./ssh-pkcs11-helper.c	/^send_msg(Buffer *m)$/;"	f	file:
send_names	./sftp-server.c	/^send_names(u_int32_t id, int count, const Stat *stats)$/;"	f	file:
send_pubkey_test	./sshconnect2.c	/^send_pubkey_test(Authctxt *authctxt, Identity *id)$/;"	f	file:
send_read_request	./sftp-client.c	/^send_read_request(struct sftp_conn *conn, u_int id, u_int64_t offset,$/;"	f	file:
send_rexec_state	./sshd.c	/^send_rexec_state(int fd, Buffer *conf)$/;"	f	file:
send_status	./sftp-server.c	/^send_status(u_int32_t id, u_int32_t status)$/;"	f	file:
send_statvfs	./sftp-server.c	/^send_statvfs(u_int32_t id, struct statvfs *st)$/;"	f	file:
send_string_attrs_request	./sftp-client.c	/^send_string_attrs_request(struct sftp_conn *conn, u_int id, u_int code,$/;"	f	file:
send_string_request	./sftp-client.c	/^send_string_request(struct sftp_conn *conn, u_int id, u_int code, char *s,$/;"	f	file:
send_userauth_info_request	./auth2-chall.c	/^send_userauth_info_request(Authctxt *authctxt)$/;"	f	file:
sensitive	./sshconnect2.c	/^	Sensitive *sensitive;$/;"	m	struct:Authctxt	file:
sensitive_data	./ssh.c	/^Sensitive sensitive_data;$/;"	v
sensitive_data	./sshd.c	/^} sensitive_data;$/;"	v	typeref:struct:__anon21
sent_bytes	./monitor.c	/^	u_int64_t sent_bytes;$/;"	m	struct:__anon8	file:
seqnr	./packet.c	/^	u_int32_t seqnr;$/;"	m	struct:packet_state	file:
server_accept_inetd	./sshd.c	/^server_accept_inetd(int *sock_in, int *sock_out)$/;"	f	file:
server_accept_loop	./sshd.c	/^server_accept_loop(int *sock_in, int *sock_out, int *newsock, int *config_s)$/;"	f	file:
server_alive_check	./clientloop.c	/^server_alive_check(void)$/;"	f	file:
server_init_dispatch	./serverloop.c	/^server_init_dispatch(void)$/;"	f	file:
server_init_dispatch_13	./serverloop.c	/^server_init_dispatch_13(void)$/;"	f	file:
server_init_dispatch_15	./serverloop.c	/^server_init_dispatch_15(void)$/;"	f	file:
server_init_dispatch_20	./serverloop.c	/^server_init_dispatch_20(void)$/;"	f	file:
server_input_channel_open	./serverloop.c	/^server_input_channel_open(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_input_channel_req	./serverloop.c	/^server_input_channel_req(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_input_eof	./serverloop.c	/^server_input_eof(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_input_global_request	./serverloop.c	/^server_input_global_request(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_input_keep_alive	./serverloop.c	/^server_input_keep_alive(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_input_stdin_data	./serverloop.c	/^server_input_stdin_data(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_input_window_size	./serverloop.c	/^server_input_window_size(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
server_key	./sshd.c	/^	Key	*server_key;		\/* ephemeral server key *\/$/;"	m	struct:__anon21	file:
server_listen	./sshd.c	/^server_listen(void)$/;"	f	file:
server_loop	./serverloop.c	/^server_loop(pid_t pid, int fdin_arg, int fdout_arg, int fderr_arg)$/;"	f
server_loop2	./serverloop.c	/^server_loop2(Authctxt *authctxt)$/;"	f
server_request_direct_tcpip	./serverloop.c	/^server_request_direct_tcpip(void)$/;"	f	file:
server_request_session	./serverloop.c	/^server_request_session(void)$/;"	f	file:
server_request_tun	./serverloop.c	/^server_request_tun(void)$/;"	f	file:
server_side	./packet.c	/^	int server_side;$/;"	m	struct:session_state	file:
server_user	./sshconnect2.c	/^	const char *server_user;$/;"	m	struct:Authctxt	file:
server_version_string	./sshconnect.c	/^char *server_version_string = NULL;$/;"	v
server_version_string	./sshd.c	/^char *server_version_string = NULL;$/;"	v
service	./sshconnect2.c	/^	const char *service;$/;"	m	struct:Authctxt	file:
session	./ssh-pkcs11.c	/^	CK_SESSION_HANDLE	session;$/;"	m	struct:pkcs11_slotinfo	file:
session_auth_agent_req	./session.c	/^session_auth_agent_req(Session *s)$/;"	f	file:
session_break_req	./session.c	/^session_break_req(Session *s)$/;"	f	file:
session_by_channel	./session.c	/^session_by_channel(int id)$/;"	f	file:
session_by_pid	./session.c	/^session_by_pid(pid_t pid)$/;"	f	file:
session_by_tty	./session.c	/^session_by_tty(char *tty)$/;"	f
session_by_x11_channel	./session.c	/^session_by_x11_channel(int id)$/;"	f	file:
session_close	./session.c	/^session_close(Session *s)$/;"	f
session_close_by_channel	./session.c	/^session_close_by_channel(int id, void *arg)$/;"	f
session_close_by_pid	./session.c	/^session_close_by_pid(pid_t pid, int status)$/;"	f
session_close_single_x11	./session.c	/^session_close_single_x11(int id, void *arg)$/;"	f	file:
session_close_x11	./session.c	/^session_close_x11(int id)$/;"	f	file:
session_closed	./clientloop.c	/^static int session_closed;	\/* In SSH2: login session closed. *\/$/;"	v	file:
session_destroy_all	./session.c	/^session_destroy_all(void (*closefunc)(Session *))$/;"	f
session_dump	./session.c	/^session_dump(void)$/;"	f	file:
session_env_req	./session.c	/^session_env_req(Session *s)$/;"	f	file:
session_exec_req	./session.c	/^session_exec_req(Session *s)$/;"	f	file:
session_exit_message	./session.c	/^session_exit_message(Session *s, int status)$/;"	f	file:
session_id	./sshconnect1.c	/^u_char session_id[16];$/;"	v
session_id	./sshd.c	/^u_char session_id[16];$/;"	v
session_id2	./monitor.c	/^static u_char *session_id2 = NULL;$/;"	v	file:
session_id2	./sshconnect2.c	/^u_char *session_id2 = NULL;$/;"	v
session_id2	./sshd.c	/^u_char *session_id2 = NULL;$/;"	v
session_id2_len	./monitor.c	/^static u_int session_id2_len = 0;$/;"	v	file:
session_id2_len	./sshconnect2.c	/^u_int session_id2_len = 0;$/;"	v
session_id2_len	./sshd.c	/^u_int session_id2_len = 0;$/;"	v
session_ident	./clientloop.c	/^int	session_ident = -1;$/;"	v
session_input_channel_req	./session.c	/^session_input_channel_req(Channel *c, const char *rtype)$/;"	f
session_new	./session.c	/^session_new(void)$/;"	f
session_open	./session.c	/^session_open(Authctxt *authctxt, int chanid)$/;"	f
session_proctitle	./session.c	/^session_proctitle(Session *s)$/;"	f
session_pty_cleanup	./session.c	/^session_pty_cleanup(Session *s)$/;"	f
session_pty_cleanup2	./session.c	/^session_pty_cleanup2(Session *s)$/;"	f
session_pty_req	./session.c	/^session_pty_req(Session *s)$/;"	f	file:
session_resumed	./clientloop.c	/^int	session_resumed = 0;$/;"	v
session_set_fds	./session.c	/^session_set_fds(Session *s, int fdin, int fdout, int fderr, int ignore_fderr,$/;"	f
session_setup_sia	./auth-sia.c	/^session_setup_sia(struct passwd *pw, char *tty)$/;"	f
session_setup_x11fwd	./session.c	/^session_setup_x11fwd(Session *s)$/;"	f
session_shell_req	./session.c	/^session_shell_req(Session *s)$/;"	f	file:
session_state	./packet.c	/^struct session_state {$/;"	s	file:
session_subsystem_req	./session.c	/^session_subsystem_req(Session *s)$/;"	f	file:
session_tty_list	./session.c	/^session_tty_list(void)$/;"	f	file:
session_unused	./session.c	/^session_unused(int id)$/;"	f
session_window_change_req	./session.c	/^session_window_change_req(Session *s)$/;"	f	file:
session_x11_req	./session.c	/^session_x11_req(Session *s)$/;"	f	file:
sessions	./session.c	/^static Session *sessions = NULL;$/;"	v	file:
sessions_first_unused	./session.c	/^static int sessions_first_unused = -1;$/;"	v	file:
sessions_nalloc	./session.c	/^static int sessions_nalloc = 0;$/;"	v	file:
set_control_persist_exit_time	./clientloop.c	/^set_control_persist_exit_time(void)$/;"	f	file:
set_interactive_called	./packet.c	/^	int set_interactive_called;$/;"	m	struct:session_state	file:
set_log_handler	./log.c	/^set_log_handler(log_handler_fn *handler, void *ctx)$/;"	f
set_maxsize_called	./packet.c	/^	int set_maxsize_called;$/;"	m	struct:session_state	file:
set_newkeys	./packet.c	/^set_newkeys(int mode)$/;"	f
set_nodelay	./misc.c	/^set_nodelay(int fd)$/;"	f
set_nonblock	./misc.c	/^set_nonblock(int fd)$/;"	f
set_onload_flag	./misc.c	/^void set_onload_flag(){$/;"	f
set_out_buffer_size	./roaming_common.c	/^set_out_buffer_size(size_t size)$/;"	f
set_paddingdone_flag	./misc.c	/^void set_paddingdone_flag(){$/;"	f
set_tend_set	./misc.c	/^void set_tend_set(int val){$/;"	f
set_ts_end	./misc.c	/^void set_ts_end(unsigned long long val){$/;"	f
set_ts_start	./misc.c	/^void set_ts_start(unsigned long long val){$/;"	f
set_tstart_set	./misc.c	/^void set_tstart_set(int val){$/;"	f
set_unload_flag	./misc.c	/^void set_unload_flag(){$/;"	f
set_utmp_time	./loginrec.c	/^set_utmp_time(struct logininfo *li, struct utmp *ut)$/;"	f
set_utmpx_time	./loginrec.c	/^set_utmpx_time(struct logininfo *li, struct utmpx *utx)$/;"	f
setscreensize	./progressmeter.c	/^setscreensize(void)$/;"	f	file:
sftp_conn	./sftp-client.c	/^struct sftp_conn {$/;"	s	file:
sftp_proto_version	./sftp-client.c	/^sftp_proto_version(struct sftp_conn *conn)$/;"	f
sftp_server_cleanup_exit	./sftp-server.c	/^sftp_server_cleanup_exit(int i)$/;"	f
sftp_server_main	./sftp-server.c	/^sftp_server_main(int argc, char **argv, struct passwd *user_pw)$/;"	f
sftp_server_usage	./sftp-server.c	/^sftp_server_usage(void)$/;"	f	file:
sftpio	./sftp-client.c	/^sftpio(void *_bwlimit, size_t amount)$/;"	f	file:
should_set_writefd	./misc.c	/^int should_set_writefd(int truly_idle, unsigned long long time_to_write, struct timeval** tvp, struct timeval* tv){$/;"	f
showOptions	./logintest.c	/^showOptions(void)$/;"	f
show_cert	./ssh-keygen.c	/^int show_cert = 0;$/;"	v
show_options	./ssh-keygen.c	/^show_options(const Buffer *optbuf, int v00, int in_critical)$/;"	f	file:
show_other_keys	./sshconnect.c	/^show_other_keys(struct hostkeys *hostkeys, Key *key)$/;"	f	file:
showprogress	./scp.c	/^int showprogress = 1;$/;"	v
showprogress	./sftp.c	/^int showprogress = 1;$/;"	v
sieve_large	./moduli.c	/^sieve_large(u_int32_t s)$/;"	f	file:
sig2name	./session.c	/^sig2name(int sig)$/;"	f	file:
sig_winch	./progressmeter.c	/^sig_winch(int sig)$/;"	f	file:
sigchld_handler	./serverloop.c	/^sigchld_handler(int sig)$/;"	f	file:
sigdie	./log.c	/^sigdie(const char *fmt,...)$/;"	f
sighup_handler	./sshd.c	/^sighup_handler(int sig)$/;"	f	file:
sighup_restart	./sshd.c	/^sighup_restart(void)$/;"	f	file:
sign_and_send_pubkey	./sshconnect2.c	/^sign_and_send_pubkey(Authctxt *authctxt, Identity *id)$/;"	f	file:
signal_handler	./clientloop.c	/^signal_handler(int sig)$/;"	f	file:
sigterm_handler	./serverloop.c	/^sigterm_handler(int sig)$/;"	f	file:
sigterm_handler	./sshd.c	/^sigterm_handler(int sig)$/;"	f	file:
sink	./scp.c	/^sink(int argc, char **argv)$/;"	f
skey_device	./auth-skey.c	/^KbdintDevice skey_device = {$/;"	v
skey_free_ctx	./auth-skey.c	/^skey_free_ctx(void *ctx)$/;"	f	file:
skey_init_ctx	./auth-skey.c	/^skey_init_ctx(Authctxt *authctxt)$/;"	f	file:
skey_query	./auth-skey.c	/^skey_query(void *ctx, char **name, char **infotxt,$/;"	f
skey_respond	./auth-skey.c	/^skey_respond(void *ctx, u_int numresponses, char **responses)$/;"	f
slotidx	./ssh-pkcs11.c	/^	CK_ULONG		slotidx;$/;"	m	struct:pkcs11_key	file:
slotinfo	./ssh-pkcs11.c	/^	struct pkcs11_slotinfo	*slotinfo;$/;"	m	struct:pkcs11_provider	typeref:struct:pkcs11_provider::pkcs11_slotinfo	file:
slotlist	./ssh-pkcs11.c	/^	CK_SLOT_ID		*slotlist;$/;"	m	struct:pkcs11_provider	file:
smallbase	./moduli.c	/^static u_int32_t *SmallSieve, smallbits, smallbase;$/;"	v	file:
smallbits	./moduli.c	/^static u_int32_t *SmallSieve, smallbits, smallbase;$/;"	v	file:
sock_set_v6only	./misc.c	/^sock_set_v6only(int s)$/;"	f
sock_type	./ssh-agent.c	/^} sock_type;$/;"	t	typeref:enum:__anon18	file:
sockaddr_is_local	./sshconnect.c	/^sockaddr_is_local(struct sockaddr *hostaddr)$/;"	f	file:
socket_dir	./ssh-agent.c	/^char socket_dir[MAXPATHLEN];$/;"	v
socket_name	./ssh-agent.c	/^char socket_name[MAXPATHLEN];$/;"	v
sockets	./ssh-agent.c	/^SocketEntry *sockets = NULL;$/;"	v
sockets_alloc	./ssh-agent.c	/^u_int sockets_alloc = 0;$/;"	v
sort_flag	./sftp.c	/^int sort_flag;$/;"	v
source	./scp.c	/^source(int argc, char **argv)$/;"	f
sp_pthread_t	./auth-pam.c	/^typedef pid_t sp_pthread_t;$/;"	t	file:
sp_pthread_t	./auth-pam.c	/^typedef pthread_t sp_pthread_t;$/;"	t	file:
special_char_decode	./ttymodes.c	/^special_char_decode(u_int c)$/;"	f	file:
special_char_encode	./ttymodes.c	/^special_char_encode(cc_t c)$/;"	f	file:
speed_to_baud	./ttymodes.c	/^speed_to_baud(speed_t speed)$/;"	f	file:
ssh1_3des_cbc	./cipher-3des1.c	/^ssh1_3des_cbc(EVP_CIPHER_CTX *ctx, u_char *dest, const u_char *src,$/;"	f	file:
ssh1_3des_cleanup	./cipher-3des1.c	/^ssh1_3des_cleanup(EVP_CIPHER_CTX *ctx)$/;"	f	file:
ssh1_3des_ctx	./cipher-3des1.c	/^struct ssh1_3des_ctx$/;"	s	file:
ssh1_3des_init	./cipher-3des1.c	/^ssh1_3des_init(EVP_CIPHER_CTX *ctx, const u_char *key, const u_char *iv,$/;"	f	file:
ssh1_3des_iv	./cipher-3des1.c	/^ssh1_3des_iv(EVP_CIPHER_CTX *evp, int doset, u_char *iv, int len)$/;"	f
ssh1_challenge	./monitor.c	/^static BIGNUM *ssh1_challenge = NULL;	\/* used for ssh1 rsa auth *\/$/;"	v	file:
ssh1_cookie	./sshd.c	/^	u_char	ssh1_cookie[SSH_SESSION_KEY_LENGTH];$/;"	m	struct:__anon21	file:
ssh1_host_key	./sshd.c	/^	Key	*ssh1_host_key;		\/* ssh1 host key *\/$/;"	m	struct:__anon21	file:
ssh1_key	./packet.c	/^	u_char ssh1_key[SSH_SESSION_KEY_LENGTH];$/;"	m	struct:session_state	file:
ssh1_keylen	./packet.c	/^	u_int ssh1_keylen;$/;"	m	struct:session_state	file:
ssh1_session_key	./sshd.c	/^ssh1_session_key(BIGNUM *session_key_int)$/;"	f
ssh1cipher	./monitor.c	/^	int ssh1cipher;$/;"	m	struct:__anon8	file:
ssh1key	./monitor.c	/^	u_char *ssh1key;$/;"	m	struct:__anon8	file:
ssh1keylen	./monitor.c	/^	u_int ssh1keylen;$/;"	m	struct:__anon8	file:
ssh1protoflags	./monitor.c	/^	int ssh1protoflags;$/;"	m	struct:__anon8	file:
ssh2_capable	./ssh-keyscan.c	/^ssh2_capable(int remote_major, int remote_minor)$/;"	f	file:
ssh_add_identity_constrained	./authfd.c	/^ssh_add_identity_constrained(AuthenticationConnection *auth, Key *key,$/;"	f
ssh_aes_ctr	./cipher-ctr.c	/^ssh_aes_ctr(EVP_CIPHER_CTX *ctx, u_char *dest, const u_char *src,$/;"	f	file:
ssh_aes_ctr_cleanup	./cipher-ctr.c	/^ssh_aes_ctr_cleanup(EVP_CIPHER_CTX *ctx)$/;"	f	file:
ssh_aes_ctr_ctx	./cipher-ctr.c	/^struct ssh_aes_ctr_ctx$/;"	s	file:
ssh_aes_ctr_init	./cipher-ctr.c	/^ssh_aes_ctr_init(EVP_CIPHER_CTX *ctx, const u_char *key, const u_char *iv,$/;"	f	file:
ssh_aes_ctr_iv	./cipher-ctr.c	/^ssh_aes_ctr_iv(EVP_CIPHER_CTX *evp, int doset, u_char * iv, size_t len)$/;"	f
ssh_agent_present	./authfd.c	/^ssh_agent_present(void)$/;"	f
ssh_agent_sign	./authfd.c	/^ssh_agent_sign(AuthenticationConnection *auth,$/;"	f
ssh_askpass	./readpass.c	/^ssh_askpass(char *askpass, const char *msg)$/;"	f	file:
ssh_bsm_tid	./audit-bsm.c	/^static AuditInfoTermID ssh_bsm_tid;$/;"	v	file:
ssh_close_authentication_connection	./authfd.c	/^ssh_close_authentication_connection(AuthenticationConnection *auth)$/;"	f
ssh_close_authentication_socket	./authfd.c	/^ssh_close_authentication_socket(int sock)$/;"	f
ssh_confirm_remote_forward	./ssh.c	/^ssh_confirm_remote_forward(int type, u_int32_t seq, void *ctxt)$/;"	f	file:
ssh_connect	./sshconnect.c	/^ssh_connect(const char *host, struct sockaddr_storage * hostaddr,$/;"	f
ssh_crc32	./crc32.c	/^ssh_crc32(const u_char *buf, u_int32_t size)$/;"	f
ssh_create_socket	./sshconnect.c	/^ssh_create_socket(int privileged, struct addrinfo *ai)$/;"	f	file:
ssh_ctr_inc	./cipher-ctr.c	/^ssh_ctr_inc(u_char *ctr, size_t len)$/;"	f	file:
ssh_decrypt_challenge	./authfd.c	/^ssh_decrypt_challenge(AuthenticationConnection *auth,$/;"	f
ssh_dss_sign	./ssh-dss.c	/^ssh_dss_sign(const Key *key, u_char **sigp, u_int *lenp,$/;"	f
ssh_dss_verify	./ssh-dss.c	/^ssh_dss_verify(const Key *key, const u_char *signature, u_int signaturelen,$/;"	f
ssh_ecdsa_sign	./ssh-ecdsa.c	/^ssh_ecdsa_sign(const Key *key, u_char **sigp, u_int *lenp,$/;"	f
ssh_ecdsa_verify	./ssh-ecdsa.c	/^ssh_ecdsa_verify(const Key *key, const u_char *signature, u_int signaturelen,$/;"	f
ssh_encode_identity_rsa1	./authfd.c	/^ssh_encode_identity_rsa1(Buffer *b, RSA *key, const char *comment)$/;"	f	file:
ssh_encode_identity_ssh2	./authfd.c	/^ssh_encode_identity_ssh2(Buffer *b, Key *key, const char *comment)$/;"	f	file:
ssh_exchange_identification	./sshconnect.c	/^ssh_exchange_identification(int timeout_ms)$/;"	f
ssh_gai_strerror	./misc.c	/^ssh_gai_strerror(int gaierr)$/;"	f
ssh_get_authentication_connection	./authfd.c	/^ssh_get_authentication_connection(void)$/;"	f
ssh_get_authentication_socket	./authfd.c	/^ssh_get_authentication_socket(void)$/;"	f
ssh_get_first_identity	./authfd.c	/^ssh_get_first_identity(AuthenticationConnection *auth, char **comment, int version)$/;"	f
ssh_get_next_identity	./authfd.c	/^ssh_get_next_identity(AuthenticationConnection *auth, char **comment, int version)$/;"	f
ssh_get_num_identities	./authfd.c	/^ssh_get_num_identities(AuthenticationConnection *auth, int version)$/;"	f
ssh_gssapi_accept_ctx	./gss-serv.c	/^ssh_gssapi_accept_ctx(Gssctxt *ctx, gss_buffer_desc *recv_tok,$/;"	f
ssh_gssapi_acquire_cred	./gss-serv.c	/^ssh_gssapi_acquire_cred(Gssctxt *ctx)$/;"	f	file:
ssh_gssapi_build_ctx	./gss-genr.c	/^ssh_gssapi_build_ctx(Gssctxt **ctx)$/;"	f
ssh_gssapi_buildmic	./gss-genr.c	/^ssh_gssapi_buildmic(Buffer *b, const char *user, const char *service,$/;"	f
ssh_gssapi_check_mechanism	./gss-genr.c	/^ssh_gssapi_check_mechanism(Gssctxt **ctx, gss_OID oid, const char *host)$/;"	f
ssh_gssapi_check_oid	./gss-genr.c	/^ssh_gssapi_check_oid(Gssctxt *ctx, void *data, size_t len)$/;"	f
ssh_gssapi_checkmic	./gss-serv.c	/^ssh_gssapi_checkmic(Gssctxt *ctx, gss_buffer_t gssbuf, gss_buffer_t gssmic)$/;"	f
ssh_gssapi_cleanup_creds	./gss-serv.c	/^ssh_gssapi_cleanup_creds(void)$/;"	f
ssh_gssapi_delete_ctx	./gss-genr.c	/^ssh_gssapi_delete_ctx(Gssctxt **ctx)$/;"	f
ssh_gssapi_do_child	./gss-serv.c	/^ssh_gssapi_do_child(char ***envp, u_int *envsizep)$/;"	f
ssh_gssapi_error	./gss-genr.c	/^ssh_gssapi_error(Gssctxt *ctxt)$/;"	f
ssh_gssapi_getclient	./gss-serv.c	/^ssh_gssapi_getclient(Gssctxt *ctx, ssh_gssapi_client *client)$/;"	f
ssh_gssapi_import_name	./gss-genr.c	/^ssh_gssapi_import_name(Gssctxt *ctx, const char *host)$/;"	f
ssh_gssapi_init_ctx	./gss-genr.c	/^ssh_gssapi_init_ctx(Gssctxt *ctx, int deleg_creds, gss_buffer_desc *recv_tok,$/;"	f
ssh_gssapi_krb5_init	./gss-serv-krb5.c	/^ssh_gssapi_krb5_init(void)$/;"	f	file:
ssh_gssapi_krb5_storecreds	./gss-serv-krb5.c	/^ssh_gssapi_krb5_storecreds(ssh_gssapi_client *client)$/;"	f	file:
ssh_gssapi_krb5_userok	./gss-serv-krb5.c	/^ssh_gssapi_krb5_userok(ssh_gssapi_client *client, char *name)$/;"	f	file:
ssh_gssapi_last_error	./gss-genr.c	/^ssh_gssapi_last_error(Gssctxt *ctxt, OM_uint32 *major_status,$/;"	f
ssh_gssapi_parse_ename	./gss-serv.c	/^ssh_gssapi_parse_ename(Gssctxt *ctx, gss_buffer_t ename, gss_buffer_t name)$/;"	f	file:
ssh_gssapi_server_ctx	./gss-serv.c	/^ssh_gssapi_server_ctx(Gssctxt **ctx, gss_OID oid)$/;"	f
ssh_gssapi_set_oid	./gss-genr.c	/^ssh_gssapi_set_oid(Gssctxt *ctx, gss_OID oid)$/;"	f
ssh_gssapi_set_oid_data	./gss-genr.c	/^ssh_gssapi_set_oid_data(Gssctxt *ctx, void *data, size_t len)$/;"	f
ssh_gssapi_sign	./gss-genr.c	/^ssh_gssapi_sign(Gssctxt *ctx, gss_buffer_t buffer, gss_buffer_t hash)$/;"	f
ssh_gssapi_storecreds	./gss-serv.c	/^ssh_gssapi_storecreds(void)$/;"	f
ssh_gssapi_supported_oids	./gss-serv.c	/^ssh_gssapi_supported_oids(gss_OID_set *oidset)$/;"	f
ssh_gssapi_userok	./gss-serv.c	/^ssh_gssapi_userok(char *user)$/;"	f
ssh_init_forwarding	./ssh.c	/^ssh_init_forwarding(void)$/;"	f	file:
ssh_kex	./sshconnect1.c	/^ssh_kex(char *host, struct sockaddr *hostaddr)$/;"	f
ssh_kex2	./sshconnect2.c	/^ssh_kex2(char *host, struct sockaddr *hostaddr, u_short port)$/;"	f
ssh_keysign	./sshconnect2.c	/^ssh_keysign(Key *key, u_char **sigp, u_int *lenp,$/;"	f	file:
ssh_kill_proxy_command	./sshconnect.c	/^ssh_kill_proxy_command(void)$/;"	f
ssh_krb5_cc_gen	./auth-krb5.c	/^ssh_krb5_cc_gen(krb5_context ctx, krb5_ccache *ccache) {$/;"	f
ssh_local_cmd	./sshconnect.c	/^ssh_local_cmd(const char *args)$/;"	f
ssh_lock_agent	./authfd.c	/^ssh_lock_agent(AuthenticationConnection *auth, int lock, const char *password)$/;"	f
ssh_login	./sshconnect.c	/^ssh_login(Sensitive *sensitive, const char *orighost,$/;"	f
ssh_msg_recv	./msg.c	/^ssh_msg_recv(int fd, Buffer *m)$/;"	f
ssh_msg_send	./msg.c	/^ssh_msg_send(int fd, u_char type, Buffer *m)$/;"	f
ssh_port	./ssh-keyscan.c	/^int ssh_port = SSH_DEFAULT_PORT;$/;"	v
ssh_program	./scp.c	/^char *ssh_program = _PATH_SSH_PROGRAM;$/;"	v
ssh_proxy_connect	./sshconnect.c	/^ssh_proxy_connect(const char *host, u_short port, const char *proxy_command)$/;"	f	file:
ssh_put_password	./sshconnect.c	/^ssh_put_password(char *password)$/;"	f
ssh_remove_all_identities	./authfd.c	/^ssh_remove_all_identities(AuthenticationConnection *auth, int version)$/;"	f
ssh_remove_identity	./authfd.c	/^ssh_remove_identity(AuthenticationConnection *auth, Key *key)$/;"	f
ssh_request_reply	./authfd.c	/^ssh_request_reply(AuthenticationConnection *auth, Buffer *request, Buffer *reply)$/;"	f	file:
ssh_rijndael_cbc	./cipher-aes.c	/^ssh_rijndael_cbc(EVP_CIPHER_CTX *ctx, u_char *dest, const u_char *src,$/;"	f	file:
ssh_rijndael_cleanup	./cipher-aes.c	/^ssh_rijndael_cleanup(EVP_CIPHER_CTX *ctx)$/;"	f	file:
ssh_rijndael_ctx	./cipher-aes.c	/^struct ssh_rijndael_ctx$/;"	s	file:
ssh_rijndael_init	./cipher-aes.c	/^ssh_rijndael_init(EVP_CIPHER_CTX *ctx, const u_char *key, const u_char *iv,$/;"	f	file:
ssh_rijndael_iv	./cipher-aes.c	/^ssh_rijndael_iv(EVP_CIPHER_CTX *evp, int doset, u_char * iv, u_int len)$/;"	f
ssh_rsa_sign	./ssh-rsa.c	/^ssh_rsa_sign(const Key *key, u_char **sigp, u_int *lenp,$/;"	f
ssh_rsa_verify	./ssh-rsa.c	/^ssh_rsa_verify(const Key *key, const u_char *signature, u_int signaturelen,$/;"	f
ssh_sandbox	./sandbox-darwin.c	/^struct ssh_sandbox {$/;"	s	file:
ssh_sandbox	./sandbox-null.c	/^struct ssh_sandbox {$/;"	s	file:
ssh_sandbox	./sandbox-rlimit.c	/^struct ssh_sandbox {$/;"	s	file:
ssh_sandbox	./sandbox-systrace.c	/^struct ssh_sandbox {$/;"	s	file:
ssh_sandbox_child	./sandbox-darwin.c	/^ssh_sandbox_child(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_child	./sandbox-null.c	/^ssh_sandbox_child(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_child	./sandbox-rlimit.c	/^ssh_sandbox_child(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_child	./sandbox-systrace.c	/^ssh_sandbox_child(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_init	./sandbox-darwin.c	/^ssh_sandbox_init(void)$/;"	f
ssh_sandbox_init	./sandbox-null.c	/^ssh_sandbox_init(void)$/;"	f
ssh_sandbox_init	./sandbox-rlimit.c	/^ssh_sandbox_init(void)$/;"	f
ssh_sandbox_init	./sandbox-systrace.c	/^ssh_sandbox_init(void)$/;"	f
ssh_sandbox_parent	./sandbox-systrace.c	/^ssh_sandbox_parent(struct ssh_sandbox *box, pid_t child_pid,$/;"	f	file:
ssh_sandbox_parent_finish	./sandbox-darwin.c	/^ssh_sandbox_parent_finish(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_parent_finish	./sandbox-null.c	/^ssh_sandbox_parent_finish(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_parent_finish	./sandbox-rlimit.c	/^ssh_sandbox_parent_finish(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_parent_finish	./sandbox-systrace.c	/^ssh_sandbox_parent_finish(struct ssh_sandbox *box)$/;"	f
ssh_sandbox_parent_preauth	./sandbox-darwin.c	/^ssh_sandbox_parent_preauth(struct ssh_sandbox *box, pid_t child_pid)$/;"	f
ssh_sandbox_parent_preauth	./sandbox-null.c	/^ssh_sandbox_parent_preauth(struct ssh_sandbox *box, pid_t child_pid)$/;"	f
ssh_sandbox_parent_preauth	./sandbox-rlimit.c	/^ssh_sandbox_parent_preauth(struct ssh_sandbox *box, pid_t child_pid)$/;"	f
ssh_sandbox_parent_preauth	./sandbox-systrace.c	/^ssh_sandbox_parent_preauth(struct ssh_sandbox *box, pid_t child_pid)$/;"	f
ssh_session	./ssh.c	/^ssh_session(void)$/;"	f	file:
ssh_session2	./ssh.c	/^ssh_session2(void)$/;"	f	file:
ssh_session2_open	./ssh.c	/^ssh_session2_open(void)$/;"	f	file:
ssh_session2_setup	./ssh.c	/^ssh_session2_setup(int id, int success, void *arg)$/;"	f	file:
ssh_sha256_cleanup	./md-sha256.c	/^ssh_sha256_cleanup(EVP_MD_CTX *ctxt)$/;"	f	file:
ssh_sha256_final	./md-sha256.c	/^ssh_sha256_final(EVP_MD_CTX *ctxt, unsigned char *digest)$/;"	f	file:
ssh_sha256_init	./md-sha256.c	/^ssh_sha256_init(EVP_MD_CTX *ctxt)$/;"	f	file:
ssh_sha256_update	./md-sha256.c	/^ssh_sha256_update(EVP_MD_CTX *ctxt, const void *data, unsigned long len)$/;"	f	file:
ssh_update_card	./authfd.c	/^ssh_update_card(AuthenticationConnection *auth, int add,$/;"	f
ssh_userauth1	./sshconnect1.c	/^ssh_userauth1(const char *local_user, const char *server_user, char *host,$/;"	f
ssh_userauth2	./sshconnect2.c	/^ssh_userauth2(const char *local_user, const char *server_user, char *host,$/;"	f
sshd_exchange_identification	./sshd.c	/^sshd_exchange_identification(int sock_in, int sock_out)$/;"	f	file:
sshpam_account_status	./auth-pam.c	/^static int sshpam_account_status = -1;$/;"	v	file:
sshpam_auth_passwd	./auth-pam.c	/^sshpam_auth_passwd(Authctxt *authctxt, const char *password)$/;"	f
sshpam_authctxt	./auth-pam.c	/^static Authctxt *sshpam_authctxt = NULL;$/;"	v	file:
sshpam_authenticated	./auth-pam.c	/^static int sshpam_authenticated = 0;$/;"	v	file:
sshpam_authok	./monitor.c	/^static void *sshpam_ctxt, *sshpam_authok;$/;"	v	file:
sshpam_chauthtok_ruid	./auth-pam.c	/^sshpam_chauthtok_ruid(pam_handle_t *pamh, int flags)$/;"	f	file:
sshpam_cleanup	./auth-pam.c	/^sshpam_cleanup(void)$/;"	f
sshpam_const	./auth-pam.c	70;"	d	file:
sshpam_const	./auth-pam.c	72;"	d	file:
sshpam_cred_established	./auth-pam.c	/^static int sshpam_cred_established = 0;$/;"	v	file:
sshpam_ctxt	./monitor.c	/^static void *sshpam_ctxt, *sshpam_authok;$/;"	v	file:
sshpam_device	./auth-pam.c	/^KbdintDevice sshpam_device = {$/;"	v
sshpam_env	./auth-pam.c	/^static char **sshpam_env = NULL;$/;"	v	file:
sshpam_err	./auth-pam.c	/^static int sshpam_err = 0;$/;"	v	file:
sshpam_free_ctx	./auth-pam.c	/^sshpam_free_ctx(void *ctxtp)$/;"	f	file:
sshpam_handle	./auth-pam.c	/^static pam_handle_t *sshpam_handle = NULL;$/;"	v	file:
sshpam_init	./auth-pam.c	/^sshpam_init(Authctxt *authctxt)$/;"	f	file:
sshpam_init_ctx	./auth-pam.c	/^sshpam_init_ctx(Authctxt *authctxt)$/;"	f	file:
sshpam_null_conv	./auth-pam.c	/^sshpam_null_conv(int n, sshpam_const struct pam_message **msg,$/;"	f	file:
sshpam_oldsig	./auth-pam.c	/^static mysig_t sshpam_oldsig;$/;"	v	file:
sshpam_passwd_conv	./auth-pam.c	/^sshpam_passwd_conv(int n, sshpam_const struct pam_message **msg,$/;"	f	file:
sshpam_password	./auth-pam.c	/^static const char *sshpam_password = NULL;$/;"	v	file:
sshpam_password_change_required	./auth-pam.c	/^sshpam_password_change_required(int reqd)$/;"	f
sshpam_query	./auth-pam.c	/^sshpam_query(void *ctx, char **name, char **info,$/;"	f	file:
sshpam_respond	./auth-pam.c	/^sshpam_respond(void *ctx, u_int num, char **resp)$/;"	f	file:
sshpam_session_open	./auth-pam.c	/^static int sshpam_session_open = 0;$/;"	v	file:
sshpam_sigchld_handler	./auth-pam.c	/^sshpam_sigchld_handler(int sig)$/;"	f	file:
sshpam_store_conv	./auth-pam.c	/^sshpam_store_conv(int n, sshpam_const struct pam_message **msg,$/;"	f	file:
sshpam_thread	./auth-pam.c	/^sshpam_thread(void *ctxtp)$/;"	f	file:
sshpam_thread_cleanup	./auth-pam.c	/^sshpam_thread_cleanup(void)$/;"	f
sshpam_thread_conv	./auth-pam.c	/^sshpam_thread_conv(int n, sshpam_const struct pam_message **msg,$/;"	f	file:
sshpam_thread_status	./auth-pam.c	/^static int sshpam_thread_status = -1;$/;"	v	file:
sshpam_tty_conv	./auth-pam.c	/^sshpam_tty_conv(int n, sshpam_const struct pam_message **msg,$/;"	f	file:
sshpid	./sftp.c	/^static pid_t sshpid = -1;$/;"	v	file:
stalled	./progressmeter.c	/^static long stalled;		\/* how long we have been stalled *\/$/;"	v	file:
start	./progressmeter.c	/^static time_t start;		\/* start progress *\/$/;"	v	file:
start_pam	./auth-pam.c	/^start_pam(Authctxt *authctxt)$/;"	f
start_progress_meter	./progressmeter.c	/^start_progress_meter(char *f, off_t filesize, off_t *ctr)$/;"	f
startup_pipe	./sshd.c	/^int startup_pipe;		\/* in child *\/$/;"	v
startup_pipes	./sshd.c	/^int *startup_pipes = NULL;$/;"	v
stat_to_attrib	./sftp-common.c	/^stat_to_attrib(const struct stat *st, Attrib *a)$/;"	f
state	./umac.c	/^    UINT64 state[STREAMS];               \/* on-line state     *\/$/;"	m	struct:__anon24	file:
status_to_message	./sftp-server.c	/^status_to_message(u_int32_t status)$/;"	f	file:
stderr_buffer	./clientloop.c	/^static Buffer stderr_buffer;	\/* Buffer for stderr data. *\/$/;"	v	file:
stderr_buffer	./serverloop.c	/^static Buffer stderr_buffer;	\/* Buffer for stderr data. *\/$/;"	v	file:
stderr_bytes	./serverloop.c	/^static long stderr_bytes = 0;	\/* Number of stderr bytes sent to client. *\/$/;"	v	file:
stdin_buffer	./clientloop.c	/^static Buffer stdin_buffer;	\/* Buffer for stdin data. *\/$/;"	v	file:
stdin_buffer	./serverloop.c	/^static Buffer stdin_buffer;	\/* Buffer for stdin data. *\/$/;"	v	file:
stdin_bytes	./serverloop.c	/^static long stdin_bytes = 0;	\/* Number of bytes written to stdin. *\/$/;"	v	file:
stdin_eof	./clientloop.c	/^static int stdin_eof;		\/* EOF has been encountered on stderr. *\/$/;"	v	file:
stdin_eof	./serverloop.c	/^static int stdin_eof = 0;	\/* EOF message received from client. *\/$/;"	v	file:
stdin_null_flag	./ssh.c	/^int stdin_null_flag = 0;$/;"	v
stdio_forward_host	./ssh.c	/^char *stdio_forward_host = NULL;$/;"	v
stdio_forward_port	./ssh.c	/^int stdio_forward_port = 0;$/;"	v
stdout_buffer	./clientloop.c	/^static Buffer stdout_buffer;	\/* Buffer for stdout data. *\/$/;"	v	file:
stdout_buffer	./serverloop.c	/^static Buffer stdout_buffer;	\/* Buffer for stdout data. *\/$/;"	v	file:
stdout_bytes	./serverloop.c	/^static long stdout_bytes = 0;	\/* Number of stdout bytes sent to client. *\/$/;"	v	file:
stop_progress_meter	./progressmeter.c	/^stop_progress_meter(void)$/;"	f
store_conv	./auth-pam.c	/^static struct pam_conv store_conv = { sshpam_store_conv, NULL };$/;"	v	typeref:struct:pam_conv	file:
store_lastlog_message	./sshlogin.c	/^store_lastlog_message(const char *user, uid_t uid)$/;"	f	file:
strdelim	./misc.c	/^strdelim(char **s)$/;"	f
string_from_portable	./sftp-server.c	/^string_from_portable(int pflags)$/;"	f	file:
strnnsep	./ssh-keyscan.c	/^strnnsep(char **stringp, char *delim)$/;"	f	file:
subsystem_flag	./ssh.c	/^int subsystem_flag = 0;$/;"	v
success	./sshconnect2.c	/^	sig_atomic_t success;$/;"	m	struct:Authctxt	file:
supported	./sshconnect2.c	/^static char *supported = NULL;$/;"	v	file:
supported_authentications	./sshconnect1.c	/^u_int supported_authentications = 0;$/;"	v
supported_mechs	./gss-serv.c	/^ssh_gssapi_mech* supported_mechs[]= {$/;"	v
suspchild	./scp.c	/^suspchild(int signo)$/;"	f	file:
swap_bytes	./cipher-bf1.c	/^swap_bytes(const u_char *src, u_char *dst, int n)$/;"	f	file:
sys_auth_passwd	./auth-passwd.c	/^sys_auth_passwd(Authctxt *authctxt, const char *password)$/;"	f
sys_auth_passwd	./auth-sia.c	/^sys_auth_passwd(Authctxt *authctxt, const char *pass)$/;"	f
syscall	./sandbox-systrace.c	/^	int syscall;$/;"	m	struct:sandbox_policy	file:
syslogin_perform_login	./loginrec.c	/^syslogin_perform_login(struct logininfo *li)$/;"	f	file:
syslogin_perform_logout	./loginrec.c	/^syslogin_perform_logout(struct logininfo *li)$/;"	f	file:
syslogin_write_entry	./loginrec.c	/^syslogin_write_entry(struct logininfo *li)$/;"	f
systrace_fd	./sandbox-systrace.c	/^	int systrace_fd;$/;"	m	struct:ssh_sandbox	file:
t	./sftp.c	/^	const int t;$/;"	m	struct:CMD	file:
target_sent_bytes	./clientloop.c	/^static long target_sent_bytes = 0;$/;"	v	file:
target_sent_bytes	./serverloop.c	/^static long target_sent_bytes = 0;$/;"	v	file:
targetshouldbedirectory	./scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v
tau	./clientloop.c	/^static long tau;$/;"	v	file:
tau	./serverloop.c	/^static long tau;$/;"	v	file:
tau_arr	./misc.c	/^static long tau_arr[ARRSIZE];$/;"	v	file:
tau_index	./misc.c	/^static int tau_index = 0;$/;"	v	file:
tau_size	./misc.c	/^static int tau_size = 0;$/;"	v	file:
tcpconnect	./ssh-keyscan.c	/^tcpconnect(char *host)$/;"	f	file:
temporarily_use_uid	./uidswap.c	/^temporarily_use_uid(struct passwd *pw)$/;"	f
temporarily_use_uid_effective	./uidswap.c	/^static int	temporarily_use_uid_effective = 0;$/;"	v	file:
tend_set	./clientloop.c	/^static int tend_set = 0;$/;"	v	file:
tend_set	./misc.c	/^static int tend_set = 0;$/;"	v	file:
tend_set	./serverloop.c	/^static int tend_set = 0;$/;"	v	file:
term	./mux.c	/^	char *term;$/;"	m	struct:mux_session_confirm_ctx	file:
testAPI	./logintest.c	/^testAPI()$/;"	f
testLineName	./logintest.c	/^testLineName(char *line)$/;"	f
testOutput	./logintest.c	/^testOutput()$/;"	f
test_flag	./sshd.c	/^int test_flag = 0;$/;"	v
text	./servconf.c	/^	char *text;$/;"	m	struct:__anon15	file:
the_authctxt	./sshd.c	/^Authctxt *the_authctxt = NULL;$/;"	v
throughlocal	./scp.c	/^int throughlocal = 0;$/;"	v
tilde_expand_filename	./misc.c	/^tilde_expand_filename(const char *filename, uid_t uid)$/;"	f
tilde_expand_paths	./ssh.c	/^tilde_expand_paths(char **paths, u_int num_paths)$/;"	f	file:
time_arr	./misc.c	/^static unsigned long long time_arr[ARRSIZE];$/;"	v	file:
time_index	./misc.c	/^static int time_index = 0;$/;"	v	file:
time_size	./misc.c	/^static int time_size = 0;$/;"	v	file:
time_to_write	./clientloop.c	/^static unsigned long long time_to_write = 0;$/;"	v	file:
time_to_write	./serverloop.c	/^static unsigned long long time_to_write = 0;$/;"	v	file:
timeout	./ssh-keyscan.c	/^int timeout = 5;$/;"	v
timeout_connect	./sshconnect.c	/^timeout_connect(int sockfd, const struct sockaddr *serv_addr,$/;"	f	file:
tinybits	./moduli.c	/^static u_int32_t *TinySieve, tinybits;$/;"	v	file:
tio	./mux.c	/^	struct termios tio;$/;"	m	struct:mux_session_confirm_ctx	typeref:struct:mux_session_confirm_ctx::termios	file:
to64	./md5crypt.c	/^to64(unsigned long v, int n)$/;"	f	file:
tohex	./misc.c	/^tohex(const void *vp, size_t l)$/;"	f
token	./ssh-pkcs11.c	/^	CK_TOKEN_INFO		token;$/;"	m	struct:pkcs11_slotinfo	file:
tolocal	./scp.c	/^tolocal(int argc, char **argv)$/;"	f
toremote	./scp.c	/^toremote(char *targ, int argc, char **argv)$/;"	f
total_sent_bytes	./clientloop.c	/^static long total_sent_bytes = 0;$/;"	v	file:
total_sent_bytes	./serverloop.c	/^static long total_sent_bytes = 0;$/;"	v	file:
transfer_buflen	./sftp-client.c	/^	u_int transfer_buflen;$/;"	m	struct:sftp_conn	file:
tried	./sshconnect2.c	/^	int	tried;$/;"	m	struct:identity	file:
truly_idle	./clientloop.c	/^static int truly_idle = 1;$/;"	v	file:
truly_idle	./serverloop.c	/^static int truly_idle = 1;$/;"	v	file:
truncatebits	./mac.c	/^	int		truncatebits;	\/* truncate digest if != 0 *\/$/;"	m	struct:__anon6	file:
try_agent_authentication	./sshconnect1.c	/^try_agent_authentication(void)$/;"	f	file:
try_challenge_response_authentication	./sshconnect1.c	/^try_challenge_response_authentication(void)$/;"	f	file:
try_password_authentication	./sshconnect1.c	/^try_password_authentication(char *prompt)$/;"	f	file:
try_rhosts_rsa_authentication	./sshconnect1.c	/^try_rhosts_rsa_authentication(const char *local_user, Key * host_key)$/;"	f	file:
try_rsa_authentication	./sshconnect1.c	/^try_rsa_authentication(int idx)$/;"	f	file:
ts_end	./clientloop.c	/^static unsigned long long ts_end = 0;$/;"	v	file:
ts_end	./misc.c	/^static unsigned long long ts_end = 0;$/;"	v	file:
ts_end	./serverloop.c	/^static unsigned long long ts_end = 0;$/;"	v	file:
ts_start	./clientloop.c	/^static unsigned long long ts_start = 0; \/\/ gap interval$/;"	v	file:
ts_start	./misc.c	/^static unsigned long long ts_start = 0; \/\/ gap interval$/;"	v	file:
ts_start	./serverloop.c	/^static unsigned long long ts_start = 0; \/\/ gap interval$/;"	v	file:
tstart_set	./clientloop.c	/^static int tstart_set = 0;$/;"	v	file:
tstart_set	./misc.c	/^static int tstart_set = 0;$/;"	v	file:
tstart_set	./serverloop.c	/^static int tstart_set = 0;$/;"	v	file:
tty_conv	./auth-pam.c	/^static struct pam_conv tty_conv = { sshpam_tty_conv, NULL };$/;"	v	typeref:struct:pam_conv	file:
tty_flag	./ssh.c	/^int tty_flag = 0;$/;"	v
tty_make_modes	./ttymodes.c	/^tty_make_modes(int fd, struct termios *tiop)$/;"	f
tty_parse_modes	./ttymodes.c	/^tty_parse_modes(int fd, int *n_bytes_ptr)$/;"	f
tun_open	./misc.c	/^tun_open(int tun, int mode)$/;"	f
tunmode_desc	./servconf.c	/^} tunmode_desc[] = {$/;"	v	typeref:struct:__anon15	file:
type	./auth1.c	/^	int type;$/;"	m	struct:AuthMethod1	file:
type	./mac.c	/^	int		type;$/;"	m	struct:__anon6	file:
type	./monitor.c	/^	enum monitor_reqtype type;$/;"	m	struct:mon_table	typeref:enum:mon_table::monitor_reqtype	file:
type	./mux.c	/^	u_int type;$/;"	m	struct:__anon9	file:
type	./packet.c	/^	u_char type;$/;"	m	struct:packet	file:
type	./ssh-agent.c	/^	sock_type type;$/;"	m	struct:__anon19	file:
type_bits_valid	./ssh-keygen.c	/^type_bits_valid(int type, u_int32_t *bitsp)$/;"	f	file:
uhash_ctx	./umac.c	/^typedef struct uhash_ctx {$/;"	s	file:
uhash_ctx	./umac.c	/^} uhash_ctx;$/;"	t	typeref:struct:uhash_ctx	file:
uhash_ctx_t	./umac.c	/^typedef struct uhash_ctx *uhash_ctx_t;$/;"	t	typeref:struct:uhash_ctx	file:
uhash_final	./umac.c	/^static int uhash_final(uhash_ctx_t ctx, u_char *res)$/;"	f	file:
uhash_init	./umac.c	/^static void uhash_init(uhash_ctx_t ahc, aes_int_key prf_key)$/;"	f	file:
uhash_reset	./umac.c	/^static int uhash_reset(uhash_ctx_t pc)$/;"	f	file:
uhash_update	./umac.c	/^static int uhash_update(uhash_ctx_t ctx, u_char *input, long len)$/;"	f	file:
umac_ctx	./umac.c	/^struct umac_ctx {$/;"	s	file:
umac_ctx	./umac.c	/^} umac_ctx;$/;"	v	typeref:struct:umac_ctx
umac_delete	./umac.c	/^int umac_delete(struct umac_ctx *ctx)$/;"	f
umac_final	./umac.c	/^int umac_final(struct umac_ctx *ctx, u_char tag[], u_char nonce[8])$/;"	f
umac_new	./umac.c	/^struct umac_ctx *umac_new(u_char key[])$/;"	f
umac_update	./umac.c	/^int umac_update(struct umac_ctx *ctx, u_char *input, long len)$/;"	f
undo_glob_escape	./sftp.c	/^undo_glob_escape(char *s)$/;"	f	file:
unit	./progressmeter.c	/^static const char unit[] = " KMGT";$/;"	v	file:
unload_flag	./misc.c	/^static int unload_flag = 0;$/;"	v	file:
unset_nonblock	./misc.c	/^unset_nonblock(int fd)$/;"	f
unset_onload_flag	./misc.c	/^void unset_onload_flag(){$/;"	f
unset_paddingdone_flag	./misc.c	/^void unset_paddingdone_flag(){$/;"	f
unset_unload_flag	./misc.c	/^void unset_unload_flag(){$/;"	f
update_card	./ssh-add.c	/^update_card(AuthenticationConnection *ac, int add, const char *id)$/;"	f	file:
update_progress_meter	./progressmeter.c	/^update_progress_meter(int ignore)$/;"	f	file:
update_tau	./misc.c	/^long update_tau(long tau, long* boundary, unsigned long long* time_to_update, float* pre_rate, long total_sent_bytes, unsigned long long old_ts, long old_real_incoming, unsigned long long cur_ts, long cur_real_incoming, int outbuf_remain){$/;"	f
update_tau_interval	./misc.c	/^void update_tau_interval(unsigned long long ts_start, unsigned long long ts_end, long cur_total_realsent_bytes, int is_client){$/;"	f
update_tau_median	./misc.c	/^long update_tau_median(long tau, long* boundary, long total_sent_bytes){$/;"	f
update_time	./misc.c	/^unsigned long long update_time(unsigned long long now, long tau){				$/;"	f
upload_dir	./sftp-client.c	/^upload_dir(struct sftp_conn *conn, char *src, char *dst, int printflag,$/;"	f
upload_dir_internal	./sftp-client.c	/^upload_dir_internal(struct sftp_conn *conn, char *src, char *dst,$/;"	f	file:
usage	./scp.c	/^usage(void)$/;"	f
usage	./sftp.c	/^usage(void)$/;"	f	file:
usage	./ssh-add.c	/^usage(void)$/;"	f	file:
usage	./ssh-agent.c	/^usage(void)$/;"	f	file:
usage	./ssh-keygen.c	/^usage(void)$/;"	f	file:
usage	./ssh-keyscan.c	/^usage(void)$/;"	f	file:
usage	./ssh.c	/^usage(void)$/;"	f	file:
usage	./sshd.c	/^usage(void)$/;"	f	file:
use	./sftp-server.c	/^	int use;$/;"	m	struct:Handle	file:
use_privsep	./sshd.c	/^int use_privsep = -1;$/;"	v
user_cert_trusted_ca	./auth2-pubkey.c	/^user_cert_trusted_ca(struct passwd *pw, Key *key)$/;"	f	file:
user_groups	./uidswap.c	/^static gid_t	*saved_egroups = NULL, *user_groups = NULL;$/;"	v	file:
user_groupslen	./uidswap.c	/^static int	saved_egroupslen = -1, user_groupslen = -1;$/;"	v	file:
user_key_allowed	./auth2-pubkey.c	/^user_key_allowed(struct passwd *pw, Key *key)$/;"	f
user_key_allowed2	./auth2-pubkey.c	/^user_key_allowed2(struct passwd *pw, Key *key, char *file)$/;"	f	file:
userauth	./sshconnect2.c	/^	int	(*userauth)(Authctxt *authctxt);$/;"	m	struct:Authmethod	file:
userauth	./sshconnect2.c	/^userauth(Authctxt *authctxt, char *authlist)$/;"	f
userauth_banner	./auth2.c	/^userauth_banner(void)$/;"	f	file:
userauth_finish	./auth2.c	/^userauth_finish(Authctxt *authctxt, int authenticated, char *method)$/;"	f
userauth_gssapi	./auth2-gss.c	/^userauth_gssapi(Authctxt *authctxt)$/;"	f	file:
userauth_gssapi	./sshconnect2.c	/^userauth_gssapi(Authctxt *authctxt)$/;"	f
userauth_hostbased	./auth2-hostbased.c	/^userauth_hostbased(Authctxt *authctxt)$/;"	f	file:
userauth_hostbased	./sshconnect2.c	/^userauth_hostbased(Authctxt *authctxt)$/;"	f
userauth_jpake	./auth2-jpake.c	/^userauth_jpake(Authctxt *authctxt)$/;"	f	file:
userauth_jpake	./sshconnect2.c	/^userauth_jpake(Authctxt *authctxt)$/;"	f
userauth_jpake_cleanup	./sshconnect2.c	/^userauth_jpake_cleanup(Authctxt *authctxt)$/;"	f
userauth_kbdint	./auth2-kbdint.c	/^userauth_kbdint(Authctxt *authctxt)$/;"	f	file:
userauth_kbdint	./sshconnect2.c	/^userauth_kbdint(Authctxt *authctxt)$/;"	f
userauth_none	./auth2-none.c	/^userauth_none(Authctxt *authctxt)$/;"	f	file:
userauth_none	./sshconnect2.c	/^userauth_none(Authctxt *authctxt)$/;"	f
userauth_passwd	./auth2-passwd.c	/^userauth_passwd(Authctxt *authctxt)$/;"	f	file:
userauth_passwd	./sshconnect2.c	/^userauth_passwd(Authctxt *authctxt)$/;"	f
userauth_pubkey	./auth2-pubkey.c	/^userauth_pubkey(Authctxt *authctxt)$/;"	f	file:
userauth_pubkey	./sshconnect2.c	/^userauth_pubkey(Authctxt *authctxt)$/;"	f
userauth_send_banner	./auth2.c	/^userauth_send_banner(const char *msg)$/;"	f
userid	./scp.c	/^uid_t userid;$/;"	v
utmp_len	./sshd.c	/^u_int utmp_len = MAXHOSTNAMELEN;$/;"	v
utmp_perform_login	./loginrec.c	/^utmp_perform_login(struct logininfo *li)$/;"	f	file:
utmp_perform_logout	./loginrec.c	/^utmp_perform_logout(struct logininfo *li)$/;"	f	file:
utmp_write_direct	./loginrec.c	/^utmp_write_direct(struct logininfo *li, struct utmp *ut)$/;"	f	file:
utmp_write_entry	./loginrec.c	/^utmp_write_entry(struct logininfo *li)$/;"	f
utmp_write_library	./loginrec.c	/^utmp_write_library(struct logininfo *li, struct utmp *ut)$/;"	f	file:
utmpx_get_entry	./loginrec.c	/^utmpx_get_entry(struct logininfo *li)$/;"	f
utmpx_perform_login	./loginrec.c	/^utmpx_perform_login(struct logininfo *li)$/;"	f	file:
utmpx_perform_logout	./loginrec.c	/^utmpx_perform_logout(struct logininfo *li)$/;"	f	file:
utmpx_write_direct	./loginrec.c	/^utmpx_write_direct(struct logininfo *li, struct utmpx *utx)$/;"	f	file:
utmpx_write_entry	./loginrec.c	/^utmpx_write_entry(struct logininfo *li)$/;"	f
utmpx_write_library	./loginrec.c	/^utmpx_write_library(struct logininfo *li, struct utmpx *utx)$/;"	f	file:
uudecode	./uuencode.c	/^uudecode(const char *src, u_char *target, size_t targsize)$/;"	f
uuencode	./uuencode.c	/^uuencode(const u_char *src, u_int srclength,$/;"	f
v4	./addrmatch.c	/^		struct in_addr		v4;$/;"	m	union:xaddr::__anon1	typeref:struct:xaddr::__anon1::in_addr	file:
v4	./addrmatch.c	45;"	d	file:
v6	./addrmatch.c	/^		struct in6_addr		v6;$/;"	m	union:xaddr::__anon1	typeref:struct:xaddr::__anon1::in6_addr	file:
v6	./addrmatch.c	46;"	d	file:
val	./log.c	/^	LogLevel val;$/;"	m	struct:__anon5	file:
val	./log.c	/^	SyslogFacility val;$/;"	m	struct:__anon4	file:
val	./servconf.c	/^	int val;$/;"	m	struct:__anon15	file:
valid	./ssh-pkcs11.c	/^	int			valid;$/;"	m	struct:pkcs11_provider	file:
valid_crypt_salt	./auth2-jpake.c	/^valid_crypt_salt(int c)$/;"	f	file:
valid_request	./ssh-keysign.c	/^valid_request(struct passwd *pw, char *host, Key **ret, u_char *data,$/;"	f	file:
value	./misc.c	/^	int value;$/;"	m	struct:__anon7	file:
value	./servconf.c	/^	int value;$/;"	m	struct:multistate	file:
verbose	./log.c	/^verbose(const char *fmt,...)$/;"	f
verbose_mode	./scp.c	/^int verbose_mode = 0;$/;"	v
verify_host_key	./sshconnect.c	/^verify_host_key(char *host, struct sockaddr *hostaddr, Key *host_key)$/;"	f
verify_host_key_callback	./sshconnect2.c	/^verify_host_key_callback(Key *hostkey)$/;"	f	file:
verify_host_key_dns	./dns.c	/^verify_host_key_dns(const char *hostname, struct sockaddr *address,$/;"	f
verify_response	./auth-chall.c	/^verify_response(Authctxt *authctxt, const char *response)$/;"	f
verifydir	./scp.c	/^verifydir(char *cp)$/;"	f
version	./sftp-client.c	/^	u_int version;$/;"	m	struct:sftp_conn	file:
version	./sftp-server.c	/^u_int version;$/;"	v
wait_for_roaming_reconnect	./roaming_client.c	/^wait_for_roaming_reconnect(void)$/;"	f
wait_for_roaming_reconnect	./roaming_serv.c	/^wait_for_roaming_reconnect(void)$/;"	f
wait_until_can_do_something	./serverloop.c	/^wait_until_can_do_something(fd_set **readsetp, fd_set **writesetp, int *maxfdp,$/;"	f	file:
want_agent_fwd	./mux.c	/^	u_int want_agent_fwd;$/;"	m	struct:mux_session_confirm_ctx	file:
want_subsys	./mux.c	/^	u_int want_subsys;$/;"	m	struct:mux_session_confirm_ctx	file:
want_tty	./mux.c	/^	u_int want_tty;$/;"	m	struct:mux_session_confirm_ctx	file:
want_x_fwd	./mux.c	/^	u_int want_x_fwd;$/;"	m	struct:mux_session_confirm_ctx	file:
warn_changed_key	./sshconnect.c	/^warn_changed_key(Key *host_key)$/;"	f	file:
warn_expiry	./auth-passwd.c	/^warn_expiry(Authctxt *authctxt, auth_session_t *as)$/;"	f	file:
win_resized	./progressmeter.c	/^static volatile sig_atomic_t win_resized; \/* for window resizing *\/$/;"	v	file:
win_size	./progressmeter.c	/^static int win_size;		\/* terminal window size *\/$/;"	v	file:
window_change_handler	./clientloop.c	/^window_change_handler(int sig)$/;"	f	file:
wrap_key	./ssh-pkcs11-client.c	/^wrap_key(RSA *rsa)$/;"	f	file:
write_bignum	./key.c	/^write_bignum(FILE *f, BIGNUM *num)$/;"	f	file:
write_bytes	./roaming_common.c	/^static u_int64_t write_bytes = 0;$/;"	v	file:
wtmp_get_entry	./loginrec.c	/^wtmp_get_entry(struct logininfo *li)$/;"	f
wtmp_islogin	./loginrec.c	/^wtmp_islogin(struct logininfo *li, struct utmp *ut)$/;"	f	file:
wtmp_perform_login	./loginrec.c	/^wtmp_perform_login(struct logininfo *li)$/;"	f	file:
wtmp_perform_logout	./loginrec.c	/^wtmp_perform_logout(struct logininfo *li)$/;"	f	file:
wtmp_write	./loginrec.c	/^wtmp_write(struct logininfo *li, struct utmp *ut)$/;"	f	file:
wtmp_write_entry	./loginrec.c	/^wtmp_write_entry(struct logininfo *li)$/;"	f
wtmpx_get_entry	./loginrec.c	/^wtmpx_get_entry(struct logininfo *li)$/;"	f
wtmpx_islogin	./loginrec.c	/^wtmpx_islogin(struct logininfo *li, struct utmpx *utx)$/;"	f	file:
wtmpx_perform_login	./loginrec.c	/^wtmpx_perform_login(struct logininfo *li)$/;"	f	file:
wtmpx_perform_logout	./loginrec.c	/^wtmpx_perform_logout(struct logininfo *li)$/;"	f	file:
wtmpx_write	./loginrec.c	/^wtmpx_write(struct logininfo *li, struct utmpx *utx)$/;"	f	file:
wtmpx_write_entry	./loginrec.c	/^wtmpx_write_entry(struct logininfo *li)$/;"	f
x11_connect_display	./channels.c	/^x11_connect_display(void)$/;"	f
x11_create_display_inet	./channels.c	/^x11_create_display_inet(int x11_display_offset, int x11_use_localhost,$/;"	f
x11_fake_data	./channels.c	/^static u_char *x11_fake_data = NULL;$/;"	v	file:
x11_fake_data_len	./channels.c	/^static u_int x11_fake_data_len;$/;"	v	file:
x11_input_open	./channels.c	/^x11_input_open(int type, u_int32_t seq, void *ctxt)$/;"	f
x11_open_helper	./channels.c	/^x11_open_helper(Buffer *b)$/;"	f	file:
x11_refuse_time	./clientloop.c	/^static int x11_refuse_time;	\/* If >0, refuse x11 opens after this time. *\/$/;"	v	file:
x11_request_forwarding_with_spoofing	./channels.c	/^x11_request_forwarding_with_spoofing(int client_session_id, const char *disp,$/;"	f
x11_saved_data	./channels.c	/^static char *x11_saved_data = NULL;$/;"	v	file:
x11_saved_data_len	./channels.c	/^static u_int x11_saved_data_len = 0;$/;"	v	file:
x11_saved_display	./channels.c	/^static char *x11_saved_display = NULL;$/;"	v	file:
x11_saved_proto	./channels.c	/^static char *x11_saved_proto = NULL;$/;"	v	file:
xa	./addrmatch.c	/^	} xa;		    \/* 128-bit address *\/$/;"	m	struct:xaddr	typeref:union:xaddr::__anon1	file:
xaddr	./addrmatch.c	/^struct xaddr {$/;"	s	file:
xasprintf	./xmalloc.c	/^xasprintf(char **ret, const char *fmt, ...)$/;"	f
xcalloc	./xmalloc.c	/^xcalloc(size_t nmemb, size_t size)$/;"	f
xfree	./xmalloc.c	/^xfree(void *ptr)$/;"	f
xmalloc	./xmalloc.c	/^xmalloc(size_t size)$/;"	f
xrealloc	./xmalloc.c	/^xrealloc(void *ptr, size_t nmemb, size_t size)$/;"	f
xstrdup	./xmalloc.c	/^xstrdup(const char *str)$/;"	f
xstrsep	./ssh-keyscan.c	/^xstrsep(char **str, const char *delim)$/;"	f	file:
xxx_host	./sshconnect2.c	/^char *xxx_host;$/;"	v
xxx_hostaddr	./sshconnect2.c	/^struct sockaddr *xxx_hostaddr;$/;"	v	typeref:struct:sockaddr
xxx_kex	./sshconnect2.c	/^Kex *xxx_kex = NULL;$/;"	v
xxx_kex	./sshd.c	/^Kex *xxx_kex;$/;"	v
zero_pad	./umac.c	/^static void zero_pad(UINT8 *p, int nbytes)$/;"	f	file:
